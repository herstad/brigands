{"version":3,"sources":["PlayingField.js","stateGenerator.js","itemsUtil.js","movement.js","functional.js","reducer.js","Orders.js","InfoPane.js","WinDialog.js","App.js","serviceWorker.js","index.js"],"names":["typeIcons","o","x","mounted","grass","tree","water","rock","dead","farm","crop","planted","getIcon","elem","hp","type","createMatrix","n","arguments","length","undefined","items","matrix","y","createAtPosition","find","item","PlayingFieldCell","_ref","id","dispatch","useContext","ReducerDispatch","react_default","a","createElement","TableCell_default","IconButton_default","onClick","payload","Icon_default","PlayingField","state","className","Table_default","padding","TableBody_default","map","row","TableRow_default","key","PLAYERS","generateState","console","log","generateItems","turn","activePlayerId","selectedId","winner","events","itemId","behaviors","training","generateId","size","units","playerId","ap","behaviorName","conditionalActions","activeEvent","resources","genPos","generatePosition","concat","defaultValues","i","push","generateDefaultItems","points","generateRandomMatrix","Object","objectSpread","shift","array","Array","from","keys","flat","shuffleArray","j","Math","floor","random","isPlayer","getItemById","getItemsByPlayer","filter","matchPlayer","getItemByXYAndType","selectedItem","findItemByType","getItemsByXY","getEnemyItems","player","flatMap","otherPlayer","inRange","attacker","target","range","abs","updateItem","updatedItem","updateItemByIdFn","updateItemById","replaceItems","replacements","obj","updateItems","predicate","updateItemFn","el","toward","mover","xd","yd","sign","move","direction","_direction","pipe","_len2","fns","_key2","reduce","v","f","selectItemById","selectSelectedItem","selectEventBehavior","eventType","nextPlayer","index","findIndex","nextTurn","slice","getWinner","isLoser","every","consumeAp","action","condition","agent","agentId","getAgent","conditionalAction","behaviorTraining","postAction","createBuilding","builderId","builder","createBuildingOn","buildingType","targetId","clearedItems","building","createdTurn","toConsumableArray","plantedShouldGrow","hasBehaviorForEvent","event","getNextAction","setUnitBehaviorAction","reducer","apItems","grownCrops","newCrops","cropEvents","e","updatedEventItems","nextAction","getTarget","updatedTarget","s","addedResourceState","updatedAgent","name","_agent3$behaviorTrain","behavior","updatedBehavior","defineProperty","updatedBehaviorState","farmerHasFarm","some","getButtonColor","isSelectedAction","playerItemsWithAp","TurnButton","_useContext","Button_default","forEach","playerItem","shouldDisplayOrder","unitHasAp","AttackButton","_useContext2","color","moveCondition","compareDistance","firstEl","secondEl","distance","calculateDistance","targetClosestType","sort","targetHome","handleMove","MoveToGrassButton","MoveButton","targetName","getActiveEvent","MoveToEventButton","MoveToHomeButton","_ref2","_useContext6","handleMoveClick","BuildFarmButton","_useContext7","PlantCropButton","_useContext8","HarvestCropButton","_useContext9","unloadResourceCondition","UnloadResourceButton","_useContext10","Orders","Card_default","CardContent_default","enemy","UnitCard","selected","relativeHp","defaultEvent","Typography_default","LinearProgress_default","variant","value","TrainEventButton","FinishTrainEventButton","SelectEventButton","_useContext3","_useContext4","EventCard","_ref3","_ref4","EventsInfo","selectedUnit","InfoPane","WinDialog","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","React","createContext","initialState","Boolean","window","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","slicedToArray","CssBaseline_default","Grid_default","container","justify","spacing","Provider","xs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9061ed1d.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport {ReducerDispatch} from \"./App\";\n\nconst typeIcons = {\n  o: 'android',\n  x: 'directions_walk',\n  mounted: 'direction_bike',\n  grass: 'crop_free',\n  tree: 'nature',\n  water: 'waves',\n  rock: 'landscape',\n  dead: 'airline_seat_flat',\n  farm: 'home',\n  crop: 'local_florist',\n  planted: 'minimize',\n\n};\n\nconst getIcon = (elem) => elem.hp < 1 ? typeIcons['dead'] : typeIcons[elem.type] || 'crop_free';\n\nconst createMatrix = (n = 10, items) => {\n  let matrix = [];\n  for (let y = 0; y < n; y++) {\n    matrix[y] = [];\n    for (let x = 0; x < n; x++) {\n      matrix[y][x] = createAtPosition(items, x, y);\n    }\n  }\n  return matrix;\n};\n\nconst createAtPosition = (items = [], x, y) => {\n  return items.find((item) => item.x === x && item.y === y) || {x: x, y: y, type: '.'}\n};\n\nfunction PlayingFieldCell({elem}) {\n  const {dispatch} = useContext(ReducerDispatch);\n  const handleSetSelected = (id) => () => {\n    dispatch({type: 'SET_SELECTED', payload: id});\n  };\n  return (\n    <TableCell>\n      <IconButton\n        onClick={handleSetSelected(elem.id)}><Icon>{getIcon(elem)}</Icon></IconButton>\n    </TableCell>);\n}\n\nexport default function PlayingField() {\n  const {items} = useContext(ReducerDispatch).state;\n  const matrix = createMatrix(10, items);\n  return <div className=\"PlayingField\">\n    <Table padding=\"none\">\n      <TableBody>\n        {\n          (matrix.map(row =>\n            <TableRow key={row[0].y}>{\n              row.map(elem => <PlayingFieldCell key={'x' + elem.x + 'y' + elem.y} elem={elem}/>)}\n            </TableRow>))\n        }\n      </TableBody>\n    </Table>\n  </div>;\n}\n","export const PLAYERS = ['human']; // TODO readd ai bug where ai shares behavior and consumes ap\n// export const PLAYERS =  ['human', 'ai'];\n\nexport const generateState = () => {\n  console.log(\"generate state\");\n\n  const items = generateItems();\n  return {\n    turn: 0,\n    activePlayerId: PLAYERS[0],\n    items,\n    selectedId: items[0].id,\n    winner: undefined,\n    events: [{type: 'ENEMY_SPOTTED', itemId: items[1].id}, {type: 'GAME_STARTED'}],\n    behaviors: {},\n    training: false,\n  };\n};\n\nlet itemId = 0;\n\nexport const generateId = () => {\n  itemId++;\n  return itemId;\n};\n\nconst generateDefaultItems = (size) => {\n  const defaultValues = [];\n  for (let i = 0; i < size; i++) {\n    defaultValues.push({id: generateId(), type: 'grass'});\n  }\n  return defaultValues;\n};\n\nconst generateItems = (size = 10) => {\n  const units = [\n    {\n      id: generateId(),\n      hp: 5, type: 'x',\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: 'DEFAULT_EVENT'},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: 'o',\n      playerId: 'ai',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: 'DEFAULT_EVENT'},\n      resources: [],\n    },\n  ];\n\n  const items = [\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'water'},\n    {id: generateId(), type: 'water'},\n    {id: generateId(), type: 'water'},\n  ];\n\n  const genPos = generatePosition(size);\n  return genPos(units).concat(genPos(items.concat(generateDefaultItems(size * size - items.length))));\n};\n\nconst generatePosition = (size) => (items) => {\n  const points = generateRandomMatrix(size);\n  return items.map((item) => ({...item, ...points.shift()}));\n};\n\nconst generateRandomMatrix = (size) => {\n  const array = Array.from(Array(size).keys());\n  const matrix = array.map((x) => {\n    return array.map((y) => {\n      return {x, y};\n    })\n  }).flat();\n  shuffleArray(matrix);\n  return matrix;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};","import {PLAYERS} from \"./stateGenerator\";\n\nexport const isPlayer = (playerId, item) => item.playerId === playerId;\nexport const matchPlayer = (playerId) => (item) => isPlayer(playerId, item);\nexport const getItemById = (id, items) => items.find((item) => item.id === id);\nexport const getItemsByPlayer = (playerId, items) => items.filter(matchPlayer(playerId));\nexport const getItemsByXY = items => ({x, y}) => items.filter((item) => item.x === x && item.y === y);\nexport const getItemByXYAndType = items => selectedItem => type => findItemByType(getItemsByXY(items)(selectedItem))(type);\nexport const findItemByType = items => type => items.find(item => item.type === type);\nexport const removeItemById = (id, items) => items.filter((item) => item.id !== id);\nexport const getEnemyItems = (state) => {\n  const otherPlayers = PLAYERS.filter((player) => state.activePlayerId !== player);\n  return otherPlayers.flatMap((otherPlayer) => getItemsByPlayer(otherPlayer, state.items));\n};\nexport const inRange = (attacker, target, range = 1) => {\n  return Math.abs(target.x - attacker.x) + Math.abs(target.y - attacker.y) <= range;\n};\n\nexport const updateItem = updatedItem => state => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const updateItemById = (updatedItem, state) => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const replaceItems = items => replacements => {\n  return items.map(obj => replacements.find(o => o.id === obj.id) || obj);\n};\n\nexport const updateItems = predicate => updatedItem => items => {\n  return items.map(updateItemFn(predicate)(updatedItem));\n};\n\nexport const updateItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? {...el, ...updatedItem} : el);\n};\n\nexport const replaceItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? updatedItem : el);\n};\n\nexport const updateItemByIdFn = (updatedItem) => {\n  return updateItemFn(el => updatedItem.id === el.id)(updatedItem);\n};\n\nexport const matchId = (id) => {\n  return (item) => item.id === id;\n};","export const toward = target => mover => {\n  const xd = target.x - mover.x;\n  const yd = target.y - mover.y;\n  return Math.abs(xd) > Math.abs(yd) ? {x: Math.sign(xd), y: 0} : {x: 0, y: Math.sign(yd)};\n};\n\nexport const move = (mover, direction) => {\n  const {x, y} = direction(mover);\n  return {...mover, x: (mover.x + x), y: (mover.y + y)}\n};","export const compose = (...fns) => (x) => fns.reduceRight((v, f) => f(v), x);\nexport const pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\n","import {generateId, generateState, PLAYERS} from \"./stateGenerator\";\nimport {\n  getItemById,\n  getItemByXYAndType,\n  getItemsByPlayer,\n  inRange,\n  isPlayer,\n  removeItemById,\n  replaceItems,\n  updateItem,\n  updateItemById,\n  updateItems\n} from \"./itemsUtil\";\nimport {move, toward} from \"./movement\";\nimport {pipe} from \"./functional\";\n\nexport const ACTION_TYPES = {};\n\nexport const selectItemById = id => state => getItemById(id, state.items);\n\nexport const selectSelectedItem = (state) => getItemById(state.selectedId, state.items);\n\nconst selectEventBehavior = behaviorName => eventType => state => {\n  const behavior = state.behaviors[behaviorName] || {};\n  const eventBehavior = behavior[eventType] || {};\n  return eventBehavior.conditionalActions || [];\n};\n\nexport const selectEvents = state => state.events;\n\nconst nextPlayer = (activePlayerId) => {\n  const index = PLAYERS.findIndex((id) => id === activePlayerId);\n  return PLAYERS[(index + 1) % PLAYERS.length];\n};\n\nconst nextTurn = (turn, activePlayerId) => PLAYERS.slice(-1)[0] === activePlayerId ? turn + 1 : turn;\n\nconst getWinner = (state) => {\n  return isLoser('ai', state.items) ? 'human' : isLoser('human', state.items) ? 'ai' : undefined;\n};\n\nconst isLoser = (playerId, items) => {\n  return getItemsByPlayer(playerId, items).every((item) => item.hp <= 0);\n};\n\nconst consumeAp = (action, state) => {\n  const {condition} = action.payload;\n  // TODO require getAgent\n  const agent = action.payload.agentId !== undefined ? selectItemById(action.payload.agentId)(state) : action.payload.getAgent(state);\n  const selectedItem = {\n    ...agent,\n    ap: 0,\n    action,\n    condition,\n  };\n  // TODO rewrite without if\n  if (!!selectedItem.training) {\n    const conditionalAction = {action, condition};\n    selectedItem.behaviorTraining.conditionalActions.push(conditionalAction);\n  } else if (selectedItem.conditionalActions) {\n    const index = selectedItem.conditionalActions.findIndex(conditionalAction => conditionalAction.action.type === action.type);\n    if (index > 0) {\n      selectedItem.conditionalActions = selectedItem.conditionalActions.slice(index);\n    }\n  }\n  return updateItem(selectedItem)(state);\n};\n\nconst postAction = action => state => consumeAp(action, state);\n\nconst createBuilding = (builderId, type, state) => {\n  const builder = selectItemById(builderId)(state);\n  const target = getItemByXYAndType(state.items)(builder)('grass');\n  return createBuildingOn(builderId)(type)(target.id)(state);\n};\n\nconst createBuildingOn = builderId => buildingType => targetId => state => {\n  const builder = selectItemById(builderId)(state);\n  const clearedItems = removeItemById(targetId, state.items);\n  const building = {\n    id: generateId(),\n    builderId,\n    x: builder.x,\n    y: builder.y,\n    type: buildingType,\n    createdTurn: state.turn,\n    resources: [],\n  };\n  return {...state, items: [...clearedItems, building]}\n};\n\nconst plantedShouldGrow = turn => item => item.type === 'planted' && item.createdTurn + 5 <= turn;\n\nconst hasBehaviorForEvent = item => event => state => {\n  const behavior = selectEventBehavior(item.behaviorName)(event.type)(state);\n  return !!behavior.length;\n};\n\n// TODO remove original\nconst getNextAction = state => conditionalActions => conditionalActions.find(conditionalAction => conditionalAction.condition(state));\n\nconst setUnitBehaviorAction = getAgent => ({\n  type: 'SET_UNIT_BEHAVIOR',\n  payload: {\n    getAgent,\n  }\n});\n\nexport default function reducer(state, action) {\n  console.log('Action');\n  console.log(action);\n  const {payload} = action;\n  switch (action.type) {\n    case 'END_TURN': {\n      const apItems = updateItems((item) => isPlayer(payload, item))({ap: 1})(state.items);\n      const grownCrops = apItems.filter(plantedShouldGrow(state.turn));\n      const newCrops = updateItems(plantedShouldGrow(state.turn))({type: 'crop',})(grownCrops);\n      let items = replaceItems(apItems)(newCrops);\n      const cropEvents = newCrops.map((item) => ({\n        id: generateId(),\n        type: 'CROP_GROWN',\n        itemId: item.id,\n        turn: state.turn\n      }));\n      const events = [...state.events, ...cropEvents].filter(e => e.turn === state.turn);\n\n\n      const updatedEventItems = getItemsByPlayer(state.activePlayerId, items).map(item => (\n        {\n          ...item,\n          events: [...item.events, ...events.filter(event => hasBehaviorForEvent(item)(event)(state) || item.training)]\n        }));\n      items = replaceItems(items)(updatedEventItems);\n\n\n      return {\n        ...state,\n        items,\n        turn: nextTurn(state.turn, state.activePlayerId),\n        activePlayerId: nextPlayer(state.activePlayerId),\n        winner: getWinner(state),\n        events,\n      };\n    }\n    case 'AUTO_ACTION': {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      console.log(agent);\n      const nextAction = getNextAction(state)(agent.conditionalActions);\n      //TODO unclear order of execution.\n      return nextAction ? reducer(state, nextAction.action) : reducer(reducer(state, setUnitBehaviorAction(getAgent)), action);\n    }\n    case 'RESTART': {\n      const behaviors = state.behaviors;\n      return {...generateState(), behaviors};\n    }\n    case 'SET_SELECTED': {\n      return {...state, selectedId: payload};\n    }\n    case 'ATTACK': {\n      const {getAgent, getTarget} = payload;\n      const attacker = getAgent(state);\n      const target = getTarget(state);\n\n      if (!inRange(attacker, target)) {\n        console.log('target not in range!');\n        return state;\n      }\n      const updatedTarget = {...target, hp: target.hp - 1};\n      return pipe(updateItem(updatedTarget), postAction(action))(state)\n    }\n    case 'MOVE': {\n      const {getAgent, getTarget} = payload;\n      const moveAgent = (s) => updateItem(move(getAgent(s), toward(getTarget(s))))(s);\n      return pipe(moveAgent, postAction(action))(state);\n    }\n    case 'BUILD_FARM': {\n      return createBuilding(payload.agentId, 'farm', consumeAp(action, state));\n    }\n    case 'PLANT_CROP': {\n      return createBuilding(payload.agentId, 'planted', consumeAp(action, state));\n    }\n    case 'HARVEST_CROP': {\n      const agent = payload.getAgent(state);\n      const target = getItemByXYAndType(state.items)(agent)('crop');\n      const addedResourceState = updateItemById({\n        ...agent,\n        resources: [...agent.resources, 'crop']\n      }, state);\n      return createBuildingOn(agent.id)('grass')(target.id)(consumeAp(action, addedResourceState));\n    }\n    case 'UNLOAD_RESOURCE': {\n      const agent = payload.getAgent(state);\n      //TODO hardcoded farm as that is the only home type\n      const target = getItemByXYAndType(state.items)(agent)('farm');\n      const updatedTarget = {...target, resources: [...target.resources, agent.resources[0]]};\n      const updatedAgent = {...agent, resources: agent.resources.slice(1)};\n      return pipe(updateItem(updatedAgent), updateItem(updatedTarget), postAction(action))(state);\n      // return updateItemById(updatedTarget, updateItemById(updatedAgent, consumeAp(action,\n      // state)));\n    }\n    case 'TRAIN_EVENT': {\n      const {agentId, event} = payload;\n      return updateItemById({\n        id: agentId,\n        behaviorTraining: {name: 'farmer', eventType: event.type, event, conditionalActions: []},\n        training: true,\n      }, state);\n    }\n    case 'FINISH_TRAIN_EVENT': {\n      const {agentId} = payload;\n      const agent = selectItemById(agentId)(state);\n      const {name, eventType, conditionalActions} = agent.behaviorTraining;\n      const behavior = state.behaviors[name] || {};\n      const updatedBehavior = {\n        ...behavior,\n        name,\n        [eventType]: {\n          eventType,\n          conditionalActions,\n        },\n      };\n      const updatedBehaviorState = {\n        ...state,\n        behaviors: {...state.behaviors, [name]: updatedBehavior}\n      };\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {},\n        conditionalActions,\n        training: false,\n      }, updatedBehaviorState);\n\n    }\n    case 'SET_ACTIVE_EVENT' : {\n      const {event, getAgent} = payload;\n      const agent = getAgent(state);\n      return updateItemById({...agent, activeEvent: event}, state);\n    }\n    case 'SET_UNIT_BEHAVIOR': {\n      //TODO call SET_ACTIVE_EVENT or refactor\n      const agent = payload.getAgent(state);\n      const activeEvent = agent.events.length > 0 ? agent.events[0] : {type: 'DEFAULT_EVENT'};\n      const conditionalActions = selectEventBehavior(agent.behaviorName)(activeEvent.type)(state);\n\n      //TODO quickfix to stop endless recursion if there is no valid action for DEFAULT_EVENT\n      if (activeEvent.type === 'DEFAULT_EVENT' && !getNextAction(state)(conditionalActions)) {\n        return updateItem({\n          ...agent,\n          activeEvent: {type: 'SLEEPING'},\n          conditionalActions: [{action: {type: 'SLEEP', payload: {}}, condition: () => true}]\n        })(state)\n      }\n      console.log('Updated actions for event: ' + activeEvent.type);\n      return updateItemById({\n        ...agent,\n        activeEvent,\n        events: agent.events.slice(1),\n        conditionalActions: [...conditionalActions]\n      }, state);\n    }\n    default:\n      return state;\n  }\n};\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport {getEnemyItems, getItemByXYAndType, getItemsByPlayer} from \"./itemsUtil\";\nimport {ReducerDispatch} from \"./App\";\nimport {selectItemById, selectSelectedItem} from \"./reducer\";\n\n//TODO replace id with getAgent\nconst unitHasAp = id => state => {\n  const item = selectItemById(id)(state);\n  return item.ap > 0 && item.playerId === state.activePlayerId;\n};\n\nconst farmerHasFarm = getAgent => state => {\n  return state.items.some((item) => item.type === 'farm' && item.builderId === getAgent(state).id);\n};\n\nconst getButtonColor = (type, state) => isSelectedAction(type, state) ? 'primary' : 'default';\n\nconst playerItemsWithAp = (playerId) => (items) => {\n  return getItemsByPlayer(playerId, items)\n    .filter(item => item.ap > 0);\n};\n\nconst getNextAction = state => conditionalActions => conditionalActions.find((conditionalAction) => conditionalAction.condition(state));\n\nconst isSelectedAction = (type, state) => {\n  const conditionalAction = getNextAction(state)(selectSelectedItem(state).conditionalActions);\n  return conditionalAction && type === conditionalAction.action.type;\n};\n\nfunction TurnButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const {items, activePlayerId} = state;\n  const handleEndTurn = (playerId) => () => {\n    const playerItems = playerItemsWithAp(playerId)(items);\n    playerItems.forEach(playerItem => {\n      dispatch({\n        type: 'AUTO_ACTION',\n        payload: {\n          getAgent: selectItemById(playerItem.id)\n        }\n      });\n    });\n    dispatch({\n      type: 'END_TURN',\n      payload: playerId\n    })\n  };\n  return (\n    <Button onClick={handleEndTurn(activePlayerId)}>Turn({activePlayerId}): {state.turn}</Button>\n  );\n}\n\nconst shouldDisplayOrder = id => condition => state => unitHasAp(id)(state) && condition(state);\n\nfunction AttackButton({targetId}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = selectItemById(targetId);\n  const condition = () => true;\n  if (!shouldDisplayOrder(state.selectedId)(condition)(state)) {\n    return null;\n  }\n  const color = getButtonColor('ATTACK', state);\n  const handleAttack = () => {\n    dispatch({\n      type: 'ATTACK',\n      payload: {\n        getAgent,\n        getTarget,\n        condition,\n      }\n    })\n  };\n  return (<Button color={color} onClick={handleAttack}>Attack Enemy</Button>);\n}\n\nconst moveCondition = getTarget => getAgent => state => {\n  const agent = getAgent(state);\n  const target = getTarget(state);\n  return agent && target && !(agent.x === target.x && agent.y === target.y);\n};\n\nconst calculateDistance = agent => target => Math.abs(agent.x - target.x) + Math.abs(agent.y - target.y);\n\nconst compareDistance = agent => (firstEl, secondEl) => {\n  const distance = calculateDistance(agent);\n  return distance(firstEl) - distance(secondEl);\n};\nconst targetClosestType = getAgent => type => state => state.items.filter(item => item.type === type).sort(compareDistance(getAgent(state)))[0];\n\n//TODO separate item type and if it is a home. hardcoding 'farm' as that is the only home type\nconst targetHome = getAgent => state => state.items.filter(item => item.type === 'farm' && item.builderId === getAgent(state).id)[0];\n\nconst handleMove = getAgent => getTarget => condition => dispatch => () => {\n  dispatch({\n    type: 'MOVE',\n    payload: {\n      getAgent,\n      getTarget,\n      condition,\n    }\n  })\n};\n\nfunction MoveToGrassButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = targetClosestType(getAgent)('grass');\n  return (<MoveButton getTarget={getTarget} targetName={'Grass'}/>);\n}\n\nconst getActiveEvent = getAgent => state => {\n  const {activeEvent} = getAgent(state);\n  return selectItemById(activeEvent.itemId)(state);\n};\n\nfunction MoveToEventButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = getActiveEvent(getAgent);\n  return (<MoveButton getTarget={getTarget} targetName={'Event'}/>);\n}\n\nfunction MoveToHomeButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = targetHome(getAgent);\n  return (<MoveButton getTarget={getTarget} targetName={'Home'}/>);\n}\n\nfunction MoveButton({getTarget, targetName,}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const condition = moveCondition(getTarget)(getAgent);\n  if (!shouldDisplayOrder(state.selectedId)(condition)(state)) {\n    return null;\n  }\n  const color = getButtonColor('MOVE', state);\n  const handleMoveClick = handleMove(getAgent)(getTarget)(condition)(dispatch);\n  return (<Button color={color} onClick={handleMoveClick}>Move To {targetName}</Button>);\n}\n\nfunction BuildFarmButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => {\n    return !farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(agent)('grass');\n  };\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handleBuildFarm = () => {\n    dispatch({\n      type: 'BUILD_FARM',\n      payload: {\n        agentId: agent.id,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleBuildFarm}>Build farm</Button>);\n}\n\nfunction PlantCropButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => {\n    return farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))('grass');\n  };\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handlePlantCrop = () => {\n    dispatch({\n      type: 'PLANT_CROP',\n      payload: {\n        agentId: agent.id,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handlePlantCrop}>PlantCrop</Button>);\n}\n\nfunction HarvestCropButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => getItemByXYAndType(state.items)(getAgent(state))('crop');\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handleHarvestCrop = () => {\n    dispatch({\n      type: 'HARVEST_CROP',\n      payload: {\n        getAgent,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleHarvestCrop}>HarvestCrop</Button>);\n}\n\nconst unloadResourceCondition = getAgent => state => {\n  const agent = getAgent(state);\n  return agent.resources.length > 0 && getItemByXYAndType(state.items)(agent)('farm');\n};\n\nfunction UnloadResourceButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const condition = unloadResourceCondition(getAgent);\n  if (!shouldDisplayOrder(state.selectedId)(condition)(state)) {\n    return null;\n  }\n  const handleUnload = () => {\n    dispatch({\n      type: 'UNLOAD_RESOURCE',\n      payload: {\n        getAgent,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleUnload}>Unload Resource</Button>);\n}\n\nexport default function Orders() {\n  const {state} = useContext(ReducerDispatch);\n  return <div>\n    <Card>\n      <CardContent>\n        <TurnButton/>\n        {\n          getEnemyItems(state).map((enemy) => <AttackButton key={enemy.id} targetId={enemy.id}/>)\n        }\n        <MoveToGrassButton/>\n        <MoveToEventButton/>\n        <MoveToHomeButton/>\n        <BuildFarmButton/>\n        <PlantCropButton/>\n        <HarvestCropButton/>\n        <UnloadResourceButton/>\n      </CardContent>\n    </Card>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {ReducerDispatch} from \"./App\";\nimport Button from \"@material-ui/core/Button\";\nimport {selectItemById, selectSelectedItem} from \"./reducer\";\n\nfunction UnitCard() {\n  const {state} = useContext(ReducerDispatch);\n  const selected = selectSelectedItem(state);\n  if (selected === undefined) {\n    return null;\n  }\n  const {id, playerId, x, y, hp, ap, type, resources} = selected;\n  const maxHp = 5;\n  const relativeHp = hp / maxHp * 100;\n  const defaultEvent = {type: 'DEFAULT_EVENT', itemId: selected.id};\n  return (\n    <Card>\n      <CardContent>\n        <Typography>id:{id}</Typography>\n        <Typography>player:{playerId}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>hp:{hp}</Typography>\n        <Typography>ap:{ap}</Typography>\n        <Typography>type:{type}</Typography>\n        <Typography>resource: {resources} </Typography>\n        <LinearProgress variant=\"determinate\" value={relativeHp}/>\n        <TrainEventButton event={defaultEvent}/>\n        <FinishTrainEventButton/>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction SelectEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectSelectedItem;\n  const agent = getAgent(state);\n  if (agent === undefined || agent.activeEvent === event) {\n    return null;\n  }\n  const handleSelectEvent = () => {\n    dispatch({\n      type: 'SET_ACTIVE_EVENT',\n      payload: {\n        getAgent,\n        event,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleSelectEvent}>Select event {event.type}</Button>);\n}\n\nfunction TrainEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  if (agent === undefined || agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch({\n      type: 'SET_ACTIVE_EVENT',\n      payload: {\n        event,\n        getAgent: selectItemById(agent.id)\n      }\n    });\n    dispatch({\n      type: 'TRAIN_EVENT',\n      payload: {\n        agentId: agent.id,\n        event,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleTrainEvent}>Train {event.type} Behavior</Button>);\n}\n\nfunction FinishTrainEventButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  if (agent === undefined || !agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch({\n      type: 'FINISH_TRAIN_EVENT',\n      payload: {\n        agentId: agent.id,\n      }\n    })\n  };\n  return (\n    <Button color='default' onClick={handleTrainEvent}>Finish train event Behavior</Button>);\n}\n\nfunction EventCard({event}) {\n  const {state} = useContext(ReducerDispatch);\n  // TODO check item connected to event  still exists\n  const {x, y, type} = (event.itemId ? selectItemById(event.itemId)(state) || {} : {});\n  return (\n    <Card>\n      <CardContent>\n        <Typography>type:{event.type}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>itemType:{type}</Typography>\n        <SelectEventButton event={event}/>\n        <TrainEventButton event={event}/>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction EventsInfo() {\n  const {state} = useContext(ReducerDispatch);\n  const {events} = state;\n  const selectedUnit = selectSelectedItem(state);\n  const newEvents = selectedUnit.activeEvent ? [selectedUnit.activeEvent, ...events] : events;\n  return newEvents.map((event, index) => <EventCard key={\"event\" + index} event={event}/>);\n}\n\nexport default function InfoPane() {\n  return <div>\n    <UnitCard/>\n    <EventsInfo/>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ReducerDispatch} from \"./App\";\n\nexport default function WinDialog() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n\n\n  const handleRestart = () => dispatch({type: 'RESTART', payload: undefined});\n  return (\n    <div>\n      <Dialog open={!!state.winner} aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{`The winner is ${state.winner}!`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">Play another round?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Yes</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport PlayingField from './PlayingField';\nimport Orders from './Orders';\nimport InfoPane from './InfoPane';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport WinDialog from \"./WinDialog\";\nimport reducer from \"./reducer\";\nimport {generateState} from \"./stateGenerator\";\n\nexport const ReducerDispatch = React.createContext(null);\n\nconst initialState = generateState();\n\nexport default function App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Grid container justify=\"center\" direction=\"row\" spacing={24}>\n        <ReducerDispatch.Provider value={{state, dispatch}}>\n          <WinDialog/>\n          <Grid item xs>\n            <InfoPane/>\n          </Grid>\n          <Grid item xs>\n            <PlayingField size=\"10\"/>\n          </Grid>\n          <Grid item xs={4}>\n            <Orders/>\n          </Grid>\n        </ReducerDispatch.Provider>\n      </Grid>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}