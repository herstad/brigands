{"version":3,"sources":["PlayingField.js","stateGenerator.js","itemsUtil.js","movement.js","reducer.js","Orders.js","InfoPane.js","WinDialog.js","App.js","serviceWorker.js","index.js"],"names":["typeIcons","o","x","mounted","grass","tree","water","rock","dead","farm","crop","planted","getIcon","elem","hp","type","createMatrix","n","arguments","length","undefined","items","matrix","y","createAtPosition","find","item","PlayingFieldCell","_ref","id","dispatch","useContext","ReducerDispatch","react_default","a","createElement","TableCell_default","IconButton_default","onClick","payload","Icon_default","PlayingField","state","className","Table_default","padding","TableBody_default","map","row","TableRow_default","key","PLAYERS","generateState","console","log","generateItems","turn","activePlayerId","selectedId","winner","events","itemId","behaviors","training","generateId","size","units","playerId","ap","behaviorName","conditionalActions","activeEvent","resources","genPos","generatePosition","concat","defaultValues","i","push","generateDefaultItems","points","generateRandomMatrix","Object","objectSpread","shift","array","Array","from","keys","flat","shuffleArray","j","Math","floor","random","isPlayer","getItemById","getItemsByPlayer","filter","matchPlayer","getItemByXYAndType","selectedItem","findItemByType","getItemsByXY","getEnemyItems","player","flatMap","otherPlayer","inRange","attacker","target","range","abs","updateItemById","updatedItem","updateItemByIdFn","replaceItems","replacements","obj","updateItems","predicate","updateItemFn","el","toward","mover","xd","yd","sign","move","direction","_direction","selectItemById","selectSelectedItem","selectEventBehavior","eventType","nextPlayer","index","findIndex","nextTurn","slice","getWinner","isLoser","every","consumeAp","action","condition","agent","agentId","getAgent","conditionalAction","behaviorTraining","createBuilding","builderId","builder","createBuildingOn","buildingType","targetId","clearedItems","building","createdTurn","toConsumableArray","plantedShouldGrow","hasBehaviorForEvent","event","getNextAction","setUnitBehaviorAction","reducer","apItems","grownCrops","newCrops","cropEvents","e","updatedEventItems","nextAction","getTarget","consumedState","addedResourceState","name","_agent3$behaviorTrain","behavior","updatedBehavior","defineProperty","updatedBehaviorState","farmerHasFarm","some","getButtonColor","isSelectedAction","playerItemsWithAp","TurnButton","_useContext","Button_default","forEach","playerItem","shouldDisplayOrder","unitHasAp","AttackButton","_useContext2","color","moveCondition","compareDistance","firstEl","secondEl","distance","calculateDistance","targetClosestType","sort","targetHome","handleMove","MoveToGrassButton","MoveButton","targetName","getActiveEvent","MoveToEventButton","MoveToHomeButton","_ref2","_useContext6","handleMoveClick","BuildFarmButton","_useContext7","PlantCropButton","_useContext8","HarvestCropButton","_useContext9","Orders","Card_default","CardContent_default","enemy","UnitCard","selected","relativeHp","defaultEvent","Typography_default","LinearProgress_default","variant","value","TrainEventButton","FinishTrainEventButton","SelectEventButton","_useContext3","_useContext4","EventCard","_ref3","_ref4","EventsInfo","selectedUnit","InfoPane","WinDialog","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","React","createContext","initialState","Boolean","window","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","slicedToArray","CssBaseline_default","Grid_default","container","justify","spacing","Provider","xs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2ef952c.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport {ReducerDispatch} from \"./App\";\n\nconst typeIcons = {\n  o: 'android',\n  x: 'directions_walk',\n  mounted: 'direction_bike',\n  grass: 'crop_free',\n  tree: 'nature',\n  water: 'waves',\n  rock: 'landscape',\n  dead: 'airline_seat_flat',\n  farm: 'home',\n  crop: 'local_florist',\n  planted: 'minimize',\n\n};\n\nconst getIcon = (elem) => elem.hp < 1 ? typeIcons['dead'] : typeIcons[elem.type] || 'crop_free';\n\nconst createMatrix = (n = 10, items) => {\n  let matrix = [];\n  for (let y = 0; y < n; y++) {\n    matrix[y] = [];\n    for (let x = 0; x < n; x++) {\n      matrix[y][x] = createAtPosition(items, x, y);\n    }\n  }\n  return matrix;\n};\n\nconst createAtPosition = (items = [], x, y) => {\n  return items.find((item) => item.x === x && item.y === y) || {x: x, y: y, type: '.'}\n};\n\nfunction PlayingFieldCell({elem}) {\n  const {dispatch} = useContext(ReducerDispatch);\n  const handleSetSelected = (id) => () => {\n    dispatch({type: 'SET_SELECTED', payload: id});\n  };\n  return (\n    <TableCell>\n      <IconButton\n        onClick={handleSetSelected(elem.id)}><Icon>{getIcon(elem)}</Icon></IconButton>\n    </TableCell>);\n}\n\nexport default function PlayingField() {\n  const {items} = useContext(ReducerDispatch).state;\n  const matrix = createMatrix(10, items);\n  return <div className=\"PlayingField\">\n    <Table padding=\"none\">\n      <TableBody>\n        {\n          (matrix.map(row =>\n            <TableRow key={row[0].y}>{\n              row.map(elem => <PlayingFieldCell key={'x' + elem.x + 'y' + elem.y} elem={elem}/>)}\n            </TableRow>))\n        }\n      </TableBody>\n    </Table>\n  </div>;\n}\n","export const PLAYERS = ['human']; // TODO readd ai bug where ai shares behavior and consumes ap\n// export const PLAYERS =  ['human', 'ai'];\n\nexport const generateState = () => {\n  console.log(\"generate state\");\n\n  const items = generateItems();\n  return {\n    turn: 0,\n    activePlayerId: PLAYERS[0],\n    items,\n    selectedId: items[0].id,\n    winner: undefined,\n    events: [{type: 'ENEMY_SPOTTED', itemId: items[1].id}, {type: 'GAME_STARTED'}],\n    behaviors: {},\n    training: false,\n  };\n};\n\nlet itemId = 0;\n\nexport const generateId = () => {\n  itemId++;\n  return itemId;\n};\n\nconst generateDefaultItems = (size) => {\n  const defaultValues = [];\n  for (let i = 0; i < size; i++) {\n    defaultValues.push({id: generateId(), type: 'grass'});\n  }\n  return defaultValues;\n};\n\nconst generateItems = (size = 10) => {\n  const units = [\n    {\n      id: generateId(),\n      hp: 5, type: 'x',\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: 'DEFAULT_EVENT'},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: 'o',\n      playerId: 'ai',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: 'DEFAULT_EVENT'},\n      resources: [],\n    },\n  ];\n\n  const items = [\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'water'},\n    {id: generateId(), type: 'water'},\n    {id: generateId(), type: 'water'},\n  ];\n\n  const genPos = generatePosition(size);\n  return genPos(units).concat(genPos(items.concat(generateDefaultItems(size * size - items.length))));\n};\n\nconst generatePosition = (size) => (items) => {\n  const points = generateRandomMatrix(size);\n  return items.map((item) => ({...item, ...points.shift()}));\n};\n\nconst generateRandomMatrix = (size) => {\n  const array = Array.from(Array(size).keys());\n  const matrix = array.map((x) => {\n    return array.map((y) => {\n      return {x, y};\n    })\n  }).flat();\n  shuffleArray(matrix);\n  return matrix;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};","import {PLAYERS} from \"./stateGenerator\";\n\nexport const isPlayer = (playerId, item) => item.playerId === playerId;\nexport const matchPlayer = (playerId) => (item) => isPlayer(playerId, item);\nexport const getItemById = (id, items) => items.find((item) => item.id === id);\nexport const getItemsByPlayer = (playerId, items) => items.filter(matchPlayer(playerId));\nexport const getItemsByXY = items => ({x, y}) => items.filter((item) => item.x === x && item.y === y);\nexport const getItemByXYAndType = items => selectedItem => type => findItemByType(getItemsByXY(items)(selectedItem))(type);\nexport const findItemByType = items => type => items.find(item => item.type === type);\nexport const removeItemById = (id, items) => items.filter((item) => item.id !== id);\nexport const getEnemyItems = (state) => {\n  const otherPlayers = PLAYERS.filter((player) => state.activePlayerId !== player);\n  return otherPlayers.flatMap((otherPlayer) => getItemsByPlayer(otherPlayer, state.items));\n};\nexport const inRange = (attacker, target, range = 1) => {\n  return Math.abs(target.x - attacker.x) + Math.abs(target.y - attacker.y) <= range;\n};\nexport const updateItemById = (updatedItem, state) => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const replaceItems = items => replacements => {\n  return items.map(obj => replacements.find(o => o.id === obj.id) || obj);\n};\n\nexport const updateItems = predicate => updatedItem => items => {\n  return items.map(updateItemFn(predicate)(updatedItem));\n};\n\nexport const updateItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? {...el, ...updatedItem} : el);\n};\n\nexport const replaceItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? updatedItem : el);\n};\n\nexport const updateItemByIdFn = (updatedItem) => {\n  return updateItemFn(el => updatedItem.id === el.id)(updatedItem);\n};\n\nexport const matchId = (id) => {\n  return (item) => item.id === id;\n};","export const toward = target => mover => {\n  const xd = target.x - mover.x;\n  const yd = target.y - mover.y;\n  return Math.abs(xd) > Math.abs(yd) ? {x: Math.sign(xd), y: 0} : {x: 0, y: Math.sign(yd)};\n};\n\nexport const move = (mover, direction) => {\n  const {x, y} = direction(mover);\n  return {...mover, x: (mover.x + x), y: (mover.y + y)}\n};","import {generateId, generateState, PLAYERS} from \"./stateGenerator\";\nimport {\n  getItemById,\n  getItemByXYAndType,\n  getItemsByPlayer,\n  inRange,\n  isPlayer,\n  removeItemById,\n  replaceItems,\n  updateItemById,\n  updateItems\n} from \"./itemsUtil\";\nimport {move, toward} from \"./movement\";\n\nexport const selectItemById = id => state => getItemById(id, state.items);\n\nexport const selectSelectedItem = (state) => getItemById(state.selectedId, state.items);\n\nconst selectEventBehavior = behaviorName => eventType => state => {\n  const behavior = state.behaviors[behaviorName] || {};\n  const eventBehavior = behavior[eventType] || {};\n  return eventBehavior.conditionalActions || [];\n};\n\nexport const selectEvents = state => state.events;\n\nconst nextPlayer = (activePlayerId) => {\n  const index = PLAYERS.findIndex((id) => id === activePlayerId);\n  return PLAYERS[(index + 1) % PLAYERS.length];\n};\n\nconst nextTurn = (turn, activePlayerId) => PLAYERS.slice(-1)[0] === activePlayerId ? turn + 1 : turn;\n\nconst getWinner = (state) => {\n  return isLoser('ai', state.items) ? 'human' : isLoser('human', state.items) ? 'ai' : undefined;\n};\n\nconst isLoser = (playerId, items) => {\n  return getItemsByPlayer(playerId, items).every((item) => item.hp <= 0);\n};\n\nconst consumeAp = (action, state) => {\n  const {condition} = action.payload;\n  // TODO require getAgent\n  const agent = action.payload.agentId !== undefined ? selectItemById(action.payload.agentId)(state) : action.payload.getAgent(state);\n  const selectedItem = {\n    ...agent,\n    ap: 0,\n    action,\n    condition,\n  };\n  // TODO rewrite without if\n  if (!!selectedItem.training) {\n    const conditionalAction = {action, condition};\n    selectedItem.behaviorTraining.conditionalActions.push(conditionalAction);\n  } else {\n    const index = selectedItem.conditionalActions.findIndex(conditionalAction => conditionalAction.action.type === action.type);\n    if (index > 0) {\n      selectedItem.conditionalActions = selectedItem.conditionalActions.slice(index);\n    }\n  }\n  return updateItemById(selectedItem, state);\n};\n\nconst createBuilding = (builderId, type, state) => {\n  const builder = selectItemById(builderId)(state);\n  const target = getItemByXYAndType(state.items)(builder)('grass');\n  return createBuildingOn(builderId)(type)(target.id)(state);\n};\n\nconst createBuildingOn = builderId => buildingType => targetId => state => {\n  const builder = selectItemById(builderId)(state);\n  const clearedItems = removeItemById(targetId, state.items);\n  const building = {\n    id: generateId(),\n    builderId,\n    x: builder.x,\n    y: builder.y,\n    type: buildingType,\n    createdTurn: state.turn,\n  };\n  return {...state, items: [...clearedItems, building]}\n};\n\nconst plantedShouldGrow = turn => item => item.type === 'planted' && item.createdTurn + 5 <= turn;\n\nconst hasBehaviorForEvent = item => event => state => {\n  const behavior = selectEventBehavior(item.behaviorName)(event.type)(state);\n  return !!behavior.length;\n};\n\n// TODO remove original\nconst getNextAction = state => conditionalActions => conditionalActions.find(conditionalAction => conditionalAction.condition(state));\n\nconst setUnitBehaviorAction = getAgent => ({\n  type: 'SET_UNIT_BEHAVIOR',\n  payload: {\n    getAgent,\n  }\n});\n\nexport default function reducer(state, action) {\n  console.log('Action');\n  console.log(action);\n  const {payload} = action;\n  switch (action.type) {\n    case 'END_TURN': {\n      const apItems = updateItems((item) => isPlayer(payload, item))({ap: 1})(state.items);\n      const grownCrops = apItems.filter(plantedShouldGrow(state.turn));\n      const newCrops = updateItems(plantedShouldGrow(state.turn))({type: 'crop',})(grownCrops);\n      let items = replaceItems(apItems)(newCrops);\n      const cropEvents = newCrops.map((item) => ({\n        id: generateId(),\n        type: 'CROP_GROWN',\n        itemId: item.id,\n        turn: state.turn\n      }));\n      const events = [...state.events, ...cropEvents].filter(e => e.turn === state.turn);\n\n\n      const updatedEventItems = getItemsByPlayer(state.activePlayerId, items).map(item => (\n        {\n          ...item,\n          events: [...item.events, ...events.filter(event => hasBehaviorForEvent(item)(event)(state) || item.training)]\n        }));\n      items = replaceItems(items)(updatedEventItems);\n\n\n      return {\n        ...state,\n        items,\n        turn: nextTurn(state.turn, state.activePlayerId),\n        activePlayerId: nextPlayer(state.activePlayerId),\n        winner: getWinner(state),\n        events,\n      };\n    }\n    case 'AUTO_ACTION': {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      console.log(agent);\n      const nextAction = getNextAction(state)(agent.conditionalActions);\n      //TODO unclear order of execution.\n      return nextAction ? reducer(state, nextAction.action) : reducer(reducer(state, setUnitBehaviorAction(getAgent)), action);\n    }\n    case 'RESTART': {\n      const behaviors = state.behaviors;\n      return {...generateState(), behaviors};\n    }\n    case 'SET_SELECTED': {\n      return {...state, selectedId: payload};\n    }\n    case 'ATTACK': {\n      const {getAgent, getTarget} = payload;\n      const consumedState = consumeAp(action, state);\n      const attacker = getAgent(consumedState);\n      const target = getTarget(consumedState);\n      if (inRange(attacker, target)) {\n        console.log('target in range!');\n        return updateItemById({...target, hp: target.hp - 1}, consumedState);\n      } else {\n        console.log('target not in range!');\n        return updateItemById(move(attacker, toward(target)), consumedState);\n      }\n    }\n    case 'MOVE': {\n      const {getAgent, getTarget} = payload;\n      const consumedState = consumeAp(action, state);\n      const agent = getAgent(consumedState);\n      const target = getTarget(consumedState);\n      return updateItemById(move(agent, toward(target)), consumedState);\n    }\n    case 'BUILD_FARM': {\n      return createBuilding(payload.agentId, 'farm', consumeAp(action, state));\n    }\n    case 'PLANT_CROP': {\n      return createBuilding(payload.agentId, 'planted', consumeAp(action, state));\n    }\n    case 'HARVEST_CROP': {\n      const agent = payload.getAgent(state);\n      const target = getItemByXYAndType(state.items)(agent)('crop');\n      const addedResourceState = updateItemById({\n        ...agent,\n        resources: [...agent.resources, 'crop']\n      }, state);\n      return createBuildingOn(agent.id)('grass')(target.id)(consumeAp(action, addedResourceState));\n    }\n    case 'TRAIN_EVENT': {\n      const {agentId, event} = payload;\n      return updateItemById({\n        id: agentId,\n        behaviorTraining: {name: 'farmer', eventType: event.type, event, conditionalActions: []},\n        training: true,\n      }, state);\n    }\n    case 'FINISH_TRAIN_EVENT': {\n      const {agentId} = payload;\n      const agent = selectItemById(agentId)(state);\n      const {name, eventType, conditionalActions} = agent.behaviorTraining;\n      const behavior = state.behaviors[name] || {};\n      const updatedBehavior = {\n        ...behavior,\n        name,\n        [eventType]: {\n          eventType,\n          conditionalActions,\n        },\n      };\n      const updatedBehaviorState = {\n        ...state,\n        behaviors: {...state.behaviors, [name]: updatedBehavior}\n      };\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {},\n        conditionalActions,\n        training: false,\n      }, updatedBehaviorState);\n\n    }\n    case 'SET_ACTIVE_EVENT' : {\n      const {event, getAgent} = payload;\n      const agent = getAgent(state);\n      return updateItemById({...agent, activeEvent: event}, state);\n    }\n    case 'SET_UNIT_BEHAVIOR': {\n      //TODO call SET_ACTIVE_EVENT or refactor\n      const agent = payload.getAgent(state);\n      const activeEvent = agent.events.length > 0 ? agent.events[0] : {type: 'DEFAULT_EVENT'};\n      const conditionalActions = selectEventBehavior(agent.behaviorName)(activeEvent.type)(state);\n      console.log('Updated actions for event: ' + activeEvent.type);\n      return updateItemById({\n        ...agent,\n        activeEvent,\n        events: agent.events.slice(1),\n        conditionalActions: [...conditionalActions]\n      }, state);\n    }\n    default:\n      return state;\n  }\n};\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport {getEnemyItems, getItemByXYAndType, getItemsByPlayer} from \"./itemsUtil\";\nimport {ReducerDispatch} from \"./App\";\nimport {selectItemById, selectSelectedItem} from \"./reducer\";\n\n//TODO replace id with getAgent\nconst unitHasAp = id => state => {\n  const item = selectItemById(id)(state);\n  return item.ap > 0 && item.playerId === state.activePlayerId;\n};\n\nconst farmerHasFarm = getAgent => state => {\n  return state.items.some((item) => item.type === 'farm' && item.builderId === getAgent(state).id);\n};\n\nconst getButtonColor = (type, state) => isSelectedAction(type, state) ? 'primary' : 'default';\n\nconst playerItemsWithAp = (playerId) => (items) => {\n  return getItemsByPlayer(playerId, items)\n    .filter(item => item.ap > 0);\n};\n\nconst getNextAction = state => conditionalActions => conditionalActions.find((conditionalAction) => conditionalAction.condition(state));\n\nconst isSelectedAction = (type, state) => {\n  const conditionalAction = getNextAction(state)(selectSelectedItem(state).conditionalActions);\n  return conditionalAction && type === conditionalAction.action.type;\n};\n\nfunction TurnButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const {items, activePlayerId} = state;\n  const handleEndTurn = (playerId) => () => {\n    const playerItems = playerItemsWithAp(playerId)(items);\n    playerItems.forEach(playerItem => {\n      dispatch({\n        type: 'AUTO_ACTION',\n        payload: {\n          getAgent: selectItemById(playerItem.id)\n        }\n      });\n    });\n    dispatch({\n      type: 'END_TURN',\n      payload: playerId\n    })\n  };\n  return (\n    <Button onClick={handleEndTurn(activePlayerId)}>Turn({activePlayerId}): {state.turn}</Button>\n  );\n}\n\nconst shouldDisplayOrder = id => condition => state => unitHasAp(id)(state) && condition(state);\n\nfunction AttackButton({targetId}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = selectItemById(targetId);\n  const condition = () => true;\n  if (!shouldDisplayOrder(state.selectedId)(condition)(state)) {\n    return null;\n  }\n  const color = getButtonColor('ATTACK', state);\n  const handleAttack = () => {\n    dispatch({\n      type: 'ATTACK',\n      payload: {\n        getAgent,\n        getTarget,\n        condition,\n      }\n    })\n  };\n  return (<Button color={color} onClick={handleAttack}>Attack Enemy</Button>);\n}\n\nconst moveCondition = getTarget => getAgent => state => {\n  const agent = getAgent(state);\n  const target = getTarget(state);\n  return agent && target && !(agent.x === target.x && agent.y === target.y);\n};\n\nconst calculateDistance = agent => target => Math.abs(agent.x - target.x) + Math.abs(agent.y - target.y);\n\nconst compareDistance = agent => (firstEl, secondEl) => {\n  const distance = calculateDistance(agent);\n  return distance(firstEl) - distance(secondEl);\n};\nconst targetClosestType = getAgent => type => state => state.items.filter(item => item.type === type).sort(compareDistance(getAgent(state)))[0];\n\n//TODO separate item type and if it is a home. hardcoding 'farm' as that is the only home type\nconst targetHome = getAgent => state => state.items.filter(item => item.type === 'farm' && item.builderId === getAgent(state).id)[0];\n\nconst handleMove = getAgent => getTarget => condition => dispatch => () => {\n  dispatch({\n    type: 'MOVE',\n    payload: {\n      getAgent,\n      getTarget,\n      condition,\n    }\n  })\n};\n\nfunction MoveToGrassButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = targetClosestType(getAgent)('grass');\n  return (<MoveButton getTarget={getTarget} targetName={'Grass'}/>);\n}\n\nconst getActiveEvent = getAgent => state => {\n  const {activeEvent} = getAgent(state);\n  return selectItemById(activeEvent.itemId)(state);\n};\n\nfunction MoveToEventButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = getActiveEvent(getAgent);\n  return (<MoveButton getTarget={getTarget} targetName={'Event'}/>);\n}\n\nfunction MoveToHomeButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = targetHome(getAgent);\n  return (<MoveButton getTarget={getTarget} targetName={'Home'}/>);\n}\n\nfunction MoveButton({getTarget, targetName,}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const condition = moveCondition(getTarget)(getAgent);\n  if (!shouldDisplayOrder(state.selectedId)(condition)(state)) {\n    return null;\n  }\n  const color = getButtonColor('MOVE', state);\n  const handleMoveClick = handleMove(getAgent)(getTarget)(condition)(dispatch);\n  return (<Button color={color} onClick={handleMoveClick}>Move To {targetName}</Button>);\n}\n\nfunction BuildFarmButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => {\n    return !farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(agent)('grass');\n  };\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handleBuildFarm = () => {\n    dispatch({\n      type: 'BUILD_FARM',\n      payload: {\n        agentId: agent.id,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleBuildFarm}>Build farm</Button>);\n}\n\nfunction PlantCropButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => {\n    return farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))('grass');\n  };\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handlePlantCrop = () => {\n    dispatch({\n      type: 'PLANT_CROP',\n      payload: {\n        agentId: agent.id,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handlePlantCrop}>PlantCrop</Button>);\n}\n\nfunction HarvestCropButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => getItemByXYAndType(state.items)(getAgent(state))('crop');\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handleHarvestCrop = () => {\n    dispatch({\n      type: 'HARVEST_CROP',\n      payload: {\n        getAgent,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleHarvestCrop}>HarvestCrop</Button>);\n}\n\nexport default function Orders() {\n  const {state} = useContext(ReducerDispatch);\n  return <div>\n    <Card>\n      <CardContent>\n        <TurnButton/>\n        {\n          getEnemyItems(state).map((enemy) => <AttackButton key={enemy.id} targetId={enemy.id}/>)\n        }\n        <MoveToGrassButton/>\n        <MoveToEventButton/>\n        <MoveToHomeButton/>\n        <BuildFarmButton/>\n        <PlantCropButton/>\n        <HarvestCropButton/>\n      </CardContent>\n    </Card>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {ReducerDispatch} from \"./App\";\nimport Button from \"@material-ui/core/Button\";\nimport {selectItemById, selectSelectedItem} from \"./reducer\";\n\nfunction UnitCard() {\n  const {state} = useContext(ReducerDispatch);\n  const selected = selectSelectedItem(state);\n  if (selected === undefined) {\n    return null;\n  }\n  const {id, playerId, x, y, hp, ap, type, resources} = selected;\n  const maxHp = 5;\n  const relativeHp = hp / maxHp * 100;\n  const defaultEvent = {type: 'DEFAULT_EVENT', itemId: selected.id};\n  return (\n    <Card>\n      <CardContent>\n        <Typography>id:{id}</Typography>\n        <Typography>player:{playerId}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>hp:{hp}</Typography>\n        <Typography>ap:{ap}</Typography>\n        <Typography>type:{type}</Typography>\n        <Typography>resource: {resources} </Typography>\n        <LinearProgress variant=\"determinate\" value={relativeHp}/>\n        <TrainEventButton event={defaultEvent}/>\n        <FinishTrainEventButton/>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction SelectEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectSelectedItem;\n  const agent = getAgent(state);\n  if (agent === undefined || agent.activeEvent === event) {\n    return null;\n  }\n  const handleSelectEvent = () => {\n    dispatch({\n      type: 'SET_ACTIVE_EVENT',\n      payload: {\n        getAgent,\n        event,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleSelectEvent}>Select event {event.type}</Button>);\n}\n\nfunction TrainEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  if (agent === undefined || agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch({\n      type: 'SET_ACTIVE_EVENT',\n      payload: {\n        event,\n        getAgent: selectItemById(agent.id)\n      }\n    });\n    dispatch({\n      type: 'TRAIN_EVENT',\n      payload: {\n        agentId: agent.id,\n        event,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleTrainEvent}>Train {event.type} Behavior</Button>);\n}\n\nfunction FinishTrainEventButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  if (agent === undefined || !agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch({\n      type: 'FINISH_TRAIN_EVENT',\n      payload: {\n        agentId: agent.id,\n      }\n    })\n  };\n  return (\n    <Button color='default' onClick={handleTrainEvent}>Finish train event Behavior</Button>);\n}\n\nfunction EventCard({event}) {\n  const {state} = useContext(ReducerDispatch);\n  // TODO check item connected to event  still exists\n  const {x, y, type} = (event.itemId ? selectItemById(event.itemId)(state) || {} : {});\n  return (\n    <Card>\n      <CardContent>\n        <Typography>type:{event.type}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>itemType:{type}</Typography>\n        <SelectEventButton event={event}/>\n        <TrainEventButton event={event}/>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction EventsInfo() {\n  const {state} = useContext(ReducerDispatch);\n  const {events} = state;\n  const selectedUnit = selectSelectedItem(state);\n  const newEvents = selectedUnit.activeEvent ? [selectedUnit.activeEvent, ...events] : events;\n  return newEvents.map((event, index) => <EventCard key={\"event\" + index} event={event}/>);\n}\n\nexport default function InfoPane() {\n  return <div>\n    <UnitCard/>\n    <EventsInfo/>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ReducerDispatch} from \"./App\";\n\nexport default function WinDialog() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n\n\n  const handleRestart = () => dispatch({type: 'RESTART', payload: undefined});\n  return (\n    <div>\n      <Dialog open={!!state.winner} aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{`The winner is ${state.winner}!`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">Play another round?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Yes</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport PlayingField from './PlayingField';\nimport Orders from './Orders';\nimport InfoPane from './InfoPane';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport WinDialog from \"./WinDialog\";\nimport reducer from \"./reducer\";\nimport {generateState} from \"./stateGenerator\";\n\nexport const ReducerDispatch = React.createContext(null);\n\nconst initialState = generateState();\n\nexport default function App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Grid container justify=\"center\" direction=\"row\" spacing={24}>\n        <ReducerDispatch.Provider value={{state, dispatch}}>\n          <WinDialog/>\n          <Grid item xs>\n            <InfoPane/>\n          </Grid>\n          <Grid item xs>\n            <PlayingField size=\"10\"/>\n          </Grid>\n          <Grid item xs={4}>\n            <Orders/>\n          </Grid>\n        </ReducerDispatch.Provider>\n      </Grid>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}