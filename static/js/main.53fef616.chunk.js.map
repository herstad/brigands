{"version":3,"sources":["itemTypes.js","events/eventTypes.js","stateGenerator.js","itemsUtil.js","movement.js","functional.js","events/eventUtils.js","reducer.js","PlayingField.js","Orders.js","InfoPane.js","WinDialog.js","App.js","serviceWorker.js","index.js"],"names":["GRASS","TREE","ROCK","FARM","CROP","PLANTED","WAREHOUSE","PATH","DEFAULT_EVENT","RESOURCE_PICKUP","SLEEPING","PLAYERS","generateState","console","log","items","generateItems","turn","activePlayerId","selectedId","id","winner","undefined","events","type","itemId","behaviors","training","generateId","size","arguments","length","units","hp","playerId","ap","behaviorName","conditionalActions","activeEvent","resources","genPos","generatePosition","concat","defaultValues","i","push","generateDefaultItems","points","generateRandomMatrix","map","item","Object","objectSpread","shift","array","Array","from","keys","matrix","x","y","flat","shuffleArray","j","Math","floor","random","_ref","getItemById","find","getItemsByPlayer","filter","isPlayer","matchPlayer","getItemsByXY","getItemByXYAndType","selectedItem","findItemByType","getEnemyItems","state","player","flatMap","otherPlayer","inRange","attacker","target","range","abs","updateItem","updatedItem","updateItemByIdFn","updateItemById","updateItemFn","predicate","el","toward","mover","xd","yd","sign","move","direction","_direction","calculateDistance","agent","pipe","_len2","fns","_key2","reduce","v","f","isEventVisible","agentId","event","local","ATTACK","AUTO_ACTION","BUILD_FARM","BUILD_WAREHOUSE","END_TURN","FINISH_TRAIN_EVENT","HARVEST_CROP","MOVE","MAKE_PATH","PLANT_CROP","RESTART","SET_ACTIVE_EVENT","SET_SELECTED","SET_UNIT_BEHAVIOR","TRAIN_EVENT","UNLOAD_RESOURCE","LOAD_RESOURCE","SLEEP","selectItemById","selectSelectedItem","selectEventBehavior","eventType","selectActivePlayerId","nextPlayer","index","findIndex","delegateToReducer","action","reducer","consumeAp","_action$payload","payload","getAgent","_action$payload$apCos","apCost","postAction","behaviorTraining","toConsumableArray","recordAction","createBuilding","builder","createBuildingOn","buildingType","targetId","clearedItems","building","builderId","createdTurn","plantedShouldGrow","getNextActions","conditionalAction","condition","slice","getNextAction","endTurn","attackCondition","getTarget","attack","setUnitBehaviorAction","autoAction","buildWarehouse","some","farmerHasFarm","farmCondition","buildFarm","plantCropCondition","plantCrop","harvestCropCondition","harvestCrop","moveTowardTarget","moveCondition","includes","makePathTarget","makePath","unloadResourceCondition","getByType","unloadResource","loadResourceCondition","loadResource","setActiveEvent","trainEventBehavior","finishTrainEventBehavior","restart","setSelectedItem","sleepOneTurn","createEvent","publishEvents","isHome","updateItemsByActivePlayer","fn","updates","apply","replenishAp","cropsGrownEvents","cropEvents","createLocalEvent","growCrops","updateItems","filterOldEvents","e","addEventsToUnits","hasBehaviorForEvent","setNextTurn","setNextPlayer","updateConditionalActions","nextActions","performCurrentAction","actions","updatedTarget","s","visited","addedResourceState","resource","updatedAgent","name","_agent5$behaviorTrain","behavior","updatedBehavior","defineProperty","updatedBehaviorState","unitActions","typeIcons","_typeIcons","getIcon","elem","createMatrix","n","createAtPosition","PlayingFieldCell","dispatch","useContext","ReducerDispatch","react_default","a","createElement","TableCell_default","IconButton_default","onClick","Icon_default","PlayingField","className","Table_default","padding","TableBody_default","row","TableRow_default","key","playerItemsWithAp","OrderButton","children","_useContext","shouldDisplayOrder","Button_default","TurnButton","_useContext2","forEach","playerItem","unitHasAp","AttackButton","_ref2","targetClosestType","sort","firstEl","secondEl","distance","targetHome","MoveToGrassButton","MoveButton","targetName","getActiveEventTarget","MoveToEventButton","MoveToHomeButton","MoveToWarehouseButton","_ref3","BuildWarehouseButton","BuildFarmButton","PlantCropButton","HarvestCropButton","UnloadResourceButton","LoadResourceButton","Orders","Card_default","CardContent_default","enemy","UnitCard","selected","relativeHp","defaultEvent","Typography_default","LinearProgress_default","variant","value","TrainEventButton","FinishTrainEventButton","SelectEventButton","color","_useContext3","_useContext4","EventCard","_ref4","EventsInfo","selectedUnit","visibleEvents","InfoPane","WinDialog","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","React","createContext","initialState","Boolean","window","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","slicedToArray","CssBaseline_default","Grid_default","container","justify","spacing","Provider","xs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53fef616.chunk.js","sourcesContent":["export const PLAYER2 = 'o';\nexport const HUMAN = 'x';\nexport const MOUNTED = 'mounted';\nexport const GRASS = 'grass';\nexport const TREE = 'tree';\nexport const WATER = 'water';\nexport const ROCK = 'rock';\nexport const DEAD = 'dead';\nexport const FARM = 'farm';\nexport const CROP = 'crop';\nexport const PLANTED = 'planted';\nexport const WAREHOUSE = 'warehouse';\nexport const PATH = 'path';","export const DEFAULT_EVENT = 'DEFAULT_EVENT';\nexport const RESOURCE_PICKUP = 'RESOURCE_PICKUP';\nexport const CROP_GROWN = 'CROP_GROWN';\nexport const SLEEPING = 'SLEEPING';","import {HUMAN, GRASS, PLAYER2, ROCK, TREE, WATER} from \"./itemTypes\";\nimport {DEFAULT_EVENT} from \"./events/eventTypes\";\n\nexport const PLAYERS = ['human', 'ai'];\n\nexport const generateState = () => {\n  console.log(\"generate state\");\n\n  const items = generateItems();\n  return {\n    turn: 0,\n    activePlayerId: PLAYERS[0],\n    items,\n    selectedId: items[0].id,\n    winner: undefined,\n    events: [{type: 'ENEMY_SPOTTED', itemId: items[1].id}, {type: 'GAME_STARTED'}],\n    behaviors: {},\n    training: false,\n  };\n};\n\nlet itemId = 0;\n\nexport const generateId = () => {\n  itemId++;\n  return itemId;\n};\n\nconst generateDefaultItems = (size) => {\n  const defaultValues = [];\n  for (let i = 0; i < size; i++) {\n    defaultValues.push({id: generateId(), type: GRASS});\n  }\n  return defaultValues;\n};\n\nconst generateItems = (size = 10) => {\n  const units = [\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: PLAYER2,\n      playerId: 'ai',\n      ap: 1,\n      behaviorName: 'brigand',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'hauler',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n  ];\n\n  const items = [\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: WATER},\n    {id: generateId(), type: WATER},\n    {id: generateId(), type: WATER},\n  ];\n\n  const genPos = generatePosition(size);\n  return genPos(units).concat(genPos(items.concat(generateDefaultItems(size * size - items.length))));\n};\n\nconst generatePosition = (size) => (items) => {\n  const points = generateRandomMatrix(size);\n  return items.map((item) => ({...item, ...points.shift()}));\n};\n\nconst generateRandomMatrix = (size) => {\n  const array = Array.from(Array(size).keys());\n  const matrix = array.map((x) => {\n    return array.map((y) => {\n      return {x, y};\n    })\n  }).flat();\n  shuffleArray(matrix);\n  return matrix;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};","import {PLAYERS} from \"./stateGenerator\";\n\nexport const isPlayer = (playerId, item) => item.playerId === playerId;\nexport const matchPlayer = (playerId) => (item) => isPlayer(playerId, item);\nexport const getItemById = (id, items) => items.find((item) => item.id === id);\nexport const getItemsByPlayer = (playerId, items) => items.filter(matchPlayer(playerId));\nexport const getItemsByXY = items => ({x, y}) => items.filter((item) => item.x === x && item.y === y);\nexport const getItemByXYAndType = items => selectedItem => type => findItemByType(getItemsByXY(items)(selectedItem))(type);\nexport const findItemByType = items => type => items.find(item => item.type === type);\nexport const removeItemById = (id, items) => items.filter((item) => item.id !== id);\nexport const getEnemyItems = (state) => {\n  const otherPlayers = PLAYERS.filter((player) => state.activePlayerId !== player);\n  return otherPlayers.flatMap((otherPlayer) => getItemsByPlayer(otherPlayer, state.items));\n};\nexport const inRange = (attacker, target, range = 1) => {\n  return Math.abs(target.x - attacker.x) + Math.abs(target.y - attacker.y) <= range;\n};\n\nexport const updateItem = updatedItem => state => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const updateItemById = (updatedItem, state) => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const replaceItems = items => replacements => {\n  return items.map(obj => replacements.find(o => o.id === obj.id) || obj);\n};\n\nexport const updateItems = predicate => updatedItem => state => {\n  const items = state.items.map(updateItemFn(predicate)(updatedItem));\n  return {...state, items};\n};\n\nexport const updateItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? {...el, ...updatedItem} : el);\n};\n\nexport const replaceItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? updatedItem : el);\n};\n\nexport const updateItemByIdFn = (updatedItem) => {\n  return updateItemFn(el => updatedItem.id === el.id)(updatedItem);\n};\n\nexport const matchId = (id) => {\n  return (item) => item.id === id;\n};","export const toward = target => mover => {\n  const xd = target.x - mover.x;\n  const yd = target.y - mover.y;\n  return Math.abs(xd) > Math.abs(yd) ? {x: Math.sign(xd), y: 0} : {x: 0, y: Math.sign(yd)};\n};\n\nexport const move = (mover, direction) => {\n  const {x, y} = direction(mover);\n  return {...mover, x: (mover.x + x), y: (mover.y + y)}\n};\n\nexport const calculateDistance = agent => target => Math.abs(agent.x - target.x) + Math.abs(agent.y - target.y);\n\nexport const compareDistance = agent => (firstEl, secondEl) => {\n  const distance = calculateDistance(agent);\n  return distance(firstEl) - distance(secondEl);\n};","export const compose = (...fns) => (x) => fns.reduceRight((v, f) => f(v), x);\nexport const pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\n","import {selectEventBehavior} from \"../reducer\";\n\nexport const hasBehaviorForEvent = item => event => state => {\n  const behavior = selectEventBehavior(item.behaviorName)(event.type)(state);\n  return !!behavior.length;\n};\n\nexport const isEventVisible = agentId => event => !event.local || agentId === event.agentId;\n","import {generateId, generateState, PLAYERS} from \"./stateGenerator\";\nimport {\n  getItemById,\n  getItemByXYAndType,\n  getItemsByPlayer,\n  getItemsByXY,\n  inRange,\n  removeItemById,\n  updateItem,\n  updateItemById,\n  updateItems\n} from \"./itemsUtil\";\nimport {calculateDistance, move, toward} from \"./movement\";\nimport {pipe} from \"./functional\";\nimport {CROP, FARM, GRASS, PATH, PLANTED, ROCK, TREE, WAREHOUSE} from \"./itemTypes\";\nimport {CROP_GROWN, DEFAULT_EVENT, RESOURCE_PICKUP, SLEEPING} from \"./events/eventTypes\";\nimport {hasBehaviorForEvent, isEventVisible} from \"./events/eventUtils\";\n\nexport const ATTACK = 'brigands/reducer/ATTACK';\nexport const AUTO_ACTION = 'brigands/reducer/AUTO_ACTION';\nexport const BUILD_FARM = 'brigands/reducer/BUILD_FARM';\nexport const BUILD_WAREHOUSE = 'brigands/reducer/BUILD_WAREHOUSE';\nexport const END_TURN = 'brigands/reducer/END_TURN';\nexport const FINISH_TRAIN_EVENT = 'brigands/reducer/FINISH_TRAIN_EVENT';\nexport const HARVEST_CROP = 'brigands/reducer/HARVEST_CROP';\nexport const MOVE = 'brigands/reducer/MOVE';\nexport const MAKE_PATH = 'brigands/reducer/MAKE_PATH';\nexport const PLANT_CROP = 'brigands/reducer/PLANT_CROP';\nexport const RESTART = 'brigands/reducer/RESTART';\nexport const SET_ACTIVE_EVENT = 'brigands/reducer/SET_ACTIVE_EVENT';\nexport const SET_SELECTED = 'brigands/reducer/SET_SELECTED';\nexport const SET_UNIT_BEHAVIOR = 'brigands/reducer/SET_UNIT_BEHAVIOR';\nexport const TRAIN_EVENT = 'brigands/reducer/TRAIN_EVENT';\nexport const UNLOAD_RESOURCE = 'brigands/reducer/UNLOAD_RESOURCE';\nexport const LOAD_RESOURCE = 'brigands/reducer/LOAD_RESOURCE';\nexport const SLEEP = 'brigands/reducer/SLEEP';\n\nexport const selectItemById = id => state => getItemById(id, state.items);\n\nexport const selectSelectedItem = state => getItemById(state.selectedId, state.items);\n\nexport const selectEventBehavior = behaviorName => eventType => state => {\n  const behavior = state.behaviors[behaviorName] || {};\n  const eventBehavior = behavior[eventType] || {};\n  return eventBehavior.conditionalActions || [];\n};\n\nexport const selectEvents = state => state.events;\n\nexport const selectActivePlayerId = state => state.activePlayerId;\n\nconst nextPlayer = (activePlayerId) => {\n  const index = PLAYERS.findIndex((id) => id === activePlayerId);\n  return PLAYERS[(index + 1) % PLAYERS.length];\n};\n\nconst nextTurn = (turn, activePlayerId) => PLAYERS.slice(-1)[0] === activePlayerId ? turn + 1 : turn;\n\nconst delegateToReducer = action => state => reducer(state, action);\n\nconst consumeAp = action => state => {\n  const {getAgent, apCost = () => () => 10} = action.payload;\n  const agent = getAgent(state);\n  return updateItem({...agent, ap: agent.ap - apCost(action)(state)})(state)\n};\n\nconst recordAction = action => state => {\n  const {getAgent} = action.payload;\n  const agent = getAgent(state);\n  return !agent.training ? state : updateItem(\n    {\n      ...agent,\n      behaviorTraining: {\n        ...agent.behaviorTraining,\n        conditionalActions: [...agent.behaviorTraining.conditionalActions, action]\n      }\n    })(state);\n};\n\nconst postAction = action => state => {\n  return pipe(consumeAp(action), recordAction(action))(state);\n};\n\nconst createBuilding = (getAgent, type, state) => {\n  const builder = getAgent(state);\n  const target = getItemByXYAndType(state.items)(builder)(GRASS);\n  return createBuildingOn(getAgent)(type)(target.id)(state);\n};\n\nconst createBuildingOn = getAgent => buildingType => targetId => state => {\n  const builder = getAgent(state);\n  const clearedItems = removeItemById(targetId, state.items);\n  const building = {\n    id: generateId(),\n    builderId: builder.id,\n    x: builder.x,\n    y: builder.y,\n    type: buildingType,\n    createdTurn: state.turn,\n    resources: [],\n  };\n  return {...state, items: [...clearedItems, building]}\n};\n\nconst plantedShouldGrow = turn => item => item.type === PLANTED && item.createdTurn + 5 <= turn;\n\nconst getNextActions = getAgent => state => {\n  const {conditionalActions} = getAgent(state);\n  const index = conditionalActions.findIndex(conditionalAction => conditionalAction.payload.condition(getAgent)(state));\n  return index >= 0 ? conditionalActions.slice(index) : [];\n};\n\nconst getNextAction = getAgent => state => conditionalActions => conditionalActions.find(conditionalAction => conditionalAction.payload.condition(getAgent)(state));\n\nexport const endTurn = () => ({type: END_TURN,});\n\n//TODO different range depending on type\nconst attackCondition = getTarget => getAgent => state => calculateDistance(getAgent(state))(getTarget(getAgent)(state)) <= 1;\n\nexport const attack = getAgent => getTarget => {\n  return {\n    type: ATTACK,\n    payload: {\n      getAgent,\n      getTarget,\n      condition: attackCondition(getTarget),\n    }\n  }\n};\n\nexport const setUnitBehaviorAction = getAgent => ({\n  type: SET_UNIT_BEHAVIOR,\n  payload: {\n    getAgent,\n  }\n});\n\nexport const autoAction = getAgent => ({\n  type: AUTO_ACTION,\n  payload: {\n    getAgent,\n  }\n});\n\nconst buildingTypeExists = type => getAgent => state => {\n  return !state.items.some((item) => item.type === type) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n};\n\nexport const buildWarehouse = getAgent => {\n  return {\n    type: BUILD_WAREHOUSE,\n    payload: {\n      getAgent,\n      condition: buildingTypeExists(WAREHOUSE),\n    }\n  }\n};\n\nconst farmerHasFarm = getAgent => state => {\n  return state.items.some((item) => item.type === FARM && item.builderId === getAgent(state).id);\n};\n\nconst farmCondition = getAgent => state => !farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nexport const buildFarm = getAgent => {\n  return {\n    type: BUILD_FARM,\n    payload: {\n      getAgent,\n      condition: farmCondition,\n    }\n  }\n};\n\nconst plantCropCondition = getAgent => state => farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nexport const plantCrop = getAgent => {\n  return {\n    type: PLANT_CROP,\n    payload: {\n      getAgent,\n      condition: plantCropCondition,\n    }\n  }\n};\n\nconst harvestCropCondition = getAgent => state => getItemByXYAndType(state.items)(getAgent(state))(CROP);\n\nexport const harvestCrop = getAgent => {\n  return {\n    type: HARVEST_CROP,\n    payload: {\n      getAgent,\n      condition: harvestCropCondition,\n    }\n  }\n};\n\nconst moveCondition = getTarget => getAgent => state => {\n  const agent = getAgent(state);\n  const target = getTarget(getAgent)(state);\n  return agent && target && !(agent.x === target.x && agent.y === target.y);\n};\n\nexport const moveTowardTarget = getAgent => getTarget => {\n  const condition = moveCondition(getTarget);\n  const apCost = action => state => {\n    const terrainItem = getItemsByXY(state.items)(action.payload.getAgent(state)).find(item => [PLANTED, TREE, ROCK, CROP, PATH].includes(item.type));\n\n    return terrainItem === PATH ? 5 : 10;\n  };\n  return {\n    type: MOVE,\n    payload: {\n      getAgent,\n      getTarget,\n      apCost,\n      condition,\n    }\n  }\n};\n\nconst makePathTarget = getAgent => state => getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nconst makePathCondition = getTarget => getAgent => state => !!getTarget(getAgent)(state);\n\nexport const makePath = getAgent => ({\n  type: MAKE_PATH,\n  payload: {\n    getAgent,\n    getTarget: makePathTarget,\n    condition: makePathCondition(makePathTarget),\n  }\n});\n\nconst unloadResourceCondition = getAgent => state => {\n  const agent = getAgent(state);\n  const getByType = getItemByXYAndType(state.items)(agent);\n  return agent.resources.length > 0 && (getByType(FARM) || getByType(WAREHOUSE));\n};\n\nexport const unloadResource = getAgent => {\n  return {\n    type: UNLOAD_RESOURCE,\n    payload: {\n      getAgent,\n      condition: unloadResourceCondition,\n    }\n  }\n};\n\nconst loadResourceCondition = getAgent => state => {\n  const agent = getAgent(state);\n  const getByType = getItemByXYAndType(state.items)(agent);\n  const target = getByType(FARM) || getByType(WAREHOUSE) || {};\n  return !!target.resources && target.resources.length > 0;\n};\n\nexport const loadResource = getAgent => {\n  return {\n    type: LOAD_RESOURCE,\n    payload: {\n      getAgent,\n      condition: loadResourceCondition,\n    }\n  }\n};\n\nexport const setActiveEvent = getAgent => event => ({\n  type: SET_ACTIVE_EVENT,\n  payload: {\n    getAgent,\n    event,\n  }\n});\n\nexport const trainEventBehavior = getAgent => event => ({\n  type: TRAIN_EVENT,\n  payload: {\n    getAgent,\n    event,\n  }\n});\n\nexport const finishTrainEventBehavior = getAgent => ({\n  type: FINISH_TRAIN_EVENT,\n  payload: {\n    getAgent,\n  }\n});\n\nexport const restart = () => ({type: RESTART, payload: undefined});\n\nexport const setSelectedItem = id => ({type: SET_SELECTED, payload: id});\n\nexport const sleepOneTurn = getAgent => turn => {\n  const condition = getAgent => state => state.turn <= turn;\n  return {\n    type: SLEEP,\n    payload: {\n      getAgent,\n      condition\n    }\n  };\n};\n\nconst createEvent = type => itemId => turn => ({\n  id: generateId(),\n  type,\n  itemId,\n  turn,\n  local: false,\n});\n\nconst createLocalEvent = type => itemId => turn => agentId => ({\n  ...createEvent(type)(itemId)(turn),\n  agentId,\n  local: true,\n});\n\nconst publishEvents = events => state => {\n  return {...state, events: [...state.events, ...events]}\n};\n//TODO hack, WAREHOUSE is only building that any unit can build\nconst isHome = target => agent => target.builderId === agent.id && target.type !== WAREHOUSE;\n\nconst updateItemsByActivePlayer = fn => state => {\n  const updates = getItemsByPlayer(selectActivePlayerId(state), state.items).map(item => updateItem(fn(item)));\n  return pipe(...updates)(state);\n};\n\nconst replenishAp = state => {\n  const updateFn = item => ({...item, ap: item.ap > 0 ? 10 : item.ap + 10});\n  return updateItemsByActivePlayer(updateFn)(state);\n};\n\nconst cropsGrownEvents = state => {\n  const grownCrops = state.items.filter(plantedShouldGrow(state.turn));\n  const cropEvents = grownCrops.map((item) => (createLocalEvent(CROP_GROWN)(item.id)(state.turn)(item.builderId)));\n  return {...state, events: [...state.events, ...cropEvents]}\n};\n\nconst growCrops = state => updateItems(plantedShouldGrow(state.turn))({type: CROP,})(state);\n\nconst filterOldEvents = state => ({\n  ...state,\n  events: state.events.filter(e => e.turn === state.turn)\n});\n\nconst addEventsToUnits = state => {\n  const updateFn = item => (\n    {\n      ...item,\n      events: [...item.events, ...state.events.filter(event => isEventVisible(item.id)(event) && (hasBehaviorForEvent(item)(event)(state) || item.training))]\n    });\n  return updateItemsByActivePlayer(updateFn)(state);\n};\n\nconst setNextTurn = state => ({...state, turn: nextTurn(state.turn, selectActivePlayerId(state))});\n\nconst setNextPlayer = state => ({\n  ...state,\n  activePlayerId: nextPlayer(selectActivePlayerId(state))\n});\n\nconst updateConditionalActions = getAgent => state => {\n  const nextActions = getNextActions(getAgent)(state);\n  return updateItem({...getAgent(state), conditionalActions: nextActions})(state);\n};\n\nconst performCurrentAction = getAgent => state => {\n  const actions = getAgent(state).conditionalActions;\n  return actions.length > 0 ? delegateToReducer(actions[0])(state) : state;\n};\n\nexport default function reducer(state, action) {\n  console.log('Action');\n  console.log(action);\n  const {payload} = action;\n  switch (action.type) {\n    case END_TURN: {\n      return pipe(replenishAp, cropsGrownEvents, growCrops, filterOldEvents, addEventsToUnits, setNextTurn, setNextPlayer)(state);\n    }\n    case AUTO_ACTION: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      if (agent.ap <= 0) {\n        return state;\n      }\n      //TODO simplify\n      const nextActions = getNextActions(getAgent)(state);\n      return nextActions.length > 0 ? pipe(updateConditionalActions(getAgent), performCurrentAction(getAgent), delegateToReducer(action))(state) : pipe(delegateToReducer(setUnitBehaviorAction(getAgent)), delegateToReducer(action))(state);\n    }\n    case RESTART: {\n      const behaviors = state.behaviors;\n      return {...generateState(), behaviors};\n    }\n    case SET_SELECTED: {\n      return {...state, selectedId: payload};\n    }\n    case ATTACK: {\n      const {getAgent, getTarget} = payload;\n      const attacker = getAgent(state);\n      const target = getTarget(getAgent)(state);\n\n      if (!inRange(attacker, target)) {\n        console.log('target not in range!');\n        return state;\n      }\n      const updatedTarget = {...target, hp: target.hp - 1};\n      return pipe(updateItem(updatedTarget), postAction(action))(state)\n    }\n    case MOVE: {\n      const {getAgent, getTarget} = payload;\n      const moveAgent = (s) => updateItem(move(getAgent(s), toward(getTarget(getAgent)(s))))(s);\n      return pipe(moveAgent, delegateToReducer(makePath(getAgent)), postAction(action))(state);\n    }\n    case MAKE_PATH: {\n      const {getAgent, getTarget, condition} = payload;\n      if (condition(getAgent)(state)) {\n        const target = getTarget(getAgent)(state);\n        //TODO ensure that visited always exists instead of null check\n        const visited = target.visited ? [...target.visited, state.turn] : [state.turn];\n        const type = visited.length > 3 ? PATH : target.type;\n        return updateItem({...target, visited, type})(state);\n      }\n      return state;\n    }\n    case BUILD_FARM: {\n      return createBuilding(payload.getAgent, FARM, postAction(action)(state));\n    }\n    case BUILD_WAREHOUSE: {\n      return createBuilding(payload.getAgent, WAREHOUSE, postAction(action)(state));\n    }\n    case PLANT_CROP: {\n      return createBuilding(payload.getAgent, PLANTED, postAction(action)(state));\n    }\n    case HARVEST_CROP: {\n      const agent = payload.getAgent(state);\n      const target = getItemByXYAndType(state.items)(agent)(CROP);\n      const addedResourceState = updateItemById({\n        ...agent,\n        resources: [...agent.resources, CROP]\n      }, state);\n      return createBuildingOn(payload.getAgent)(GRASS)(target.id)(postAction(action)(addedResourceState));\n    }\n    case LOAD_RESOURCE: {\n      const agent = payload.getAgent(state);\n      const getByType = getItemByXYAndType(state.items)(agent);\n      const target = getByType(FARM) || getByType(WAREHOUSE);\n      const resource = target.resources[0];\n      const updatedAgent = {...agent, resources: [...agent.resources, resource]};\n      const updatedTarget = {...target, resources: target.resources.slice(1)};\n\n      return pipe(updateItem(updatedAgent), updateItem(updatedTarget), postAction(action))(state);\n    }\n    case UNLOAD_RESOURCE: {\n      const agent = payload.getAgent(state);\n      const getByType = getItemByXYAndType(state.items)(agent);\n      const target = getByType(FARM) || getByType(WAREHOUSE);\n      const resource = agent.resources[0];\n      const updatedTarget = {...target, resources: [...target.resources, resource]};\n      const updatedAgent = {...agent, resources: agent.resources.slice(1)};\n      if (isHome(target)(agent)) {\n        const event = {...createEvent(RESOURCE_PICKUP)(target.id)(state.turn), resource};\n        return pipe(updateItem(updatedAgent), updateItem(updatedTarget), publishEvents([event]), postAction(action))(state);\n      }\n      return pipe(updateItem(updatedAgent), updateItem(updatedTarget), postAction(action))(state);\n    }\n    case TRAIN_EVENT: {\n      const {getAgent, event} = payload;\n      const agent = getAgent(state);\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {\n          name: agent.behaviorName,\n          eventType: event.type,\n          event,\n          conditionalActions: []\n        },\n        training: true,\n      }, state);\n    }\n    case FINISH_TRAIN_EVENT: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const {name, eventType, conditionalActions} = agent.behaviorTraining;\n      const behavior = state.behaviors[name] || {};\n      const updatedBehavior = {\n        ...behavior,\n        name,\n        [eventType]: {\n          eventType,\n          conditionalActions,\n        },\n      };\n      const updatedBehaviorState = {\n        ...state,\n        behaviors: {...state.behaviors, [name]: updatedBehavior}\n      };\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {},\n        conditionalActions,\n        training: false,\n      }, updatedBehaviorState);\n\n    }\n    case SET_ACTIVE_EVENT : {\n      const {event, getAgent} = payload;\n      const agent = getAgent(state);\n      return updateItemById({...agent, activeEvent: event}, state);\n    }\n    case SET_UNIT_BEHAVIOR: {\n      //TODO call SET_ACTIVE_EVENT or refactor\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const activeEvent = agent.events.length > 0 ? agent.events[0] : {type: DEFAULT_EVENT};\n      const conditionalActions = selectEventBehavior(agent.behaviorName)(activeEvent.type)(state);\n      const unitActions = conditionalActions.map(conditionalAction => {\n          return {\n            ...conditionalAction,\n            payload: {...conditionalAction.payload, getAgent}\n          }\n        }\n      );\n\n      //TODO quickfix to stop endless recursion if there is no valid action for DEFAULT_EVENT\n      console.log(unitActions);\n      if (activeEvent.type === DEFAULT_EVENT && !getNextAction(getAgent)(state)(unitActions)) {\n        return reducer(state, sleepOneTurn(getAgent)(state.turn));\n      }\n      console.log('Updated actions for event: ' + activeEvent.type);\n      return updateItemById({\n        ...agent,\n        activeEvent,\n        events: agent.events.slice(1),\n        conditionalActions: [...unitActions]\n      }, state);\n    }\n    case SLEEP: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      return pipe(updateItem({\n        ...agent,\n        activeEvent: {type: SLEEPING},\n        conditionalActions: [action]\n      }), consumeAp(action))(state)\n    }\n    default:\n      return state;\n  }\n};\n","import React, {useContext} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport {ReducerDispatch} from \"./App\";\nimport {setSelectedItem} from \"./reducer\";\nimport {\n  CROP,\n  DEAD,\n  FARM,\n  GRASS,\n  HUMAN,\n  MOUNTED,\n  PATH,\n  PLANTED,\n  PLAYER2,\n  ROCK,\n  TREE,\n  WAREHOUSE,\n  WATER\n} from \"./itemTypes\";\n\nconst typeIcons = {\n  [PLAYER2]: 'android',\n  [HUMAN]: 'directions_walk',\n  [MOUNTED]: 'direction_bike',\n  [GRASS]: 'crop_free',\n  [TREE]: 'nature',\n  [WATER]: 'waves',\n  [ROCK]: 'landscape',\n  [DEAD]: 'airline_seat_flat',\n  [FARM]: 'home',\n  [CROP]: 'local_florist',\n  [PLANTED]: 'minimize',\n  [WAREHOUSE]: 'layers',\n  [PATH]: 'grain',\n\n};\n\nconst getIcon = (elem) => elem.hp < 1 ? typeIcons[DEAD] : typeIcons[elem.type] || typeIcons[GRASS];\n\nconst createMatrix = (n = 10, items) => {\n  let matrix = [];\n  for (let y = 0; y < n; y++) {\n    matrix[y] = [];\n    for (let x = 0; x < n; x++) {\n      matrix[y][x] = createAtPosition(items, x, y);\n    }\n  }\n  return matrix;\n};\n\nconst createAtPosition = (items = [], x, y) => {\n  return items.find((item) => item.x === x && item.y === y) || {x: x, y: y, type: '.'}\n};\n\nfunction PlayingFieldCell({elem}) {\n  const {dispatch} = useContext(ReducerDispatch);\n  const handleSetSelected = (id) => () => {\n    dispatch(setSelectedItem(id));\n  };\n  return (\n    <TableCell>\n      <IconButton\n        onClick={handleSetSelected(elem.id)}><Icon>{getIcon(elem)}</Icon></IconButton>\n    </TableCell>);\n}\n\nexport default function PlayingField() {\n  const {items} = useContext(ReducerDispatch).state;\n  const matrix = createMatrix(10, items);\n  return <div className=\"PlayingField\">\n    <Table padding=\"none\">\n      <TableBody>\n        {\n          (matrix.map(row =>\n            <TableRow key={row[0].y}>{\n              row.map(elem => <PlayingFieldCell key={'x' + elem.x + 'y' + elem.y} elem={elem}/>)}\n            </TableRow>))\n        }\n      </TableBody>\n    </Table>\n  </div>;\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport {getEnemyItems, getItemsByPlayer} from \"./itemsUtil\";\nimport {ReducerDispatch} from \"./App\";\nimport {\n  attack,\n  autoAction,\n  buildFarm,\n  buildWarehouse,\n  endTurn,\n  harvestCrop,\n  loadResource,\n  moveTowardTarget,\n  plantCrop,\n  selectItemById,\n  selectSelectedItem,\n  unloadResource\n} from \"./reducer\";\nimport {compareDistance} from \"./movement\";\nimport {FARM, GRASS, WAREHOUSE} from \"./itemTypes\";\n\nconst unitHasAp = getAgent => state => {\n  const item = getAgent(state);\n  return item.ap > 0 && item.playerId === state.activePlayerId;\n};\n\nconst playerItemsWithAp = (playerId) => (items) => {\n  return getItemsByPlayer(playerId, items)\n    .filter(item => item.ap > 0);\n};\n\nfunction OrderButton({action, children}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  if (!shouldDisplayOrder(action)(state)) {\n    return null;\n  }\n  const handleAction = () => dispatch(action);\n  return (<Button onClick={handleAction}>{children}</Button>);\n}\n\nfunction TurnButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const {items, activePlayerId} = state;\n  const handleEndTurn = (playerId) => () => {\n    const playerItems = playerItemsWithAp(playerId)(items);\n    playerItems.forEach(playerItem => {\n      dispatch(autoAction(selectItemById(playerItem.id)));\n    });\n    dispatch(endTurn());\n  };\n  return (\n    <Button onClick={handleEndTurn(activePlayerId)}>Turn({activePlayerId}): {state.turn}</Button>\n  );\n}\n\nconst shouldDisplayOrder = action => state => {\n  const {getAgent, condition} = action.payload;\n  return !!getAgent && unitHasAp(getAgent)(state) && condition(getAgent)(state);\n};\n\nfunction AttackButton({targetId}) {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = () => selectItemById(targetId);\n  const action = attack(getAgent)(getTarget);\n  return (<OrderButton action={action}>Attack Enemy</OrderButton>);\n}\n\nconst targetClosestType = type => getAgent => state => state.items.filter(item => item.type === type).sort(compareDistance(getAgent(state)))[0];\n\n//TODO separate item type and if it is a home. hardcoding 'farm' as that is the only home type\nconst targetHome = getAgent => state => state.items.filter(item => item.type === FARM && item.builderId === getAgent(state).id)[0];\n\nfunction MoveToGrassButton() {\n  const getTarget = targetClosestType(GRASS);\n  return (<MoveButton getTarget={getTarget} targetName={'Grass'}/>);\n}\n\nconst getActiveEventTarget = getAgent => state => {\n  const {activeEvent} = getAgent(state);\n  return selectItemById(activeEvent.itemId)(state);\n};\n\nfunction MoveToEventButton() {\n  return (<MoveButton getTarget={getActiveEventTarget} targetName={'Event'}/>);\n}\n\nfunction MoveToHomeButton() {\n  return (<MoveButton getTarget={targetHome} targetName={'Home'}/>);\n}\n\nfunction MoveToWarehouseButton() {\n  return (<MoveButton getTarget={targetClosestType(WAREHOUSE)} targetName={'Warehouse'}/>);\n}\n\nfunction MoveButton({getTarget, targetName,}) {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = moveTowardTarget(getAgent)(getTarget);\n  return (<OrderButton action={action}>Move To {targetName}</OrderButton>);\n}\n\nfunction BuildWarehouseButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = buildWarehouse(getAgent);\n  return (<OrderButton action={action}>Build warehouse</OrderButton>);\n}\n\nfunction BuildFarmButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = buildFarm(getAgent);\n  return (<OrderButton action={action}>Build farm</OrderButton>);\n}\n\nfunction PlantCropButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = plantCrop(getAgent);\n  return (<OrderButton action={action}>PlantCrop</OrderButton>);\n}\n\nfunction HarvestCropButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = harvestCrop(getAgent);\n  return (<OrderButton action={action}>HarvestCrop</OrderButton>);\n}\n\nfunction UnloadResourceButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = unloadResource(getAgent);\n  return (<OrderButton action={action}>Unload Resource</OrderButton>);\n}\n\nfunction LoadResourceButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = loadResource(getAgent);\n  return (<OrderButton action={action}>Load Resource</OrderButton>);\n}\n\nexport default function Orders() {\n  const {state} = useContext(ReducerDispatch);\n  return <div>\n    <Card>\n      <CardContent>\n        <TurnButton/>\n        {\n          getEnemyItems(state).map((enemy) => <AttackButton key={enemy.id} targetId={enemy.id}/>)\n        }\n        <MoveToGrassButton/>\n        <MoveToEventButton/>\n        <MoveToHomeButton/>\n        <MoveToWarehouseButton/>\n        <BuildWarehouseButton/>\n        <BuildFarmButton/>\n        <PlantCropButton/>\n        <HarvestCropButton/>\n        <UnloadResourceButton/>\n        <LoadResourceButton/>\n      </CardContent>\n    </Card>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {ReducerDispatch} from \"./App\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  finishTrainEventBehavior,\n  selectItemById,\n  selectSelectedItem,\n  setActiveEvent,\n  trainEventBehavior\n} from \"./reducer\";\nimport {DEFAULT_EVENT} from \"./events/eventTypes\";\nimport {isEventVisible} from \"./events/eventUtils\";\n\nfunction UnitCard() {\n  const {state} = useContext(ReducerDispatch);\n  const selected = selectSelectedItem(state);\n  if (selected === undefined) {\n    return null;\n  }\n  const {id, playerId, x, y, hp, ap, type, behaviorName, resources} = selected;\n  const maxHp = 5;\n  const relativeHp = hp / maxHp * 100;\n  const defaultEvent = {type: DEFAULT_EVENT, itemId: selected.id};\n  return (\n    <Card>\n      <CardContent>\n        <Typography>id:{id}</Typography>\n        <Typography>player:{playerId}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>hp:{hp}</Typography>\n        <Typography>ap:{ap}</Typography>\n        <Typography>type:{type}</Typography>\n        <Typography>behavior:{behaviorName}</Typography>\n        <Typography>resource: {resources} </Typography>\n        <LinearProgress variant=\"determinate\" value={relativeHp}/>\n        <TrainEventButton event={defaultEvent}/>\n        <FinishTrainEventButton/>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction SelectEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectSelectedItem;\n  const agent = getAgent(state);\n  if (agent === undefined || agent.activeEvent === event) {\n    return null;\n  }\n  const handleSelectEvent = () => dispatch(setActiveEvent(getAgent)(event));\n  return (<Button color='default' onClick={handleSelectEvent}>Select event {event.type}</Button>);\n}\n\nfunction TrainEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const agent = getAgent(state);\n  if (!agent || agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch(setActiveEvent(getAgent)(event));\n    dispatch(trainEventBehavior(getAgent)(event));\n  };\n  return (<Button color='default' onClick={handleTrainEvent}>Train {event.type} Behavior</Button>);\n}\n\nfunction FinishTrainEventButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const agent = getAgent(state);\n  if (!agent || !agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => dispatch(finishTrainEventBehavior(getAgent));\n  return (\n    <Button color='default' onClick={handleTrainEvent}>Finish train event Behavior</Button>);\n}\n\nfunction EventCard({event}) {\n  const {state} = useContext(ReducerDispatch);\n  const {x, y, type} = (event.itemId ? selectItemById(event.itemId)(state) || {} : {});\n  return (\n    <Card>\n      <CardContent>\n        <Typography>type:{event.type}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>itemType:{type}</Typography>\n        <SelectEventButton event={event}/>\n        <TrainEventButton event={event}/>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction EventsInfo() {\n  const {state} = useContext(ReducerDispatch);\n  const {events} = state;\n  const selectedUnit = selectSelectedItem(state);\n  const visibleEvents = events.filter(isEventVisible(selectedUnit.id));\n  const newEvents = selectedUnit.activeEvent ? [selectedUnit.activeEvent, ...visibleEvents] : visibleEvents;\n  return newEvents.map((event, index) => <EventCard key={\"event\" + index} event={event}/>);\n}\n\nexport default function InfoPane() {\n  return <div>\n    <UnitCard/>\n    <EventsInfo/>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ReducerDispatch} from \"./App\";\nimport {restart} from \"./reducer\";\n\nexport default function WinDialog() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n\n\n  const handleRestart = () => dispatch(restart());\n  return (\n    <div>\n      <Dialog open={!!state.winner} aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{`The winner is ${state.winner}!`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">Play another round?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Yes</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport PlayingField from './PlayingField';\nimport Orders from './Orders';\nimport InfoPane from './InfoPane';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport WinDialog from \"./WinDialog\";\nimport reducer from \"./reducer\";\nimport {generateState} from \"./stateGenerator\";\n\nexport const ReducerDispatch = React.createContext(null);\n\nconst initialState = generateState();\n\nexport default function App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Grid container justify=\"center\" direction=\"row\" spacing={24}>\n        <ReducerDispatch.Provider value={{state, dispatch}}>\n          <WinDialog/>\n          <Grid item xs>\n            <InfoPane/>\n          </Grid>\n          <Grid item xs>\n            <PlayingField size=\"10\"/>\n          </Grid>\n          <Grid item xs={4}>\n            <Orders/>\n          </Grid>\n        </ReducerDispatch.Provider>\n      </Grid>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}