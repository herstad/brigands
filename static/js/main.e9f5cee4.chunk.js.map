{"version":3,"sources":["PlayingField.js","stateGenerator.js","itemsUtil.js","movement.js","reducer.js","Orders.js","InfoPane.js","WinDialog.js","App.js","serviceWorker.js","index.js"],"names":["typeIcons","o","x","mounted","grass","tree","water","rock","dead","farm","crop","planted","getIcon","elem","hp","type","createMatrix","n","arguments","length","undefined","items","matrix","y","createAtPosition","find","item","PlayingFieldCell","_ref","id","dispatch","useContext","ReducerDispatch","react_default","a","createElement","TableCell_default","IconButton_default","onClick","payload","Icon_default","PlayingField","state","className","Table_default","padding","TableBody_default","map","row","TableRow_default","key","PLAYERS","generateState","console","log","generateItems","turn","activePlayerId","selectedId","winner","events","itemId","behaviors","training","generateId","size","units","playerId","ap","behaviorName","conditionalActions","genPos","generatePosition","concat","defaultValues","i","push","generateDefaultItems","points","generateRandomMatrix","Object","objectSpread","shift","array","Array","from","keys","flat","shuffleArray","j","Math","floor","random","isPlayer","getItemById","getItemsByPlayer","filter","matchPlayer","getItemByXYAndType","selectedItem","findItemByType","getItemsByXY","getEnemyItems","player","flatMap","otherPlayer","inRange","attacker","target","range","abs","updateItemById","updatedItem","updateItemByIdFn","replaceItems","replacements","obj","updateItems","predicate","updateItemFn","el","toward","mover","xd","yd","sign","move","direction","_direction","selectItemById","selectSelectedItem","selectEventBehavior","eventType","selectEvents","nextPlayer","index","findIndex","nextTurn","slice","getWinner","isLoser","every","consumeAp","action","condition","agent","agentId","getAgent","conditionalAction","behaviorTraining","createBuilding","builderId","builder","createBuildingOn","buildingType","targetId","clearedItems","building","createdTurn","toConsumableArray","plantedShouldGrow","hasBehaviorForEvent","event","getNextAction","setUnitBehaviorAction","reducer","apItems","grownCrops","newCrops","cropEvents","e","updatedEventItems","nextAction","getTarget","consumedState","name","_agent3$behaviorTrain","behavior","updatedBehavior","defineProperty","updatedBehaviorState","currentEvent","farmerHasFarm","some","getButtonColor","isSelectedAction","playerItemsWithAp","TurnButton","_useContext","Button_default","forEach","playerItem","shouldDisplayOrder","unitHasAp","AttackButton","_useContext2","color","moveCondition","compareDistance","firstEl","secondEl","distance","calculateDistance","targetClosestType","sort","handleMove","MoveToGrassButton","_useContext3","handleMoveToGrass","MoveToEventsButton","MoveToEventButton","getCurrentEvent","handleMoveToEvent","_ref2","_useContext5","getCurrentEventTarget","handleMoveToEventClick","BuildFarmButton","_useContext6","PlantCropButton","_useContext7","HarvestCropButton","_useContext8","Orders","Card_default","CardContent_default","enemy","UnitCard","selected","relativeHp","defaultEvent","Typography_default","LinearProgress_default","variant","value","TrainEventButton","FinishTrainEventButton","EventCard","_ref3","EventsInfo","InfoPane","WinDialog","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","React","createContext","initialState","Boolean","window","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","slicedToArray","CssBaseline_default","Grid_default","container","justify","spacing","Provider","xs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9f5cee4.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport {ReducerDispatch} from \"./App\";\n\nconst typeIcons = {\n  o: 'android',\n  x: 'directions_walk',\n  mounted: 'direction_bike',\n  grass: 'crop_free',\n  tree: 'nature',\n  water: 'waves',\n  rock: 'landscape',\n  dead: 'airline_seat_flat',\n  farm: 'home',\n  crop: 'local_florist',\n  planted: 'minimize',\n\n};\n\nconst getIcon = (elem) => elem.hp < 1 ? typeIcons['dead'] : typeIcons[elem.type] || 'crop_free';\n\nconst createMatrix = (n = 10, items) => {\n  let matrix = [];\n  for (let y = 0; y < n; y++) {\n    matrix[y] = [];\n    for (let x = 0; x < n; x++) {\n      matrix[y][x] = createAtPosition(items, x, y);\n    }\n  }\n  return matrix;\n};\n\nconst createAtPosition = (items = [], x, y) => {\n  return items.find((item) => item.x === x && item.y === y) || {x: x, y: y, type: '.'}\n};\n\nfunction PlayingFieldCell({elem}) {\n  const {dispatch} = useContext(ReducerDispatch);\n  const handleSetSelected = (id) => () => {\n    dispatch({type: 'SET_SELECTED', payload: id});\n  };\n  return (\n    <TableCell>\n      <IconButton\n        onClick={handleSetSelected(elem.id)}><Icon>{getIcon(elem)}</Icon></IconButton>\n    </TableCell>);\n}\n\nexport default function PlayingField() {\n  const {items} = useContext(ReducerDispatch).state;\n  const matrix = createMatrix(10, items);\n  return <div className=\"PlayingField\">\n    <Table padding=\"none\">\n      <TableBody>\n        {\n          (matrix.map(row =>\n            <TableRow key={row[0].y}>{\n              row.map(elem => <PlayingFieldCell key={'x' + elem.x + 'y' + elem.y} elem={elem}/>)}\n            </TableRow>))\n        }\n      </TableBody>\n    </Table>\n  </div>;\n}\n","export const PLAYERS = ['human']; // TODO readd ai bug where ai shares behavior and consumes ap\n// export const PLAYERS =  ['human', 'ai'];\n\nexport const generateState = () => {\n  console.log(\"generate state\");\n\n  const items = generateItems();\n  return {\n    turn: 0,\n    activePlayerId: PLAYERS[0],\n    items,\n    selectedId: items[0].id,\n    winner: undefined,\n    events: [{type: 'ENEMY_SPOTTED', itemId: items[1].id}, {type: 'GAME_STARTED'}],\n    behaviors: {},\n    training: false,\n  };\n};\n\nlet itemId = 0;\n\nexport const generateId = () => {\n  itemId++;\n  return itemId;\n};\n\nconst generateDefaultItems = (size) => {\n  const defaultValues = [];\n  for (let i = 0; i < size; i++) {\n    defaultValues.push({id: generateId(), type: 'grass'});\n  }\n  return defaultValues;\n};\n\nconst generateItems = (size = 10) => {\n  const units = [\n    {\n      id: generateId(),\n      hp: 5, type: 'x',\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: 'o',\n      playerId: 'ai',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n    },\n  ];\n\n  const items = [\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'water'},\n    {id: generateId(), type: 'water'},\n    {id: generateId(), type: 'water'},\n  ];\n\n  const genPos = generatePosition(size);\n  return genPos(units).concat(genPos(items.concat(generateDefaultItems(size * size - items.length))));\n};\n\nconst generatePosition = (size) => (items) => {\n  const points = generateRandomMatrix(size);\n  return items.map((item) => ({...item, ...points.shift()}));\n};\n\nconst generateRandomMatrix = (size) => {\n  const array = Array.from(Array(size).keys());\n  const matrix = array.map((x) => {\n    return array.map((y) => {\n      return {x, y};\n    })\n  }).flat();\n  shuffleArray(matrix);\n  return matrix;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};","import {PLAYERS} from \"./stateGenerator\";\n\nexport const isPlayer = (playerId, item) => item.playerId === playerId;\nexport const matchPlayer = (playerId) => (item) => isPlayer(playerId, item);\nexport const getItemById = (id, items) => items.find((item) => item.id === id);\nexport const getItemsByPlayer = (playerId, items) => items.filter(matchPlayer(playerId));\nexport const getItemsByXY = items => ({x, y}) => items.filter((item) => item.x === x && item.y === y);\nexport const getItemByXYAndType = items => selectedItem => type => findItemByType(getItemsByXY(items)(selectedItem))(type);\nexport const findItemByType = items => type => items.find(item => item.type === type);\nexport const removeItemById = (id, items) => items.filter((item) => item.id !== id);\nexport const getEnemyItems = (state) => {\n  const otherPlayers = PLAYERS.filter((player) => state.activePlayerId !== player);\n  return otherPlayers.flatMap((otherPlayer) => getItemsByPlayer(otherPlayer, state.items));\n};\nexport const inRange = (attacker, target, range = 1) => {\n  return Math.abs(target.x - attacker.x) + Math.abs(target.y - attacker.y) <= range;\n};\nexport const updateItemById = (updatedItem, state) => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const replaceItems = items => replacements => {\n  return items.map(obj => replacements.find(o => o.id === obj.id) || obj);\n};\n\nexport const updateItems = predicate => updatedItem => items => {\n  return items.map(updateItemFn(predicate)(updatedItem));\n};\n\nexport const updateItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? {...el, ...updatedItem} : el);\n};\n\nexport const replaceItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? updatedItem : el);\n};\n\nexport const updateItemByIdFn = (updatedItem) => {\n  return updateItemFn(el => updatedItem.id === el.id)(updatedItem);\n};\n\nexport const matchId = (id) => {\n  return (item) => item.id === id;\n};","export const toward = target => mover => {\n  const xd = target.x - mover.x;\n  const yd = target.y - mover.y;\n  return Math.abs(xd) > Math.abs(yd) ? {x: Math.sign(xd), y: 0} : {x: 0, y: Math.sign(yd)};\n};\n\nexport const move = (mover, direction) => {\n  const {x, y} = direction(mover);\n  return {...mover, x: (mover.x + x), y: (mover.y + y)}\n};","import {generateId, generateState, PLAYERS} from \"./stateGenerator\";\nimport {\n  getItemById,\n  getItemByXYAndType,\n  getItemsByPlayer,\n  inRange,\n  isPlayer,\n  removeItemById,\n  replaceItems,\n  updateItemById,\n  updateItems\n} from \"./itemsUtil\";\nimport {move, toward} from \"./movement\";\n\nexport const selectItemById = id => state => getItemById(id, state.items);\n\nexport const selectSelectedItem = (state) => getItemById(state.selectedId, state.items);\n\nconst selectEventBehavior = behaviorName => eventType => state => {\n  const behavior = state.behaviors[behaviorName] || {};\n  const eventBehavior = behavior[eventType] || {};\n  return eventBehavior.conditionalActions || [];\n};\n\nexport const selectEvents = state => state.events;\n\nconst nextPlayer = (activePlayerId) => {\n  const index = PLAYERS.findIndex((id) => id === activePlayerId);\n  return PLAYERS[(index + 1) % PLAYERS.length];\n};\n\nconst nextTurn = (turn, activePlayerId) => PLAYERS.slice(-1)[0] === activePlayerId ? turn + 1 : turn;\n\nconst getWinner = (state) => {\n  return isLoser('ai', state.items) ? 'human' : isLoser('human', state.items) ? 'ai' : undefined;\n};\n\nconst isLoser = (playerId, items) => {\n  return getItemsByPlayer(playerId, items).every((item) => item.hp <= 0);\n};\n\nconst consumeAp = (action, state) => {\n  const {condition} = action.payload;\n  // TODO require getAgent\n  const agent = action.payload.agentId !== undefined ? selectItemById(action.payload.agentId)(state) : action.payload.getAgent(state);\n  const selectedItem = {\n    ...agent,\n    ap: 0,\n    action,\n    condition,\n  };\n  // TODO rewrite without if\n  if (!!selectedItem.training) {\n    const conditionalAction = {action, condition};\n    selectedItem.behaviorTraining.conditionalActions.push(conditionalAction);\n  } else {\n    const index = selectedItem.conditionalActions.findIndex(conditionalAction => conditionalAction.action.type === action.type);\n    if (index > 0) {\n      selectedItem.conditionalActions = selectedItem.conditionalActions.slice(index);\n    }\n  }\n  return updateItemById(selectedItem, state);\n};\n\nconst createBuilding = (builderId, type, state) => {\n  const builder = selectItemById(builderId)(state);\n  const target = getItemByXYAndType(state.items)(builder)('grass');\n  return createBuildingOn(builderId)(type)(target.id)(state);\n};\n\nconst createBuildingOn = builderId => buildingType => targetId => state => {\n  const builder = selectItemById(builderId)(state);\n  const clearedItems = removeItemById(targetId, state.items);\n  const building = {\n    id: generateId(),\n    builderId,\n    x: builder.x,\n    y: builder.y,\n    type: buildingType,\n    createdTurn: state.turn,\n  };\n  return {...state, items: [...clearedItems, building]}\n};\n\nconst plantedShouldGrow = turn => item => item.type === 'planted' && item.createdTurn + 5 <= turn;\n\nconst hasBehaviorForEvent = item => event => state => {\n  const behavior = selectEventBehavior(item.behaviorName)(event.type)(state);\n  return !!behavior.length;\n};\n\n// TODO remove original\nconst getNextAction = state => conditionalActions => conditionalActions.find(conditionalAction => conditionalAction.condition(state));\n\nconst setUnitBehaviorAction = getAgent => ({\n  type: 'SET_UNIT_BEHAVIOR',\n  payload: {\n    getAgent,\n  }\n});\n\nexport default function reducer(state, action) {\n  console.log('Action');\n  console.log(action);\n  const {payload} = action;\n  switch (action.type) {\n    case 'END_TURN': {\n      const apItems = updateItems((item) => isPlayer(payload, item))({ap: 1})(state.items);\n      const grownCrops = apItems.filter(plantedShouldGrow(state.turn));\n      const newCrops = updateItems(plantedShouldGrow(state.turn))({type: 'crop',})(grownCrops);\n      let items = replaceItems(apItems)(newCrops);\n      const cropEvents = newCrops.map((item) => ({\n        id: generateId(),\n        type: 'CROP_GROWN',\n        itemId: item.id,\n        turn: state.turn\n      }));\n      const events = [...state.events, ...cropEvents].filter(e => e.turn === state.turn);\n\n\n      const updatedEventItems = getItemsByPlayer(state.activePlayerId, items).map(item => (\n        {\n          ...item,\n          events: [...item.events, ...events.filter(event => hasBehaviorForEvent(item)(event)(state) || item.training)]\n        }));\n      items = replaceItems(items)(updatedEventItems);\n\n\n      return {\n        ...state,\n        items,\n        turn: nextTurn(state.turn, state.activePlayerId),\n        activePlayerId: nextPlayer(state.activePlayerId),\n        winner: getWinner(state),\n        events,\n      };\n    }\n    case 'AUTO_ACTION': {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      console.log(agent);\n      const nextAction = getNextAction(state)(agent.conditionalActions);\n      return nextAction ? reducer(state, nextAction.action) : reducer(state, setUnitBehaviorAction(getAgent));\n    }\n    case 'RESTART': {\n      const behaviors = state.behaviors;\n      return {...generateState(), behaviors};\n    }\n    case 'SET_SELECTED': {\n      return {...state, selectedId: payload};\n    }\n    case 'ATTACK': {\n      const {getAgent, getTarget} = payload;\n      const consumedState = consumeAp(action, state);\n      const attacker = getAgent(consumedState);\n      const target = getTarget(consumedState);\n      if (inRange(attacker, target)) {\n        console.log('target in range!');\n        return updateItemById({...target, hp: target.hp - 1}, consumedState);\n      } else {\n        console.log('target not in range!');\n        return updateItemById(move(attacker, toward(target)), consumedState);\n      }\n    }\n    case 'MOVE': {\n      const {getAgent, getTarget} = payload;\n      const consumedState = consumeAp(action, state);\n      const agent = getAgent(consumedState);\n      const target = getTarget(consumedState);\n      return updateItemById(move(agent, toward(target)), consumedState);\n    }\n    case 'BUILD_FARM': {\n      return createBuilding(payload.agentId, 'farm', consumeAp(action, state));\n    }\n    case 'PLANT_CROP': {\n      return createBuilding(payload.agentId, 'planted', consumeAp(action, state));\n    }\n    case 'HARVEST_CROP': {\n      const agent = payload.getAgent(state);\n      const target = getItemByXYAndType(state.items)(agent)('crop');\n      return createBuildingOn(agent.id)('grass')(target.id)(consumeAp(action, state));\n    }\n    case 'TRAIN_EVENT': {\n      const {agentId, event} = payload;\n      return updateItemById({\n        id: agentId,\n        behaviorTraining: {name: 'farmer', eventType: event.type, event, conditionalActions: []},\n        training: true,\n      }, state);\n    }\n    case 'FINISH_TRAIN_EVENT': {\n      const {agentId} = payload;\n      const agent = selectItemById(agentId)(state);\n      const {name, eventType, conditionalActions} = agent.behaviorTraining;\n      const behavior = state.behaviors[name] || {};\n      const updatedBehavior = {\n        ...behavior,\n        name,\n        [eventType]: {\n          eventType,\n          conditionalActions,\n        },\n      };\n      const updatedBehaviorState = {\n        ...state,\n        behaviors: {...state.behaviors, [name]: updatedBehavior}\n      };\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {},\n        conditionalActions,\n        training: false,\n      }, updatedBehaviorState);\n\n    }\n    case 'SET_ACTIVE_EVENT' : {\n      //TOOD rename currentEvent to activeEvent\n      const {event, getAgent} = payload;\n      const agent = getAgent(state);\n\n      return updateItemById({...agent, currentEvent: event}, state);\n    }\n    case 'SET_UNIT_BEHAVIOR': {\n      //TODO call SET_ACTIVE_EVENT or refactor\n      const agent = payload.getAgent(state);\n      const currentEvent = agent.events.length > 0 ? agent.events[0] : {type: 'DEFAULT_EVENT'};\n      console.log(currentEvent);\n      const conditionalActions = selectEventBehavior(agent.behaviorName)(currentEvent.type)(state);\n      console.log('Updated actions for event: ' + currentEvent.type);\n      return updateItemById({\n        ...agent,\n        currentEvent,\n        events: agent.events.slice(1),\n        conditionalActions: [...conditionalActions]\n      }, state);\n    }\n    default:\n      return state;\n  }\n};\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport {getEnemyItems, getItemByXYAndType, getItemsByPlayer} from \"./itemsUtil\";\nimport {ReducerDispatch} from \"./App\";\nimport {selectEvents, selectItemById, selectSelectedItem} from \"./reducer\";\n\n//TODO replace id with getAgent\nconst unitHasAp = id => state => {\n  const item = selectItemById(id)(state);\n  return item.ap > 0 && item.playerId === state.activePlayerId;\n};\n\nconst farmerHasFarm = getAgent => state => {\n  return state.items.some((item) => item.type === 'farm' && item.builderId === getAgent(state).id);\n};\n\nconst getButtonColor = (type, state) => isSelectedAction(type, state) ? 'primary' : 'default';\n\nconst playerItemsWithAp = (playerId) => (items) => {\n  return getItemsByPlayer(playerId, items)\n    .filter(item => item.ap > 0);\n};\n\nconst getNextAction = state => conditionalActions => conditionalActions.find((conditionalAction) => conditionalAction.condition(state));\n\nconst isSelectedAction = (type, state) => {\n  const conditionalAction = getNextAction(state)(selectSelectedItem(state).conditionalActions);\n  return conditionalAction && type === conditionalAction.action.type;\n};\n\nfunction TurnButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const {items, activePlayerId} = state;\n  const handleEndTurn = (playerId) => () => {\n    const playerItems = playerItemsWithAp(playerId)(items);\n    playerItems.forEach(playerItem => {\n      dispatch({\n        type: 'AUTO_ACTION',\n        payload: {\n          getAgent: selectItemById(playerItem.id)\n        }\n      });\n    });\n    dispatch({\n      type: 'END_TURN',\n      payload: playerId\n    })\n  };\n  return (\n    <Button onClick={handleEndTurn(activePlayerId)}>Turn({activePlayerId}): {state.turn}</Button>\n  );\n}\n\nconst shouldDisplayOrder = id => condition => state => unitHasAp(id)(state) && condition(state);\n\nfunction AttackButton({targetId}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = selectItemById(targetId);\n  const condition = () => true;\n  if (!shouldDisplayOrder(state.selectedId)(condition)(state)) {\n    return null;\n  }\n  const color = getButtonColor('ATTACK', state);\n  const handleAttack = () => {\n    dispatch({\n      type: 'ATTACK',\n      payload: {\n        getAgent,\n        getTarget,\n        condition,\n      }\n    })\n  };\n  return (<Button color={color} onClick={handleAttack}>Attack Enemy</Button>);\n}\n\nconst moveCondition = getTarget => getAgent => state => {\n  const agent = getAgent(state);\n  const target = getTarget(state);\n  return agent && target && !(agent.x === target.x && agent.y === target.y);\n};\n\nconst calculateDistance = agent => target => Math.abs(agent.x - target.x) + Math.abs(agent.y - target.y);\n\nconst compareDistance = agent => (firstEl, secondEl) => {\n  const distance = calculateDistance(agent);\n  return distance(firstEl) - distance(secondEl);\n};\nconst targetClosestType = getAgent => type => state => state.items.filter(item => item.type === type).sort(compareDistance(getAgent(state)))[0];\n\nconst handleMove = getAgent => getTarget => condition => dispatch => () => {\n  dispatch({\n    type: 'MOVE',\n    payload: {\n      getAgent,\n      getTarget,\n      condition,\n    }\n  })\n};\n\nfunction MoveToGrassButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = targetClosestType(getAgent)('grass');\n  const condition = moveCondition(getTarget)(getAgent);\n  if (!shouldDisplayOrder(state.selectedId)(condition)(state)) {\n    return null;\n  }\n  const color = getButtonColor('MOVE', state);\n  const handleMoveToGrass = handleMove(getAgent)(getTarget)(condition)(dispatch);\n  return (<Button color={color} onClick={handleMoveToGrass}>Move To Grass</Button>);\n}\n\nfunction MoveToEventsButton() {\n  const {state} = useContext(ReducerDispatch);\n  let events = selectEvents(state);\n  const agent = selectSelectedItem(state);\n  if (agent && agent.training && !events.some(event => event.type === agent.behaviorTraining.event.type)) {\n    events.push(agent.behaviorTraining.event);\n  }\n  events = events.filter(event => event.itemId !== undefined);\n  if (!events) {\n    return null;\n  }\n  return events.map(event => <MoveToEventButton key={event.itemId} event={event}/>);\n}\n\nconst getCurrentEvent = getAgent => state => {\n  const {currentEvent} = getAgent(state);\n  return selectItemById(currentEvent.itemId)(state);\n};\n\nconst handleMoveToEvent = getAgent => event => condition => dispatch => () => {\n  dispatch({type: 'SET_ACTIVE_EVENT', payload: {getAgent, event}});\n  handleMove(getAgent)(getCurrentEvent(getAgent))(condition)(dispatch)();\n};\n\n// TODO move to currentEvent (set current event then move)\nfunction MoveToEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = selectItemById(event.itemId);\n  const condition = moveCondition(getTarget)(getAgent);\n  if (!shouldDisplayOrder(state.selectedId)(condition)(state)) {\n    return null;\n  }\n  const color = getButtonColor('MOVE', state);\n  //TODO event orders should only be displayed with an active event. They should assume this is\n  // done before\n  const getCurrentEventTarget = getCurrentEvent(getAgent);\n  const handleMoveToEventClick = handleMoveToEvent(getAgent)(event)(moveCondition(getCurrentEventTarget)(getAgent))(dispatch);\n  return (\n    <Button color={color} onClick={handleMoveToEventClick}>Move To Event {event.type} </Button>);\n}\n\nfunction BuildFarmButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => {\n    return !farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(agent)('grass');\n  };\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handleBuildFarm = () => {\n    dispatch({\n      type: 'BUILD_FARM',\n      payload: {\n        agentId: agent.id,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleBuildFarm}>Build farm</Button>);\n}\n\nfunction PlantCropButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => {\n    return farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))('grass');\n  };\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handlePlantCrop = () => {\n    dispatch({\n      type: 'PLANT_CROP',\n      payload: {\n        agentId: agent.id,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handlePlantCrop}>PlantCrop</Button>);\n}\n\nfunction HarvestCropButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const condition = state => getItemByXYAndType(state.items)(getAgent(state))('crop');\n  if (!shouldDisplayOrder(agent.id)(condition)(state)) {\n    return null;\n  }\n  const handleHarvestCrop = () => {\n    dispatch({\n      type: 'HARVEST_CROP',\n      payload: {\n        getAgent,\n        condition,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleHarvestCrop}>HarvestCrop</Button>);\n}\n\nexport default function Orders() {\n  const {state} = useContext(ReducerDispatch);\n  return <div>\n    <Card>\n      <CardContent>\n        <TurnButton/>\n        {\n          getEnemyItems(state).map((enemy) => <AttackButton key={enemy.id} targetId={enemy.id}/>)\n        }\n        <MoveToGrassButton/>\n        <MoveToEventsButton/>\n        <BuildFarmButton/>\n        <PlantCropButton/>\n        <HarvestCropButton/>\n      </CardContent>\n    </Card>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {ReducerDispatch} from \"./App\";\nimport Button from \"@material-ui/core/Button\";\nimport {selectItemById, selectSelectedItem} from \"./reducer\";\n\nfunction UnitCard() {\n  const {state} = useContext(ReducerDispatch);\n  const selected = selectSelectedItem(state);\n  if (selected === undefined) {\n    return null;\n  }\n  const {id, playerId, x, y, hp, ap, type} = selected;\n  const maxHp = 5;\n  const relativeHp = hp / maxHp * 100;\n  const defaultEvent = {type: 'DEFAULT_EVENT', itemId: selected.id};\n  return (\n    <Card>\n      <CardContent>\n        <Typography>id:{id}</Typography>\n        <Typography>player:{playerId}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>hp:{hp}</Typography>\n        <Typography>ap:{ap}</Typography>\n        <Typography>type:{type}</Typography>\n        <LinearProgress variant=\"determinate\" value={relativeHp}/>\n        <TrainEventButton event={defaultEvent}/>\n        <FinishTrainEventButton/>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction TrainEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  if (agent === undefined || agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch({\n      type: 'TRAIN_EVENT',\n      payload: {\n        agentId: agent.id,\n        event,\n      }\n    })\n  };\n  return (<Button color='default' onClick={handleTrainEvent}>Train {event.type} Behavior</Button>);\n}\n\nfunction FinishTrainEventButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  if (agent === undefined || !agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch({\n      type: 'FINISH_TRAIN_EVENT',\n      payload: {\n        agentId: agent.id,\n      }\n    })\n  };\n  return (\n    <Button color='default' onClick={handleTrainEvent}>Finish train event Behavior</Button>);\n}\n\nfunction EventCard({event}) {\n  const {state} = useContext(ReducerDispatch);\n  // TODO check item connected to event  still exists\n  const {x, y, type} = (event.itemId ? selectItemById(event.itemId)(state) || {} : {});\n  return (\n    <Card>\n      <CardContent>\n        <Typography>type:{event.type}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>itemType:{type}</Typography>\n        <TrainEventButton event={event}/>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction EventsInfo() {\n  const {events} = useContext(ReducerDispatch).state;\n  return events.map((event, index) => <EventCard key={\"event\" + index} event={event}/>);\n}\n\nexport default function InfoPane() {\n  return <div>\n    <UnitCard/>\n    <EventsInfo/>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ReducerDispatch} from \"./App\";\n\nexport default function WinDialog() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n\n\n  const handleRestart = () => dispatch({type: 'RESTART', payload: undefined});\n  return (\n    <div>\n      <Dialog open={!!state.winner} aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{`The winner is ${state.winner}!`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">Play another round?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Yes</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport PlayingField from './PlayingField';\nimport Orders from './Orders';\nimport InfoPane from './InfoPane';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport WinDialog from \"./WinDialog\";\nimport reducer from \"./reducer\";\nimport {generateState} from \"./stateGenerator\";\n\nexport const ReducerDispatch = React.createContext(null);\n\nconst initialState = generateState();\n\nexport default function App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Grid container justify=\"center\" direction=\"row\" spacing={24}>\n        <ReducerDispatch.Provider value={{state, dispatch}}>\n          <WinDialog/>\n          <Grid item xs>\n            <InfoPane/>\n          </Grid>\n          <Grid item xs>\n            <PlayingField size=\"10\"/>\n          </Grid>\n          <Grid item xs={4}>\n            <Orders/>\n          </Grid>\n        </ReducerDispatch.Provider>\n      </Grid>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}