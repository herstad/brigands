{"version":3,"sources":["stateGenerator.js","itemsUtil.js","movement.js","functional.js","reducer.js","PlayingField.js","Orders.js","InfoPane.js","WinDialog.js","App.js","serviceWorker.js","index.js"],"names":["PLAYERS","generateState","console","log","items","generateItems","turn","activePlayerId","selectedId","id","winner","undefined","events","type","itemId","behaviors","training","generateId","size","arguments","length","units","hp","playerId","ap","behaviorName","conditionalActions","activeEvent","resources","genPos","generatePosition","concat","defaultValues","i","push","generateDefaultItems","points","generateRandomMatrix","map","item","Object","objectSpread","shift","array","Array","from","keys","matrix","x","y","flat","shuffleArray","j","Math","floor","random","_ref","isPlayer","getItemById","find","getItemsByPlayer","filter","matchPlayer","getItemByXYAndType","selectedItem","findItemByType","getItemsByXY","getEnemyItems","state","player","flatMap","otherPlayer","inRange","attacker","target","range","abs","updateItem","updatedItem","updateItemByIdFn","updateItemById","replaceItems","replacements","obj","o","updateItems","predicate","updateItemFn","el","toward","mover","xd","yd","sign","move","direction","_direction","calculateDistance","agent","pipe","_len2","fns","_key2","reduce","v","f","ATTACK","AUTO_ACTION","BUILD_FARM","BUILD_WAREHOUSE","END_TURN","FINISH_TRAIN_EVENT","HARVEST_CROP","MOVE","PLANT_CROP","RESTART","SET_ACTIVE_EVENT","SET_SELECTED","SET_UNIT_BEHAVIOR","TRAIN_EVENT","UNLOAD_RESOURCE","SLEEP","selectItemById","selectSelectedItem","selectEventBehavior","eventType","selectActivePlayerId","nextPlayer","index","findIndex","nextTurn","slice","getWinner","isLoser","every","consumeAp","action","condition","payload","agentId","getAgent","behaviorTraining","conditionalAction","postAction","createBuilding","builder","createBuildingOn","buildingType","targetId","clearedItems","building","builderId","createdTurn","toConsumableArray","plantedShouldGrow","hasBehaviorForEvent","event","getNextAction","endTurn","attackCondition","getTarget","attack","setUnitBehaviorAction","autoAction","buildWarehouse","some","farmerHasFarm","farmCondition","buildFarm","plantCropCondition","plantCrop","harvestCropCondition","harvestCrop","moveTowardTarget","moveCondition","unloadResourceCondition","unloadResource","setActiveEvent","trainEventBehavior","finishTrainEventBehavior","restart","setSelectedItem","sleepOneTurn","reducer","apItems","grownCrops","newCrops","cropEvents","e","updatedEventItems","nextAction","updatedTarget","s","addedResourceState","updatedAgent","name","_agent3$behaviorTrain","behavior","updatedBehavior","defineProperty","updatedBehaviorState","unitActions","typeIcons","mounted","grass","tree","water","rock","dead","farm","crop","planted","warehouse","getIcon","elem","createMatrix","n","createAtPosition","PlayingFieldCell","dispatch","useContext","ReducerDispatch","react_default","a","createElement","TableCell_default","IconButton_default","onClick","Icon_default","PlayingField","className","Table_default","padding","TableBody_default","row","TableRow_default","key","playerItemsWithAp","OrderButton","children","_useContext","shouldDisplayOrder","Button_default","TurnButton","_useContext2","forEach","playerItem","_action$payload","unitHasAp","AttackButton","_ref2","targetClosestType","sort","firstEl","secondEl","distance","targetHome","MoveToGrassButton","MoveButton","targetName","getActiveEventTarget","MoveToEventButton","MoveToHomeButton","_ref3","BuildWarehouseButton","BuildFarmButton","PlantCropButton","HarvestCropButton","UnloadResourceButton","Orders","Card_default","CardContent_default","enemy","UnitCard","selected","relativeHp","defaultEvent","Typography_default","LinearProgress_default","variant","value","TrainEventButton","FinishTrainEventButton","SelectEventButton","color","_useContext3","_useContext4","EventCard","_ref4","EventsInfo","selectedUnit","InfoPane","WinDialog","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","React","createContext","initialState","Boolean","window","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","slicedToArray","CssBaseline_default","Grid_default","container","justify","spacing","Provider","xs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ca3cce7.chunk.js","sourcesContent":["export const PLAYERS = ['human', 'ai'];\n\nexport const generateState = () => {\n  console.log(\"generate state\");\n\n  const items = generateItems();\n  return {\n    turn: 0,\n    activePlayerId: PLAYERS[0],\n    items,\n    selectedId: items[0].id,\n    winner: undefined,\n    events: [{type: 'ENEMY_SPOTTED', itemId: items[1].id}, {type: 'GAME_STARTED'}],\n    behaviors: {},\n    training: false,\n  };\n};\n\nlet itemId = 0;\n\nexport const generateId = () => {\n  itemId++;\n  return itemId;\n};\n\nconst generateDefaultItems = (size) => {\n  const defaultValues = [];\n  for (let i = 0; i < size; i++) {\n    defaultValues.push({id: generateId(), type: 'grass'});\n  }\n  return defaultValues;\n};\n\nconst generateItems = (size = 10) => {\n  const units = [\n    {\n      id: generateId(),\n      hp: 5,\n      type: 'x',\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: 'DEFAULT_EVENT'},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: 'o',\n      playerId: 'ai',\n      ap: 1,\n      behaviorName: 'brigand',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: 'DEFAULT_EVENT'},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: 'x',\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: 'DEFAULT_EVENT'},\n      resources: [],\n    },\n  ];\n\n  const items = [\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'tree'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'rock'},\n    {id: generateId(), type: 'water'},\n    {id: generateId(), type: 'water'},\n    {id: generateId(), type: 'water'},\n  ];\n\n  const genPos = generatePosition(size);\n  return genPos(units).concat(genPos(items.concat(generateDefaultItems(size * size - items.length))));\n};\n\nconst generatePosition = (size) => (items) => {\n  const points = generateRandomMatrix(size);\n  return items.map((item) => ({...item, ...points.shift()}));\n};\n\nconst generateRandomMatrix = (size) => {\n  const array = Array.from(Array(size).keys());\n  const matrix = array.map((x) => {\n    return array.map((y) => {\n      return {x, y};\n    })\n  }).flat();\n  shuffleArray(matrix);\n  return matrix;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};","import {PLAYERS} from \"./stateGenerator\";\n\nexport const isPlayer = (playerId, item) => item.playerId === playerId;\nexport const matchPlayer = (playerId) => (item) => isPlayer(playerId, item);\nexport const getItemById = (id, items) => items.find((item) => item.id === id);\nexport const getItemsByPlayer = (playerId, items) => items.filter(matchPlayer(playerId));\nexport const getItemsByXY = items => ({x, y}) => items.filter((item) => item.x === x && item.y === y);\nexport const getItemByXYAndType = items => selectedItem => type => findItemByType(getItemsByXY(items)(selectedItem))(type);\nexport const findItemByType = items => type => items.find(item => item.type === type);\nexport const removeItemById = (id, items) => items.filter((item) => item.id !== id);\nexport const getEnemyItems = (state) => {\n  const otherPlayers = PLAYERS.filter((player) => state.activePlayerId !== player);\n  return otherPlayers.flatMap((otherPlayer) => getItemsByPlayer(otherPlayer, state.items));\n};\nexport const inRange = (attacker, target, range = 1) => {\n  return Math.abs(target.x - attacker.x) + Math.abs(target.y - attacker.y) <= range;\n};\n\nexport const updateItem = updatedItem => state => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const updateItemById = (updatedItem, state) => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const replaceItems = items => replacements => {\n  return items.map(obj => replacements.find(o => o.id === obj.id) || obj);\n};\n\nexport const updateItems = predicate => updatedItem => items => {\n  return items.map(updateItemFn(predicate)(updatedItem));\n};\n\nexport const updateItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? {...el, ...updatedItem} : el);\n};\n\nexport const replaceItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? updatedItem : el);\n};\n\nexport const updateItemByIdFn = (updatedItem) => {\n  return updateItemFn(el => updatedItem.id === el.id)(updatedItem);\n};\n\nexport const matchId = (id) => {\n  return (item) => item.id === id;\n};","export const toward = target => mover => {\n  const xd = target.x - mover.x;\n  const yd = target.y - mover.y;\n  return Math.abs(xd) > Math.abs(yd) ? {x: Math.sign(xd), y: 0} : {x: 0, y: Math.sign(yd)};\n};\n\nexport const move = (mover, direction) => {\n  const {x, y} = direction(mover);\n  return {...mover, x: (mover.x + x), y: (mover.y + y)}\n};\n\nexport const calculateDistance = agent => target => Math.abs(agent.x - target.x) + Math.abs(agent.y - target.y);\n\nexport const compareDistance = agent => (firstEl, secondEl) => {\n  const distance = calculateDistance(agent);\n  return distance(firstEl) - distance(secondEl);\n};","export const compose = (...fns) => (x) => fns.reduceRight((v, f) => f(v), x);\nexport const pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\n","import {generateId, generateState, PLAYERS} from \"./stateGenerator\";\nimport {\n  getItemById,\n  getItemByXYAndType,\n  getItemsByPlayer,\n  inRange,\n  isPlayer,\n  removeItemById,\n  replaceItems,\n  updateItem,\n  updateItemById,\n  updateItems\n} from \"./itemsUtil\";\nimport {calculateDistance, move, toward} from \"./movement\";\nimport {pipe} from \"./functional\";\n\nexport const ATTACK = 'brigands/reducer/ATTACK';\nexport const AUTO_ACTION = 'brigands/reducer/AUTO_ACTION';\nexport const BUILD_FARM = 'brigands/reducer/BUILD_FARM';\nexport const BUILD_WAREHOUSE = 'brigands/reducer/BUILD_WAREHOUSE';\nexport const END_TURN = 'brigands/reducer/END_TURN';\nexport const FINISH_TRAIN_EVENT = 'brigands/reducer/FINISH_TRAIN_EVENT';\nexport const HARVEST_CROP = 'brigands/reducer/HARVEST_CROP';\nexport const MOVE = 'brigands/reducer/MOVE';\nexport const PLANT_CROP = 'brigands/reducer/PLANT_CROP';\nexport const RESTART = 'brigands/reducer/RESTART';\nexport const SET_ACTIVE_EVENT = 'brigands/reducer/SET_ACTIVE_EVENT';\nexport const SET_SELECTED = 'brigands/reducer/SET_SELECTED';\nexport const SET_UNIT_BEHAVIOR = 'brigands/reducer/SET_UNIT_BEHAVIOR';\nexport const TRAIN_EVENT = 'brigands/reducer/TRAIN_EVENT';\nexport const UNLOAD_RESOURCE = 'brigands/reducer/UNLOAD_RESOURCE';\nexport const SLEEP = 'brigands/reducer/SLEEP';\n\nexport const selectItemById = id => state => getItemById(id, state.items);\n\nexport const selectSelectedItem = state => getItemById(state.selectedId, state.items);\n\nconst selectEventBehavior = behaviorName => eventType => state => {\n  const behavior = state.behaviors[behaviorName] || {};\n  const eventBehavior = behavior[eventType] || {};\n  return eventBehavior.conditionalActions || [];\n};\n\nexport const selectEvents = state => state.events;\n\nexport const selectActivePlayerId = state => state.activePlayerId;\n\nconst nextPlayer = (activePlayerId) => {\n  const index = PLAYERS.findIndex((id) => id === activePlayerId);\n  return PLAYERS[(index + 1) % PLAYERS.length];\n};\n\nconst nextTurn = (turn, activePlayerId) => PLAYERS.slice(-1)[0] === activePlayerId ? turn + 1 : turn;\n\nconst getWinner = (state) => {\n  return isLoser('ai', state.items) ? 'human' : isLoser('human', state.items) ? 'ai' : undefined;\n};\n\nconst isLoser = (playerId, items) => {\n  return getItemsByPlayer(playerId, items).every((item) => item.hp <= 0);\n};\n\nconst consumeAp = (action, state) => {\n  const {condition} = action.payload;\n  // TODO require getAgent\n  const agent = action.payload.agentId !== undefined ? selectItemById(action.payload.agentId)(state) : action.payload.getAgent(state);\n  const selectedItem = {\n    ...agent,\n    ap: 0,\n    action,\n    condition,\n  };\n  // TODO rewrite without if\n  if (!!selectedItem.training) {\n    selectedItem.behaviorTraining.conditionalActions.push(action);\n  } else if (selectedItem.conditionalActions) {\n    const index = selectedItem.conditionalActions.findIndex(conditionalAction => conditionalAction.type === action.type);\n    if (index > 0) {\n      selectedItem.conditionalActions = selectedItem.conditionalActions.slice(index);\n    }\n  }\n  return updateItem(selectedItem)(state);\n};\n\nconst postAction = action => state => consumeAp(action, state);\n\nconst createBuilding = (getAgent, type, state) => {\n  const builder = getAgent(state);\n  const target = getItemByXYAndType(state.items)(builder)('grass');\n  return createBuildingOn(getAgent)(type)(target.id)(state);\n};\n\nconst createBuildingOn = getAgent => buildingType => targetId => state => {\n  const builder = getAgent(state);\n  const clearedItems = removeItemById(targetId, state.items);\n  const building = {\n    id: generateId(),\n    builderId: builder.id,\n    x: builder.x,\n    y: builder.y,\n    type: buildingType,\n    createdTurn: state.turn,\n    resources: [],\n  };\n  return {...state, items: [...clearedItems, building]}\n};\n\nconst plantedShouldGrow = turn => item => item.type === 'planted' && item.createdTurn + 5 <= turn;\n\nconst hasBehaviorForEvent = item => event => state => {\n  const behavior = selectEventBehavior(item.behaviorName)(event.type)(state);\n  return !!behavior.length;\n};\n\nconst getNextAction = getAgent => state => conditionalActions => conditionalActions.find(conditionalAction => conditionalAction.payload.condition(getAgent)(state));\n\nexport const endTurn = () => ({type: END_TURN,});\n\n//TODO different range depending on type\nconst attackCondition = getTarget => getAgent => state => calculateDistance(getAgent(state))(getTarget(getAgent)(state)) <= 1;\n\nexport const attack = getAgent => getTarget => {\n  return {\n    type: ATTACK,\n    payload: {\n      getAgent,\n      getTarget,\n      condition: attackCondition(getTarget),\n    }\n  }\n};\n\nexport const setUnitBehaviorAction = getAgent => ({\n  type: SET_UNIT_BEHAVIOR,\n  payload: {\n    getAgent,\n  }\n});\n\nexport const autoAction = getAgent => ({\n  type: AUTO_ACTION,\n  payload: {\n    getAgent,\n  }\n});\n\nconst buildingTypeExists = type => getAgent => state => {\n  return !state.items.some((item) => item.type === type) && getItemByXYAndType(state.items)(getAgent(state))('grass');\n};\n\nexport const buildWarehouse = getAgent => {\n  return {\n    type: BUILD_WAREHOUSE,\n    payload: {\n      getAgent,\n      condition: buildingTypeExists('warehouse'),\n    }\n  }\n};\n\nconst farmerHasFarm = getAgent => state => {\n  return state.items.some((item) => item.type === 'farm' && item.builderId === getAgent(state).id);\n};\n\nconst farmCondition = getAgent => state => !farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))('grass');\n\nexport const buildFarm = getAgent => {\n  return {\n    type: BUILD_FARM,\n    payload: {\n      getAgent,\n      condition: farmCondition,\n    }\n  }\n};\n\nconst plantCropCondition = getAgent => state => farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))('grass');\n\nexport const plantCrop = getAgent => {\n  return {\n    type: PLANT_CROP,\n    payload: {\n      getAgent,\n      condition: plantCropCondition,\n    }\n  }\n};\n\nconst harvestCropCondition = getAgent => state => getItemByXYAndType(state.items)(getAgent(state))('crop');\n\nexport const harvestCrop = getAgent => {\n  return {\n    type: HARVEST_CROP,\n    payload: {\n      getAgent,\n      condition: harvestCropCondition,\n    }\n  }\n};\n\nconst moveCondition = getTarget => getAgent => state => {\n  const agent = getAgent(state);\n  const target = getTarget(getAgent)(state);\n  return agent && target && !(agent.x === target.x && agent.y === target.y);\n};\n\nexport const moveTowardTarget = getAgent => getTarget => {\n  const condition = moveCondition(getTarget);\n  return {\n    type: MOVE,\n    payload: {\n      getAgent,\n      getTarget,\n      condition,\n    }\n  }\n};\n\nconst unloadResourceCondition = getAgent => state => {\n  const agent = getAgent(state);\n  return agent.resources.length > 0 && getItemByXYAndType(state.items)(agent)('farm');\n};\n\nexport const unloadResource = getAgent => {\n  return {\n    type: UNLOAD_RESOURCE,\n    payload: {\n      getAgent,\n      condition: unloadResourceCondition,\n    }\n  }\n};\n\nexport const setActiveEvent = getAgent => event => ({\n  type: SET_ACTIVE_EVENT,\n  payload: {\n    getAgent,\n    event,\n  }\n});\n\nexport const trainEventBehavior = getAgent => event => ({\n  type: TRAIN_EVENT,\n  payload: {\n    getAgent,\n    event,\n  }\n});\n\nexport const finishTrainEventBehavior = getAgent => ({\n  type: FINISH_TRAIN_EVENT,\n  payload: {\n    getAgent,\n  }\n});\n\nexport const restart = () => ({type: RESTART, payload: undefined});\n\nexport const setSelectedItem = id => ({type: SET_SELECTED, payload: id});\n\nexport const sleepOneTurn = getAgent => turn => {\n  //TODO refactor all conditions to accept getAgent\n  //TODO refactor conditionalAction to just be actions\n  const condition = getAgent => state => state.turn <= turn;\n  return {\n    type: SLEEP,\n    payload: {\n      getAgent,\n      condition\n    }\n  };\n};\n\nexport default function reducer(state, action) {\n  console.log('Action');\n  console.log(action);\n  const {payload} = action;\n  switch (action.type) {\n    case END_TURN: {\n      const apItems = updateItems((item) => isPlayer(selectActivePlayerId(state), item))({ap: 1})(state.items);\n      const grownCrops = apItems.filter(plantedShouldGrow(state.turn));\n      const newCrops = updateItems(plantedShouldGrow(state.turn))({type: 'crop',})(grownCrops);\n      let items = replaceItems(apItems)(newCrops);\n      const cropEvents = newCrops.map((item) => ({\n        id: generateId(),\n        type: 'CROP_GROWN',\n        itemId: item.id,\n        turn: state.turn\n      }));\n      const events = [...state.events, ...cropEvents].filter(e => e.turn === state.turn);\n\n      const updatedEventItems = getItemsByPlayer(selectActivePlayerId(state), items).map(item => (\n        {\n          ...item,\n          events: [...item.events, ...events.filter(event => hasBehaviorForEvent(item)(event)(state) || item.training)]\n        }));\n      items = replaceItems(items)(updatedEventItems);\n\n      return {\n        ...state,\n        items,\n        turn: nextTurn(state.turn, selectActivePlayerId(state)),\n        activePlayerId: nextPlayer(selectActivePlayerId(state)),\n        winner: getWinner(state),\n        events,\n      };\n    }\n    case AUTO_ACTION: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      console.log(agent);\n      const nextAction = getNextAction(getAgent)(state)(agent.conditionalActions);\n      //TODO unclear order of execution. use pipe\n      return nextAction ? reducer(state, nextAction) : reducer(reducer(state, setUnitBehaviorAction(getAgent)), action);\n    }\n    case RESTART: {\n      const behaviors = state.behaviors;\n      return {...generateState(), behaviors};\n    }\n    case SET_SELECTED: {\n      return {...state, selectedId: payload};\n    }\n    case ATTACK: {\n      const {getAgent, getTarget} = payload;\n      const attacker = getAgent(state);\n      const target = getTarget(getAgent)(state);\n\n      if (!inRange(attacker, target)) {\n        console.log('target not in range!');\n        return state;\n      }\n      const updatedTarget = {...target, hp: target.hp - 1};\n      return pipe(updateItem(updatedTarget), postAction(action))(state)\n    }\n    case MOVE: {\n      const {getAgent, getTarget} = payload;\n      const moveAgent = (s) => updateItem(move(getAgent(s), toward(getTarget(getAgent)(s))))(s);\n      return pipe(moveAgent, postAction(action))(state);\n    }\n    case BUILD_FARM: {\n      return createBuilding(payload.getAgent, 'farm', consumeAp(action, state));\n    }\n    case BUILD_WAREHOUSE: {\n      return createBuilding(payload.getAgent, 'warehouse', consumeAp(action, state));\n    }\n    case PLANT_CROP: {\n      return createBuilding(payload.getAgent, 'planted', consumeAp(action, state));\n    }\n    case HARVEST_CROP: {\n      const agent = payload.getAgent(state);\n      const target = getItemByXYAndType(state.items)(agent)('crop');\n      const addedResourceState = updateItemById({\n        ...agent,\n        resources: [...agent.resources, 'crop']\n      }, state);\n      return createBuildingOn(payload.getAgent)('grass')(target.id)(consumeAp(action, addedResourceState));\n    }\n    case UNLOAD_RESOURCE: {\n      const agent = payload.getAgent(state);\n      //TODO hardcoded farm as that is the only home type\n      const target = getItemByXYAndType(state.items)(agent)('farm');\n      const updatedTarget = {...target, resources: [...target.resources, agent.resources[0]]};\n      const updatedAgent = {...agent, resources: agent.resources.slice(1)};\n      return pipe(updateItem(updatedAgent), updateItem(updatedTarget), postAction(action))(state);\n    }\n    case TRAIN_EVENT: {\n      const {getAgent, event} = payload;\n      return updateItemById({\n        id: getAgent(state).id,\n        behaviorTraining: {name: 'farmer', eventType: event.type, event, conditionalActions: []},\n        training: true,\n      }, state);\n    }\n    case FINISH_TRAIN_EVENT: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const {name, eventType, conditionalActions} = agent.behaviorTraining;\n      const behavior = state.behaviors[name] || {};\n      const updatedBehavior = {\n        ...behavior,\n        name,\n        [eventType]: {\n          eventType,\n          conditionalActions,\n        },\n      };\n      const updatedBehaviorState = {\n        ...state,\n        behaviors: {...state.behaviors, [name]: updatedBehavior}\n      };\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {},\n        conditionalActions,\n        training: false,\n      }, updatedBehaviorState);\n\n    }\n    case SET_ACTIVE_EVENT : {\n      const {event, getAgent} = payload;\n      const agent = getAgent(state);\n      return updateItemById({...agent, activeEvent: event}, state);\n    }\n    case SET_UNIT_BEHAVIOR: {\n      //TODO call SET_ACTIVE_EVENT or refactor\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const activeEvent = agent.events.length > 0 ? agent.events[0] : {type: 'DEFAULT_EVENT'};\n      const conditionalActions = selectEventBehavior(agent.behaviorName)(activeEvent.type)(state);\n      const unitActions = conditionalActions.map(conditionalAction => {\n          return {\n            ...conditionalAction,\n            payload: {...conditionalAction.payload, getAgent}\n          }\n        }\n      );\n\n      //TODO quickfix to stop endless recursion if there is no valid action for DEFAULT_EVENT\n      console.log(unitActions);\n      if (activeEvent.type === 'DEFAULT_EVENT' && !getNextAction(getAgent)(state)(unitActions)) {\n        return reducer(state, sleepOneTurn(getAgent)(state.turn));\n      }\n      console.log('Updated actions for event: ' + activeEvent.type);\n      return updateItemById({\n        ...agent,\n        activeEvent,\n        events: agent.events.slice(1),\n        conditionalActions: [...unitActions]\n      }, state);\n    }\n    case SLEEP: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      return updateItem({\n        ...agent,\n        activeEvent: {type: 'SLEEPING'},\n        conditionalActions: [action]\n      })(state)\n    }\n    default:\n      return state;\n  }\n};\n","import React, {useContext} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport {ReducerDispatch} from \"./App\";\nimport {setSelectedItem} from \"./reducer\";\n\nconst typeIcons = {\n  o: 'android',\n  x: 'directions_walk',\n  mounted: 'direction_bike',\n  grass: 'crop_free',\n  tree: 'nature',\n  water: 'waves',\n  rock: 'landscape',\n  dead: 'airline_seat_flat',\n  farm: 'home',\n  crop: 'local_florist',\n  planted: 'minimize',\n  warehouse: 'layers',\n\n};\n\nconst getIcon = (elem) => elem.hp < 1 ? typeIcons['dead'] : typeIcons[elem.type] || 'crop_free';\n\nconst createMatrix = (n = 10, items) => {\n  let matrix = [];\n  for (let y = 0; y < n; y++) {\n    matrix[y] = [];\n    for (let x = 0; x < n; x++) {\n      matrix[y][x] = createAtPosition(items, x, y);\n    }\n  }\n  return matrix;\n};\n\nconst createAtPosition = (items = [], x, y) => {\n  return items.find((item) => item.x === x && item.y === y) || {x: x, y: y, type: '.'}\n};\n\nfunction PlayingFieldCell({elem}) {\n  const {dispatch} = useContext(ReducerDispatch);\n  const handleSetSelected = (id) => () => {\n    dispatch(setSelectedItem(id));\n  };\n  return (\n    <TableCell>\n      <IconButton\n        onClick={handleSetSelected(elem.id)}><Icon>{getIcon(elem)}</Icon></IconButton>\n    </TableCell>);\n}\n\nexport default function PlayingField() {\n  const {items} = useContext(ReducerDispatch).state;\n  const matrix = createMatrix(10, items);\n  return <div className=\"PlayingField\">\n    <Table padding=\"none\">\n      <TableBody>\n        {\n          (matrix.map(row =>\n            <TableRow key={row[0].y}>{\n              row.map(elem => <PlayingFieldCell key={'x' + elem.x + 'y' + elem.y} elem={elem}/>)}\n            </TableRow>))\n        }\n      </TableBody>\n    </Table>\n  </div>;\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport {getEnemyItems, getItemsByPlayer} from \"./itemsUtil\";\nimport {ReducerDispatch} from \"./App\";\nimport {\n  attack,\n  autoAction,\n  buildFarm,\n  buildWarehouse,\n  endTurn,\n  harvestCrop,\n  moveTowardTarget,\n  plantCrop,\n  selectItemById,\n  selectSelectedItem,\n  unloadResource\n} from \"./reducer\";\nimport {compareDistance} from \"./movement\";\n\nconst unitHasAp = getAgent => state => {\n  const item = getAgent(state);\n  return item.ap > 0 && item.playerId === state.activePlayerId;\n};\n\nconst playerItemsWithAp = (playerId) => (items) => {\n  return getItemsByPlayer(playerId, items)\n    .filter(item => item.ap > 0);\n};\n\nfunction OrderButton({action, children}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  if (!shouldDisplayOrder(action)(state)) {\n    return null;\n  }\n  const handleAction = () => dispatch(action);\n  return (<Button onClick={handleAction}>{children}</Button>);\n}\n\nfunction TurnButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const {items, activePlayerId} = state;\n  const handleEndTurn = (playerId) => () => {\n    const playerItems = playerItemsWithAp(playerId)(items);\n    playerItems.forEach(playerItem => {\n      dispatch(autoAction(selectItemById(playerItem.id)));\n    });\n    dispatch(endTurn());\n  };\n  return (\n    <Button onClick={handleEndTurn(activePlayerId)}>Turn({activePlayerId}): {state.turn}</Button>\n  );\n}\n\nconst shouldDisplayOrder = action => state => {\n  const {getAgent, condition} = action.payload;\n  return !!getAgent && unitHasAp(getAgent)(state) && condition(getAgent)(state);\n};\n\nfunction AttackButton({targetId}) {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = () => selectItemById(targetId);\n  const action = attack(getAgent)(getTarget);\n  return (<OrderButton action={action}>Attack Enemy</OrderButton>);\n}\n\nconst targetClosestType = type => getAgent => state => state.items.filter(item => item.type === type).sort(compareDistance(getAgent(state)))[0];\n\n//TODO separate item type and if it is a home. hardcoding 'farm' as that is the only home type\nconst targetHome = getAgent => state => state.items.filter(item => item.type === 'farm' && item.builderId === getAgent(state).id)[0];\n\nfunction MoveToGrassButton() {\n  const getTarget = targetClosestType('grass');\n  return (<MoveButton getTarget={getTarget} targetName={'Grass'}/>);\n}\n\nconst getActiveEventTarget = getAgent => state => {\n  const {activeEvent} = getAgent(state);\n  return selectItemById(activeEvent.itemId)(state);\n};\n\nfunction MoveToEventButton() {\n  return (<MoveButton getTarget={getActiveEventTarget} targetName={'Event'}/>);\n}\n\nfunction MoveToHomeButton() {\n  return (<MoveButton getTarget={targetHome} targetName={'Home'}/>);\n}\n\nfunction MoveButton({getTarget, targetName,}) {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = moveTowardTarget(getAgent)(getTarget);\n  return (<OrderButton action={action}>Move To {targetName}</OrderButton>);\n}\n\nfunction BuildWarehouseButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = buildWarehouse(getAgent);\n  return (<OrderButton action={action}>Build warehouse</OrderButton>);\n}\n\nfunction BuildFarmButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = buildFarm(getAgent);\n  return (<OrderButton action={action}>Build farm</OrderButton>);\n}\n\nfunction PlantCropButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = plantCrop(getAgent);\n  return (<OrderButton action={action}>PlantCrop</OrderButton>);\n}\n\nfunction HarvestCropButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = harvestCrop(getAgent);\n  return (<OrderButton action={action}>HarvestCrop</OrderButton>);\n}\n\nfunction UnloadResourceButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = unloadResource(getAgent);\n  return (<OrderButton action={action}>Unload Resource</OrderButton>);\n}\n\nexport default function Orders() {\n  const {state} = useContext(ReducerDispatch);\n  return <div>\n    <Card>\n      <CardContent>\n        <TurnButton/>\n        {\n          getEnemyItems(state).map((enemy) => <AttackButton key={enemy.id} targetId={enemy.id}/>)\n        }\n        <MoveToGrassButton/>\n        <MoveToEventButton/>\n        <MoveToHomeButton/>\n        <BuildWarehouseButton/>\n        <BuildFarmButton/>\n        <PlantCropButton/>\n        <HarvestCropButton/>\n        <UnloadResourceButton/>\n      </CardContent>\n    </Card>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {ReducerDispatch} from \"./App\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  finishTrainEventBehavior,\n  selectItemById,\n  selectSelectedItem,\n  setActiveEvent,\n  trainEventBehavior\n} from \"./reducer\";\n\nfunction UnitCard() {\n  const {state} = useContext(ReducerDispatch);\n  const selected = selectSelectedItem(state);\n  if (selected === undefined) {\n    return null;\n  }\n  const {id, playerId, x, y, hp, ap, type, resources} = selected;\n  const maxHp = 5;\n  const relativeHp = hp / maxHp * 100;\n  const defaultEvent = {type: 'DEFAULT_EVENT', itemId: selected.id};\n  return (\n    <Card>\n      <CardContent>\n        <Typography>id:{id}</Typography>\n        <Typography>player:{playerId}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>hp:{hp}</Typography>\n        <Typography>ap:{ap}</Typography>\n        <Typography>type:{type}</Typography>\n        <Typography>resource: {resources} </Typography>\n        <LinearProgress variant=\"determinate\" value={relativeHp}/>\n        <TrainEventButton event={defaultEvent}/>\n        <FinishTrainEventButton/>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction SelectEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectSelectedItem;\n  const agent = getAgent(state);\n  if (agent === undefined || agent.activeEvent === event) {\n    return null;\n  }\n  const handleSelectEvent = () => dispatch(setActiveEvent(getAgent)(event));\n  return (<Button color='default' onClick={handleSelectEvent}>Select event {event.type}</Button>);\n}\n\nfunction TrainEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const agent = getAgent(state);\n  if (!agent || agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch(setActiveEvent(getAgent)(event));\n    dispatch(trainEventBehavior(getAgent)(event));\n  };\n  return (<Button color='default' onClick={handleTrainEvent}>Train {event.type} Behavior</Button>);\n}\n\nfunction FinishTrainEventButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const agent = getAgent(state);\n  if (!agent || !agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => dispatch(finishTrainEventBehavior(getAgent));\n  return (\n    <Button color='default' onClick={handleTrainEvent}>Finish train event Behavior</Button>);\n}\n\nfunction EventCard({event}) {\n  const {state} = useContext(ReducerDispatch);\n  // TODO check item connected to event  still exists\n  const {x, y, type} = (event.itemId ? selectItemById(event.itemId)(state) || {} : {});\n  return (\n    <Card>\n      <CardContent>\n        <Typography>type:{event.type}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>itemType:{type}</Typography>\n        <SelectEventButton event={event}/>\n        <TrainEventButton event={event}/>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction EventsInfo() {\n  const {state} = useContext(ReducerDispatch);\n  const {events} = state;\n  const selectedUnit = selectSelectedItem(state);\n  const newEvents = selectedUnit.activeEvent ? [selectedUnit.activeEvent, ...events] : events;\n  return newEvents.map((event, index) => <EventCard key={\"event\" + index} event={event}/>);\n}\n\nexport default function InfoPane() {\n  return <div>\n    <UnitCard/>\n    <EventsInfo/>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ReducerDispatch} from \"./App\";\nimport {restart} from \"./reducer\";\n\nexport default function WinDialog() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n\n\n  const handleRestart = () => dispatch(restart());\n  return (\n    <div>\n      <Dialog open={!!state.winner} aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{`The winner is ${state.winner}!`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">Play another round?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Yes</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport PlayingField from './PlayingField';\nimport Orders from './Orders';\nimport InfoPane from './InfoPane';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport WinDialog from \"./WinDialog\";\nimport reducer from \"./reducer\";\nimport {generateState} from \"./stateGenerator\";\n\nexport const ReducerDispatch = React.createContext(null);\n\nconst initialState = generateState();\n\nexport default function App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Grid container justify=\"center\" direction=\"row\" spacing={24}>\n        <ReducerDispatch.Provider value={{state, dispatch}}>\n          <WinDialog/>\n          <Grid item xs>\n            <InfoPane/>\n          </Grid>\n          <Grid item xs>\n            <PlayingField size=\"10\"/>\n          </Grid>\n          <Grid item xs={4}>\n            <Orders/>\n          </Grid>\n        </ReducerDispatch.Provider>\n      </Grid>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}