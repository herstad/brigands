{"version":3,"sources":["itemTypes.js","events/eventTypes.js","stateGenerator.js","itemsUtil.js","movement.js","functional.js","events/eventUtils.js","movement/findPath.js","reducer.js","PlayingField.js","Orders.js","InfoPane.js","WinDialog.js","App.js","serviceWorker.js","index.js"],"names":["GRASS","TREE","FARM","CROP","PLANTED","WAREHOUSE","PATH","DEFAULT_EVENT","RESOURCE_PICKUP","SLEEPING","PLAYERS","generateState","console","log","items","generateItems","behaviors2","JSON","parse","window","localStorage","getItem","creator","farmer","conditionalActions","payload","creators","behaviors","turn","activePlayerId","selectedId","id","winner","undefined","events","type","itemId","training","generateId","size","arguments","length","units","hp","playerId","ap","behaviorName","activeEvent","resources","genPos","generatePosition","concat","defaultValues","i","push","generateDefaultItems","points","generateRandomMatrix","map","item","Object","objectSpread","shift","array","Array","from","keys","matrix","x","y","flat","shuffleArray","j","Math","floor","random","_ref","getItemById","find","getItemsByPlayer","filter","isPlayer","matchPlayer","getItemByXYAndType","selectedItem","findItemByType","getItemsByXY","getEnemyItems","state","player","flatMap","otherPlayer","inRange","attacker","target","range","abs","updateItem","updatedItem","updateItemByIdFn","updateItemById","updateItemFn","predicate","el","move","mover","nextNode","gCost","calculateDistance","agent","targetClosestType","getAgent","sort","firstEl","secondEl","distance","pipe","_len2","fns","_key2","reduce","v","f","isEventVisible","agentId","event","local","getSuccessorsFromNodes","nodes","_ref2","get","Boolean","nodeA","nodeB","estimate","goal","unknownSteps","nodeMap","filtered","Map","forEach","node","currentNode","_mapEntry","mapEntry","_mapEntry2","slicedToArray","key","value","set","terrainCosts","_terrainCosts","defineProperty","terrainCost","itemToNode","_ref3","itemsToNodes","getCallbacks","isGoal","node1","node2","getSuccessors","ATTACK","AUTO_ACTION","BUILD_FARM","BUILD_WAREHOUSE","END_TURN","FINISH_TRAIN_EVENT","HARVEST_CROP","MOVE","MAKE_PATH","PLANT_CROP","RESTART","SET_ACTIVE_EVENT","SET_SELECTED","SET_UNIT_BEHAVIOR","TRAIN_EVENT","UNLOAD_RESOURCE","LOAD_RESOURCE","SLEEP","selectItemById","selectSelectedItem","selectEventBehavior","eventType","selectActivePlayerId","nextPlayer","index","findIndex","delegateToReducer","action","reducer","consumeAp","_action$payload","_action$payload$apCos","apCost","postAction","behaviorTraining","toConsumableArray","recordAction","createBuilding","builder","createBuildingOn","buildingType","targetId","clearedItems","building","builderId","createdTurn","plantedShouldGrow","getNextActions","conditionalAction","condition","slice","getNextAction","endTurn","attackCondition","getTarget","attack","creatorArguments","setUnitBehaviorAction","autoAction","buildWarehouse","some","farmerHasFarm","buildFarmCondition","buildFarm","plantCropCondition","plantCrop","harvestCropCondition","harvestCrop","moveTowardType","moveTowardTarget","getActiveEventTarget","moveTowardEvent","targetHome","moveTowardHome","moveCondition","makePathTarget","makePath","unloadResourceCondition","getByType","unloadResource","loadResourceCondition","loadResource","setActiveEvent","trainEventBehavior","finishTrainEventBehavior","restart","setSelectedItem","sleepOneTurn","createEvent","publishEvents","isHome","updateItemsByActivePlayer","fn","updates","apply","replenishAp","cropsGrownEvents","cropEvents","createLocalEvent","growCrops","updateItems","filterOldEvents","e","addEventsToUnits","hasBehaviorForEvent","setNextTurn","setNextPlayer","updateConditionalActions","nextActions","performCurrentAction","actions","updatedTarget","path","start","filteredNodes","source","astar","findPath","s","visited","addedResourceState","resource","updatedAgent","name","_agent5$behaviorTrain","behavior","updatedBehavior","updatedBehaviorState","setItem","stringify","unitActions","typeIcons","_typeIcons","getIcon","elem","createMatrix","n","createAtPosition","PlayingFieldCell","dispatch","useContext","ReducerDispatch","react_default","a","createElement","TableCell_default","IconButton_default","onClick","Icon_default","PlayingField","className","Table_default","padding","TableBody_default","row","TableRow_default","playerItemsWithAp","OrderButton","children","_useContext","shouldDisplayOrder","Button_default","TurnButton","_useContext2","playerItem","unitHasAp","AttackButton","MoveToGrassButton","MoveToWarehouseButton","MoveToEventButton","MoveToHomeButton","BuildWarehouseButton","BuildFarmButton","PlantCropButton","HarvestCropButton","UnloadResourceButton","LoadResourceButton","Orders","Card_default","CardContent_default","enemy","UnitCard","selected","relativeHp","defaultEvent","Typography_default","LinearProgress_default","variant","TrainEventButton","FinishTrainEventButton","SelectEventButton","color","_useContext3","_useContext4","EventCard","_ref4","EventsInfo","selectedUnit","visibleEvents","InfoPane","WinDialog","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","React","createContext","initialState","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","CssBaseline_default","Grid_default","container","justify","direction","spacing","Provider","xs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67ace594.chunk.js","sourcesContent":["export const PLAYER2 = 'o';\nexport const HUMAN = 'x';\nexport const MOUNTED = 'mounted';\nexport const GRASS = 'grass';\nexport const TREE = 'tree';\nexport const WATER = 'water';\nexport const ROCK = 'rock';\nexport const DEAD = 'dead';\nexport const FARM = 'farm';\nexport const CROP = 'crop';\nexport const PLANTED = 'planted';\nexport const WAREHOUSE = 'warehouse';\nexport const PATH = 'path';","export const DEFAULT_EVENT = 'DEFAULT_EVENT';\nexport const RESOURCE_PICKUP = 'RESOURCE_PICKUP';\nexport const CROP_GROWN = 'CROP_GROWN';\nexport const SLEEPING = 'SLEEPING';","import {GRASS, HUMAN, PLAYER2, ROCK, TREE, WATER} from \"./itemTypes\";\nimport {DEFAULT_EVENT} from \"./events/eventTypes\";\nimport {creators, plantCrop} from \"./reducer\"\n\nexport const PLAYERS = ['human', 'ai'];\n\nexport const generateState = () => {\n  console.log(\"generate state\");\n\n  const items = generateItems();\n  //TODO behaviors MUST be serializable to JSON\n  const behaviors2 = JSON.parse(window.localStorage.getItem('behaviors') || '{}');\n  console.log(JSON.parse(window.localStorage.getItem('behaviors') || '{}'));\n  const creator = behaviors2.farmer.DEFAULT_EVENT.conditionalActions[0].payload.creator;\n  console.log(creator);\n  //const creators ={plantCrop: ()=>\"dafdgjkjkd\"};\n  console.log(creators[creator](()=>\"asd\"));\n  const behaviors = {};\n  console.log(behaviors);\n  return {\n    turn: 0,\n    activePlayerId: PLAYERS[0],\n    items,\n    selectedId: items[0].id,\n    winner: undefined,\n    events: [{type: 'ENEMY_SPOTTED', itemId: items[1].id}, {type: 'GAME_STARTED'}],\n    behaviors,\n    training: false,\n  };\n};\n\nlet itemId = 0;\n\nexport const generateId = () => {\n  itemId++;\n  return itemId;\n};\n\nconst generateDefaultItems = (size) => {\n  const defaultValues = [];\n  for (let i = 0; i < size; i++) {\n    defaultValues.push({id: generateId(), type: GRASS});\n  }\n  return defaultValues;\n};\n\nconst generateItems = (size = 10) => {\n  const units = [\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 10,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: PLAYER2,\n      playerId: 'ai',\n      ap: 10,\n      behaviorName: 'brigand',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 10,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 10,\n      behaviorName: 'hauler',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n  ];\n\n  const items = [\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: WATER},\n    {id: generateId(), type: WATER},\n    {id: generateId(), type: WATER},\n  ];\n\n  const genPos = generatePosition(size);\n  return genPos(units).concat(genPos(items.concat(generateDefaultItems(size * size - items.length))));\n};\n\nconst generatePosition = (size) => (items) => {\n  const points = generateRandomMatrix(size);\n  return items.map((item) => ({...item, ...points.shift()}));\n};\n\nconst generateRandomMatrix = (size) => {\n  const array = Array.from(Array(size).keys());\n  const matrix = array.map((x) => {\n    return array.map((y) => {\n      return {x, y};\n    })\n  }).flat();\n  shuffleArray(matrix);\n  return matrix;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};","import {PLAYERS} from \"./stateGenerator\";\n\nexport const isPlayer = (playerId, item) => item.playerId === playerId;\nexport const matchPlayer = (playerId) => (item) => isPlayer(playerId, item);\nexport const getItemById = (id, items) => items.find((item) => item.id === id);\nexport const getItemsByPlayer = (playerId, items) => items.filter(matchPlayer(playerId));\nexport const getItemsByXY = items => ({x, y}) => items.filter((item) => item.x === x && item.y === y);\nexport const getItemByXYAndType = items => selectedItem => type => findItemByType(getItemsByXY(items)(selectedItem))(type);\nexport const findItemByType = items => type => items.find(item => item.type === type);\nexport const removeItemById = (id, items) => items.filter((item) => item.id !== id);\nexport const getEnemyItems = (state) => {\n  const otherPlayers = PLAYERS.filter((player) => state.activePlayerId !== player);\n  return otherPlayers.flatMap((otherPlayer) => getItemsByPlayer(otherPlayer, state.items));\n};\nexport const inRange = (attacker, target, range = 1) => {\n  return Math.abs(target.x - attacker.x) + Math.abs(target.y - attacker.y) <= range;\n};\n\nexport const updateItem = updatedItem => state => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const updateItemById = (updatedItem, state) => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const replaceItems = items => replacements => {\n  return items.map(obj => replacements.find(o => o.id === obj.id) || obj);\n};\n\nexport const updateItems = predicate => updatedItem => state => {\n  const items = state.items.map(updateItemFn(predicate)(updatedItem));\n  return {...state, items};\n};\n\nexport const updateItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? {...el, ...updatedItem} : el);\n};\n\nexport const replaceItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? updatedItem : el);\n};\n\nexport const updateItemByIdFn = (updatedItem) => {\n  return updateItemFn(el => updatedItem.id === el.id)(updatedItem);\n};\n\nexport const matchId = (id) => {\n  return (item) => item.id === id;\n};","export const toward = target => mover => {\n  const xd = target.x - mover.x;\n  const yd = target.y - mover.y;\n  return Math.abs(xd) > Math.abs(yd) ? {x: Math.sign(xd), y: 0} : {x: 0, y: Math.sign(yd)};\n};\n\nexport const move = (mover, nextNode) => {\n  const {x, y, gCost} = nextNode;\n  return {...mover, ap: (mover.ap - gCost), x, y}\n};\n\nexport const calculateDistance = agent => target => Math.abs(agent.x - target.x) + Math.abs(agent.y - target.y);\n\nexport const compareDistance = agent => (firstEl, secondEl) => {\n  const distance = calculateDistance(agent);\n  return distance(firstEl) - distance(secondEl);\n};\n\nexport const targetClosestType = type => getAgent => state => state.items.filter(item => item.type === type).sort(compareDistance(getAgent(state)))[0];","export const compose = (...fns) => (x) => fns.reduceRight((v, f) => f(v), x);\nexport const pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\n","import {selectEventBehavior} from \"../reducer\";\n\nexport const hasBehaviorForEvent = item => event => state => {\n  const behavior = selectEventBehavior(item.behaviorName)(event.type)(state);\n  return !!behavior.length;\n};\n\nexport const isEventVisible = agentId => event => !event.local || agentId === event.agentId;\n","import astar from \"astar-algorithm\"\nimport {calculateDistance} from \"../movement\";\nimport {CROP, FARM, GRASS, PATH, PLANTED, ROCK, TREE, WAREHOUSE, WATER} from \"../itemTypes\";\n\nconst MINIMUM_GCOST = 5;\n\nconst id = ({x, y}) => `x${x}y${y}`;\nconst equalsNode = node1 => node2 => id(node1) === id(node2);\nconst getSuccessorsFromNodes = nodes => ({x, y}) => {\n  return [\n    nodes.get(id({x: x - 1, y: y})),\n    nodes.get(id({x: x + 1, y: y})),\n    nodes.get(id({x: x, y: y - 1})),\n    nodes.get(id({x: x, y: y + 1}))].filter(Boolean);\n};\nconst distance = (nodeA, nodeB) => nodeB.gCost;\nconst estimate = (nodeA, goal) => {\n  const unknownSteps = calculateDistance(nodeA)(goal) - 1;\n  return nodeA.gCost + (unknownSteps * MINIMUM_GCOST)\n};\nconst mapEntry = node => [id(node), node];\n\nconst nodeMap = nodes => {\n  const filtered = new Map();\n  nodes.forEach(node => {\n    const currentNode = filtered.get(id(node));\n    if (!currentNode || node.gCost < currentNode.gCost) {\n      const [key, value] = mapEntry(node);\n      filtered.set(key, value);\n    }\n  });\n  return filtered;\n};\n\nconst terrainCosts = {\n  [GRASS]: 10,\n  [TREE]: 20,\n  [PATH]: 5,\n  [ROCK]: 50,\n  [WATER]: 100,\n  [PLANTED]: 10,\n  [CROP]: 10,\n  [FARM]: 10,\n  [WAREHOUSE]: 10,\n  'default': 500,\n};\n\nexport const terrainCost = type => terrainCosts[type] || terrainCosts['default'];\n\nexport const itemToNode = ({x, y, type}) => ({x, y, gCost: terrainCost(type)});\n\nexport const itemsToNodes = items => items.map(itemToNode);\n\nexport const getCallbacks = nodes => goal => ({\n  // It should return id / key / hash for a node\n  id,\n  // It should check: is a node is the goal?\n  isGoal: equalsNode(goal),\n  // It should return an array of successors / neighbors / children\n  getSuccessors: getSuccessorsFromNodes(nodes),\n  // g(x). It should return the cost of path between two nodes\n  distance,\n  // h(x). It should return the cost of path from a node to the goal\n  estimate,\n});\n\nexport default function findPath(start, goal, nodes) {\n  const filteredNodes = nodeMap(nodes);\n  const source = filteredNodes.get(id(start));\n  const target = filteredNodes.get(id(goal));\n  return astar(source, target, getCallbacks(filteredNodes)(target))\n}","import {generateId, generateState, PLAYERS} from \"./stateGenerator\";\nimport {\n  getItemById,\n  getItemByXYAndType,\n  getItemsByPlayer,\n  inRange,\n  removeItemById,\n  updateItem,\n  updateItemById,\n  updateItems\n} from \"./itemsUtil\";\nimport {calculateDistance, move, targetClosestType} from \"./movement\";\nimport {pipe} from \"./functional\";\nimport {CROP, FARM, GRASS, PATH, PLANTED, WAREHOUSE} from \"./itemTypes\";\nimport {CROP_GROWN, DEFAULT_EVENT, RESOURCE_PICKUP, SLEEPING} from \"./events/eventTypes\";\nimport {hasBehaviorForEvent, isEventVisible} from \"./events/eventUtils\";\nimport findPath, {itemsToNodes, itemToNode} from \"./movement/findPath\";\n\nexport const ATTACK = 'brigands/reducer/ATTACK';\nexport const AUTO_ACTION = 'brigands/reducer/AUTO_ACTION';\nexport const BUILD_FARM = 'brigands/reducer/BUILD_FARM';\nexport const BUILD_WAREHOUSE = 'brigands/reducer/BUILD_WAREHOUSE';\nexport const END_TURN = 'brigands/reducer/END_TURN';\nexport const FINISH_TRAIN_EVENT = 'brigands/reducer/FINISH_TRAIN_EVENT';\nexport const HARVEST_CROP = 'brigands/reducer/HARVEST_CROP';\nexport const MOVE = 'brigands/reducer/MOVE';\nexport const MAKE_PATH = 'brigands/reducer/MAKE_PATH';\nexport const PLANT_CROP = 'brigands/reducer/PLANT_CROP';\nexport const RESTART = 'brigands/reducer/RESTART';\nexport const SET_ACTIVE_EVENT = 'brigands/reducer/SET_ACTIVE_EVENT';\nexport const SET_SELECTED = 'brigands/reducer/SET_SELECTED';\nexport const SET_UNIT_BEHAVIOR = 'brigands/reducer/SET_UNIT_BEHAVIOR';\nexport const TRAIN_EVENT = 'brigands/reducer/TRAIN_EVENT';\nexport const UNLOAD_RESOURCE = 'brigands/reducer/UNLOAD_RESOURCE';\nexport const LOAD_RESOURCE = 'brigands/reducer/LOAD_RESOURCE';\nexport const SLEEP = 'brigands/reducer/SLEEP';\n\nexport const selectItemById = id => state => getItemById(id, state.items);\n\nexport const selectSelectedItem = state => getItemById(state.selectedId, state.items);\n\nexport const selectEventBehavior = behaviorName => eventType => state => {\n  const behavior = state.behaviors[behaviorName] || {};\n  const eventBehavior = behavior[eventType] || {};\n  return eventBehavior.conditionalActions || [];\n};\n\nexport const selectEvents = state => state.events;\n\nexport const selectActivePlayerId = state => state.activePlayerId;\n\nconst nextPlayer = (activePlayerId) => {\n  const index = PLAYERS.findIndex((id) => id === activePlayerId);\n  return PLAYERS[(index + 1) % PLAYERS.length];\n};\n\nconst nextTurn = (turn, activePlayerId) => PLAYERS.slice(-1)[0] === activePlayerId ? turn + 1 : turn;\n\nconst delegateToReducer = action => state => reducer(state, action);\n\nconst consumeAp = action => state => {\n  const {getAgent, apCost = () => () => 10} = action.payload;\n  const agent = getAgent(state);\n  return updateItem({...agent, ap: agent.ap - apCost(action)(state)})(state)\n};\n\nconst recordAction = action => state => {\n  const {getAgent} = action.payload;\n  const agent = getAgent(state);\n  return !agent.training ? state : updateItem(\n    {\n      ...agent,\n      behaviorTraining: {\n        ...agent.behaviorTraining,\n        conditionalActions: [...agent.behaviorTraining.conditionalActions, action]\n      }\n    })(state);\n};\n\nconst postAction = action => state => {\n  return pipe(consumeAp(action), recordAction(action))(state);\n};\n\nconst createBuilding = (getAgent, type, state) => {\n  const builder = getAgent(state);\n  const target = getItemByXYAndType(state.items)(builder)(GRASS);\n  return createBuildingOn(getAgent)(type)(target.id)(state);\n};\n\nconst createBuildingOn = getAgent => buildingType => targetId => state => {\n  const builder = getAgent(state);\n  const clearedItems = removeItemById(targetId, state.items);\n  const building = {\n    id: generateId(),\n    builderId: builder.id,\n    x: builder.x,\n    y: builder.y,\n    type: buildingType,\n    createdTurn: state.turn,\n    resources: [],\n  };\n  return {...state, items: [...clearedItems, building]}\n};\n\nconst plantedShouldGrow = turn => item => item.type === PLANTED && item.createdTurn + 5 <= turn;\n\nconst getNextActions = getAgent => state => {\n  const {conditionalActions} = getAgent(state);\n  const index = conditionalActions.findIndex(conditionalAction => conditionalAction.payload.condition(getAgent)(state));\n  return index >= 0 ? conditionalActions.slice(index) : [];\n};\n\nconst getNextAction = getAgent => state => conditionalActions => conditionalActions.find(conditionalAction => conditionalAction.payload.condition(getAgent)(state));\n\nexport const endTurn = () => ({type: END_TURN,});\n\n//TODO different range depending on type\nconst attackCondition = getTarget => getAgent => state => calculateDistance(getAgent(state))(getTarget(getAgent)(state)) <= 1;\n\nexport const attack = getAgent => ({targetId}) => {\n  const getTarget = () => selectItemById(targetId);\n  return {\n    type: ATTACK,\n    payload: {\n      creator: 'attack',\n      creatorArguments: {targetId},\n      getAgent,\n      getTarget,\n      condition: attackCondition(getTarget),\n    }\n  }\n};\n\nexport const setUnitBehaviorAction = getAgent => ({\n  type: SET_UNIT_BEHAVIOR,\n  payload: {\n    getAgent,\n  }\n});\n\nexport const autoAction = getAgent => ({\n  type: AUTO_ACTION,\n  payload: {\n    getAgent,\n  }\n});\n\nconst buildingTypeExists = type => getAgent => state => {\n  return !state.items.some((item) => item.type === type) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n};\n\nexport const buildWarehouse = getAgent => {\n  return {\n    type: BUILD_WAREHOUSE,\n    payload: {\n      creator: 'plantCrop',\n      getAgent,\n      condition: buildingTypeExists(WAREHOUSE),\n    }\n  }\n};\n\nconst farmerHasFarm = getAgent => state => {\n  return state.items.some((item) => item.type === FARM && item.builderId === getAgent(state).id);\n};\n\nconst buildFarmCondition = getAgent => state => !farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nexport const buildFarm = getAgent => {\n  return {\n    type: BUILD_FARM,\n    payload: {\n      creator: 'plantCrop',\n      getAgent,\n      condition: buildFarmCondition,\n    }\n  }\n};\n\nconst plantCropCondition = getAgent => state => farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nexport const plantCrop = getAgent => {\n  return {\n    type: PLANT_CROP,\n    payload: {\n      creator: 'plantCrop',\n      getAgent,\n      condition: plantCropCondition,\n    }\n  }\n};\n\nconst harvestCropCondition = getAgent => state => getItemByXYAndType(state.items)(getAgent(state))(CROP);\n\nexport const harvestCrop = getAgent => {\n  return {\n    type: HARVEST_CROP,\n    payload: {\n      creator: 'harvestCrop',\n      getAgent,\n      condition: harvestCropCondition,\n    }\n  }\n};\n\nconst moveCondition = getTarget => getAgent => state => {\n  const agent = getAgent(state);\n  const target = getTarget(getAgent)(state);\n  return agent && target && !(agent.x === target.x && agent.y === target.y);\n};\n\nexport const moveTowardType = getAgent => type => moveTowardTarget(getAgent)(targetClosestType(type))('moveTowardEvent');\n\nconst getActiveEventTarget = getAgent => state => {\n  const {activeEvent} = getAgent(state);\n  return selectItemById(activeEvent.itemId)(state);\n};\n\nexport const moveTowardEvent = getAgent => moveTowardTarget(getAgent)(getActiveEventTarget)('moveTowardEvent');\n\n//TODO separate item type and if it is a home. hardcoding 'farm' as that is the only home type\nconst targetHome = getAgent => state => state.items.filter(item => item.type === FARM && item.builderId === getAgent(state).id)[0];\n\nexport const moveTowardHome = getAgent => moveTowardTarget(getAgent)(targetHome)('moveTowardHome');\n\nexport const moveTowardTarget = getAgent => getTarget => creator => {\n  const condition = moveCondition(getTarget);\n  //TODO move apCost to reducer\n  const apCost = action => state => 0;\n  return {\n    type: MOVE,\n    payload: {\n      creator,\n      getAgent,\n      getTarget,\n      apCost,\n      condition,\n    }\n  }\n};\n\nconst makePathTarget = getAgent => state => getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nconst makePathCondition = getTarget => getAgent => state => !!getTarget(getAgent)(state);\n\nexport const makePath = getAgent => ({\n  type: MAKE_PATH,\n  payload: {\n    getAgent,\n    getTarget: makePathTarget,\n    condition: makePathCondition(makePathTarget),\n  }\n});\n\nconst unloadResourceCondition = getAgent => state => {\n  const agent = getAgent(state);\n  const getByType = getItemByXYAndType(state.items)(agent);\n  return agent.resources.length > 0 && (getByType(FARM) || getByType(WAREHOUSE));\n};\n\nexport const unloadResource = getAgent => {\n  return {\n    type: UNLOAD_RESOURCE,\n    payload: {\n      getAgent,\n      condition: unloadResourceCondition,\n    }\n  }\n};\n\nconst loadResourceCondition = getAgent => state => {\n  const agent = getAgent(state);\n  const getByType = getItemByXYAndType(state.items)(agent);\n  const target = getByType(FARM) || getByType(WAREHOUSE) || {};\n  return !!target.resources && target.resources.length > 0;\n};\n\nexport const loadResource = getAgent => {\n  return {\n    type: LOAD_RESOURCE,\n    payload: {\n      getAgent,\n      condition: loadResourceCondition,\n    }\n  }\n};\n\nexport const setActiveEvent = getAgent => event => ({\n  type: SET_ACTIVE_EVENT,\n  payload: {\n    getAgent,\n    event,\n  }\n});\n\nexport const trainEventBehavior = getAgent => event => ({\n  type: TRAIN_EVENT,\n  payload: {\n    getAgent,\n    event,\n  }\n});\n\nexport const finishTrainEventBehavior = getAgent => ({\n  type: FINISH_TRAIN_EVENT,\n  payload: {\n    getAgent,\n  }\n});\n\nexport const restart = () => ({type: RESTART, payload: undefined});\n\nexport const setSelectedItem = id => ({type: SET_SELECTED, payload: id});\n\nexport const sleepOneTurn = getAgent => turn => {\n  const condition = getAgent => state => state.turn <= turn;\n  return {\n    type: SLEEP,\n    payload: {\n      getAgent,\n      condition\n    }\n  };\n};\n\nexport const creators = {\n  attack,\n  buildWarehouse,\n  buildFarm,\n  plantCrop,\n  harvestCrop,\n  moveTowardType,\n  moveTowardHome,\n  moveTowardEvent,\n  loadResource,\n  unloadResource,\n};\n\nconst createEvent = type => itemId => turn => ({\n  id: generateId(),\n  type,\n  itemId,\n  turn,\n  local: false,\n});\n\nconst createLocalEvent = type => itemId => turn => agentId => ({\n  ...createEvent(type)(itemId)(turn),\n  agentId,\n  local: true,\n});\n\nconst publishEvents = events => state => {\n  return {...state, events: [...state.events, ...events]}\n};\n//TODO hack, WAREHOUSE is only building that any unit can build\nconst isHome = target => agent => target.builderId === agent.id && target.type !== WAREHOUSE;\n\nconst updateItemsByActivePlayer = fn => state => {\n  const updates = getItemsByPlayer(selectActivePlayerId(state), state.items).map(item => updateItem(fn(item)));\n  return pipe(...updates)(state);\n};\n\nconst replenishAp = state => {\n  const updateFn = item => ({...item, ap: item.ap > 0 ? 10 : item.ap + 10});\n  return updateItemsByActivePlayer(updateFn)(state);\n};\n\nconst cropsGrownEvents = state => {\n  const grownCrops = state.items.filter(plantedShouldGrow(state.turn));\n  const cropEvents = grownCrops.map((item) => (createLocalEvent(CROP_GROWN)(item.id)(state.turn)(item.builderId)));\n  return {...state, events: [...state.events, ...cropEvents]}\n};\n\nconst growCrops = state => updateItems(plantedShouldGrow(state.turn))({type: CROP,})(state);\n\nconst filterOldEvents = state => ({\n  ...state,\n  events: state.events.filter(e => e.turn === state.turn)\n});\n\nconst addEventsToUnits = state => {\n  const updateFn = item => (\n    {\n      ...item,\n      events: [...item.events, ...state.events.filter(event => isEventVisible(item.id)(event) && (hasBehaviorForEvent(item)(event)(state) || item.training))]\n    });\n  return updateItemsByActivePlayer(updateFn)(state);\n};\n\nconst setNextTurn = state => ({...state, turn: nextTurn(state.turn, selectActivePlayerId(state))});\n\nconst setNextPlayer = state => ({\n  ...state,\n  activePlayerId: nextPlayer(selectActivePlayerId(state))\n});\n\nconst updateConditionalActions = getAgent => state => {\n  const nextActions = getNextActions(getAgent)(state);\n  return updateItem({...getAgent(state), conditionalActions: nextActions})(state);\n};\n\nconst performCurrentAction = getAgent => state => {\n  const actions = getAgent(state).conditionalActions;\n  return actions.length > 0 ? delegateToReducer(actions[0])(state) : state;\n};\n\nexport default function reducer(state, action) {\n  console.log('Action');\n  console.log(action);\n  const {payload} = action;\n  switch (action.type) {\n    case END_TURN: {\n      return pipe(replenishAp, cropsGrownEvents, growCrops, filterOldEvents, addEventsToUnits, setNextTurn, setNextPlayer)(state);\n    }\n    case AUTO_ACTION: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      if (agent.ap <= 0) {\n        return state;\n      }\n      //TODO simplify\n      const nextActions = getNextActions(getAgent)(state);\n      return nextActions.length > 0 ? pipe(updateConditionalActions(getAgent), performCurrentAction(getAgent), delegateToReducer(action))(state) : pipe(delegateToReducer(setUnitBehaviorAction(getAgent)), delegateToReducer(action))(state);\n    }\n    case RESTART: {\n      const behaviors = state.behaviors;\n      return {...generateState(), behaviors};\n    }\n    case SET_SELECTED: {\n      return {...state, selectedId: payload};\n    }\n    case ATTACK: {\n      const {getAgent, getTarget} = payload;\n      const attacker = getAgent(state);\n      const target = getTarget(getAgent)(state);\n\n      if (!inRange(attacker, target)) {\n        console.log('target not in range!');\n        return state;\n      }\n      const updatedTarget = {...target, hp: target.hp - 1};\n      return pipe(updateItem(updatedTarget), postAction(action))(state)\n    }\n    case MOVE: {\n      const {getAgent, getTarget} = payload;\n      const nodes = itemsToNodes(state.items);\n      const path = findPath(itemToNode(getAgent(state)), itemToNode(getTarget(getAgent)(state)), nodes);\n      const moveAgent = (s) => updateItem(move(getAgent(s), path[1]))(s);\n      return pipe(moveAgent, delegateToReducer(makePath(getAgent)), postAction(action))(state);\n    }\n    case MAKE_PATH: {\n      const {getAgent, getTarget, condition} = payload;\n      if (condition(getAgent)(state)) {\n        const target = getTarget(getAgent)(state);\n        //TODO ensure that visited always exists instead of null check\n        const visited = target.visited ? [...target.visited, state.turn] : [state.turn];\n        const type = visited.length > 3 ? PATH : target.type;\n        return updateItem({...target, visited, type})(state);\n      }\n      return state;\n    }\n    case BUILD_FARM: {\n      return createBuilding(payload.getAgent, FARM, postAction(action)(state));\n    }\n    case BUILD_WAREHOUSE: {\n      return createBuilding(payload.getAgent, WAREHOUSE, postAction(action)(state));\n    }\n    case PLANT_CROP: {\n      return createBuilding(payload.getAgent, PLANTED, postAction(action)(state));\n    }\n    case HARVEST_CROP: {\n      const agent = payload.getAgent(state);\n      const target = getItemByXYAndType(state.items)(agent)(CROP);\n      const addedResourceState = updateItemById({\n        ...agent,\n        resources: [...agent.resources, CROP]\n      }, state);\n      return createBuildingOn(payload.getAgent)(GRASS)(target.id)(postAction(action)(addedResourceState));\n    }\n    case LOAD_RESOURCE: {\n      const agent = payload.getAgent(state);\n      const getByType = getItemByXYAndType(state.items)(agent);\n      const target = getByType(FARM) || getByType(WAREHOUSE);\n      const resource = target.resources[0];\n      const updatedAgent = {...agent, resources: [...agent.resources, resource]};\n      const updatedTarget = {...target, resources: target.resources.slice(1)};\n\n      return pipe(updateItem(updatedAgent), updateItem(updatedTarget), postAction(action))(state);\n    }\n    case UNLOAD_RESOURCE: {\n      const agent = payload.getAgent(state);\n      const getByType = getItemByXYAndType(state.items)(agent);\n      const target = getByType(FARM) || getByType(WAREHOUSE);\n      const resource = agent.resources[0];\n      const updatedTarget = {...target, resources: [...target.resources, resource]};\n      const updatedAgent = {...agent, resources: agent.resources.slice(1)};\n      if (isHome(target)(agent)) {\n        const event = {...createEvent(RESOURCE_PICKUP)(target.id)(state.turn), resource};\n        return pipe(updateItem(updatedAgent), updateItem(updatedTarget), publishEvents([event]), postAction(action))(state);\n      }\n      return pipe(updateItem(updatedAgent), updateItem(updatedTarget), postAction(action))(state);\n    }\n    case TRAIN_EVENT: {\n      const {getAgent, event} = payload;\n      const agent = getAgent(state);\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {\n          name: agent.behaviorName,\n          eventType: event.type,\n          event,\n          conditionalActions: []\n        },\n        training: true,\n      }, state);\n    }\n    case FINISH_TRAIN_EVENT: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const {name, eventType, conditionalActions} = agent.behaviorTraining;\n      const behavior = state.behaviors[name] || {};\n      const updatedBehavior = {\n        ...behavior,\n        name,\n        [eventType]: {\n          eventType,\n          conditionalActions,\n        },\n      };\n      // TODO extract set global and unit behavior\n      const behaviors = {...state.behaviors, [name]: updatedBehavior};\n      const updatedBehaviorState = {\n        ...state,\n        behaviors,\n      };\n\n      console.log(\"set behaviors\");\n      console.log(behaviors);\n      window.localStorage.setItem('behaviors', JSON.stringify(behaviors));\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {},\n        conditionalActions,\n        training: false,\n      }, updatedBehaviorState);\n\n    }\n    case SET_ACTIVE_EVENT : {\n      const {event, getAgent} = payload;\n      const agent = getAgent(state);\n      return updateItemById({...agent, activeEvent: event}, state);\n    }\n    case SET_UNIT_BEHAVIOR: {\n      //TODO call SET_ACTIVE_EVENT or refactor\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const activeEvent = agent.events.length > 0 ? agent.events[0] : {type: DEFAULT_EVENT};\n      const conditionalActions = selectEventBehavior(agent.behaviorName)(activeEvent.type)(state);\n      const unitActions = conditionalActions.map(conditionalAction => {\n        const action = creators[conditionalAction.creator](getAgent)(conditionalAction.creatorArguments);\n        console.log('action');\n        console.log(action);\n          return {\n            ...conditionalAction,\n            payload: {...conditionalAction.payload, getAgent}\n          }\n        }\n      );\n\n      //TODO quickfix to stop endless recursion if there is no valid action for DEFAULT_EVENT\n      console.log(unitActions);\n      if (activeEvent.type === DEFAULT_EVENT && !getNextAction(getAgent)(state)(unitActions)) {\n        return reducer(state, sleepOneTurn(getAgent)(state.turn));\n      }\n      console.log('Updated actions for event: ' + activeEvent.type);\n      return updateItemById({\n        ...agent,\n        activeEvent,\n        events: agent.events.slice(1),\n        conditionalActions: [...unitActions]\n      }, state);\n    }\n    case SLEEP: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      return pipe(updateItem({\n        ...agent,\n        activeEvent: {type: SLEEPING},\n        conditionalActions: [action]\n      }), consumeAp(action))(state)\n    }\n    default:\n      return state;\n  }\n};\n","import React, {useContext} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport {ReducerDispatch} from \"./App\";\nimport {setSelectedItem} from \"./reducer\";\nimport {\n  CROP,\n  DEAD,\n  FARM,\n  GRASS,\n  HUMAN,\n  MOUNTED,\n  PATH,\n  PLANTED,\n  PLAYER2,\n  ROCK,\n  TREE,\n  WAREHOUSE,\n  WATER\n} from \"./itemTypes\";\n\nconst typeIcons = {\n  [PLAYER2]: 'android',\n  [HUMAN]: 'directions_walk',\n  [MOUNTED]: 'direction_bike',\n  [GRASS]: 'crop_free',\n  [TREE]: 'nature',\n  [WATER]: 'waves',\n  [ROCK]: 'landscape',\n  [DEAD]: 'airline_seat_flat',\n  [FARM]: 'home',\n  [CROP]: 'local_florist',\n  [PLANTED]: 'minimize',\n  [WAREHOUSE]: 'layers',\n  [PATH]: 'grain',\n\n};\n\nconst getIcon = (elem) => elem.hp < 1 ? typeIcons[DEAD] : typeIcons[elem.type] || typeIcons[GRASS];\n\nconst createMatrix = (n = 10, items) => {\n  let matrix = [];\n  for (let y = 0; y < n; y++) {\n    matrix[y] = [];\n    for (let x = 0; x < n; x++) {\n      matrix[y][x] = createAtPosition(items, x, y);\n    }\n  }\n  return matrix;\n};\n\nconst createAtPosition = (items = [], x, y) => {\n  return items.find((item) => item.x === x && item.y === y) || {x: x, y: y, type: '.'}\n};\n\nfunction PlayingFieldCell({elem}) {\n  const {dispatch} = useContext(ReducerDispatch);\n  const handleSetSelected = (id) => () => {\n    dispatch(setSelectedItem(id));\n  };\n  return (\n    <TableCell>\n      <IconButton\n        onClick={handleSetSelected(elem.id)}><Icon>{getIcon(elem)}</Icon></IconButton>\n    </TableCell>);\n}\n\nexport default function PlayingField() {\n  const {items} = useContext(ReducerDispatch).state;\n  const matrix = createMatrix(10, items);\n  return <div className=\"PlayingField\">\n    <Table padding=\"none\">\n      <TableBody>\n        {\n          (matrix.map(row =>\n            <TableRow key={row[0].y}>{\n              row.map(elem => <PlayingFieldCell key={'x' + elem.x + 'y' + elem.y} elem={elem}/>)}\n            </TableRow>))\n        }\n      </TableBody>\n    </Table>\n  </div>;\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport {getEnemyItems, getItemsByPlayer} from \"./itemsUtil\";\nimport {ReducerDispatch} from \"./App\";\nimport {\n  attack,\n  autoAction,\n  buildFarm,\n  buildWarehouse,\n  endTurn,\n  harvestCrop,\n  loadResource,\n  moveTowardEvent,\n  moveTowardHome,\n  moveTowardType,\n  plantCrop,\n  selectItemById,\n  selectSelectedItem,\n  unloadResource\n} from \"./reducer\";\nimport {GRASS, WAREHOUSE} from \"./itemTypes\";\n\nconst unitHasAp = getAgent => state => {\n  const item = getAgent(state);\n  return item.ap > 0 && item.playerId === state.activePlayerId;\n};\n\nconst playerItemsWithAp = (playerId) => (items) => {\n  return getItemsByPlayer(playerId, items)\n    .filter(item => item.ap > 0);\n};\n\nfunction OrderButton({action, children}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  if (!shouldDisplayOrder(action)(state)) {\n    return null;\n  }\n  const handleAction = () => dispatch(action);\n  return (<Button onClick={handleAction}>{children}</Button>);\n}\n\nfunction TurnButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const {items, activePlayerId} = state;\n  const handleEndTurn = (playerId) => () => {\n    const playerItems = playerItemsWithAp(playerId)(items);\n    playerItems.forEach(playerItem => {\n      dispatch(autoAction(selectItemById(playerItem.id)));\n    });\n    dispatch(endTurn());\n  };\n  return (\n    <Button onClick={handleEndTurn(activePlayerId)}>Turn({activePlayerId}): {state.turn}</Button>\n  );\n}\n\nconst shouldDisplayOrder = action => state => {\n  const {getAgent, condition} = action.payload;\n  return !!getAgent && unitHasAp(getAgent)(state) && condition(getAgent)(state);\n};\n\nfunction AttackButton({targetId}) {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = attack(getAgent)({targetId});\n  return (<OrderButton action={action}>Attack Enemy</OrderButton>);\n}\n\nfunction MoveToGrassButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = moveTowardType(getAgent)(GRASS);\n  return (<OrderButton action={action}>Move To {'Grass'}</OrderButton>);\n}\n\nfunction MoveToWarehouseButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = moveTowardType(getAgent)(WAREHOUSE);\n  return (<OrderButton action={action}>Move To {'Warehouse'}</OrderButton>);\n}\n\nfunction MoveToEventButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = moveTowardEvent(getAgent);\n  return (<OrderButton action={action}>Move To {'Event'}</OrderButton>);\n}\n\nfunction MoveToHomeButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = moveTowardHome(getAgent);\n  return (<OrderButton action={action}>Move To {'Home'}</OrderButton>);\n}\n\nfunction BuildWarehouseButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = buildWarehouse(getAgent);\n  return (<OrderButton action={action}>Build warehouse</OrderButton>);\n}\n\nfunction BuildFarmButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = buildFarm(getAgent);\n  return (<OrderButton action={action}>Build farm</OrderButton>);\n}\n\nfunction PlantCropButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = plantCrop(getAgent);\n  return (<OrderButton action={action}>PlantCrop</OrderButton>);\n}\n\nfunction HarvestCropButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = harvestCrop(getAgent);\n  return (<OrderButton action={action}>HarvestCrop</OrderButton>);\n}\n\nfunction UnloadResourceButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = unloadResource(getAgent);\n  return (<OrderButton action={action}>Unload Resource</OrderButton>);\n}\n\nfunction LoadResourceButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = loadResource(getAgent);\n  return (<OrderButton action={action}>Load Resource</OrderButton>);\n}\n\nexport default function Orders() {\n  const {state} = useContext(ReducerDispatch);\n  return <div>\n    <Card>\n      <CardContent>\n        <TurnButton/>\n        {\n          getEnemyItems(state).map((enemy) => <AttackButton key={enemy.id} targetId={enemy.id}/>)\n        }\n        <MoveToGrassButton/>\n        <MoveToEventButton/>\n        <MoveToHomeButton/>\n        <MoveToWarehouseButton/>\n        <BuildWarehouseButton/>\n        <BuildFarmButton/>\n        <PlantCropButton/>\n        <HarvestCropButton/>\n        <UnloadResourceButton/>\n        <LoadResourceButton/>\n      </CardContent>\n    </Card>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {ReducerDispatch} from \"./App\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  finishTrainEventBehavior,\n  selectItemById,\n  selectSelectedItem,\n  setActiveEvent,\n  trainEventBehavior\n} from \"./reducer\";\nimport {DEFAULT_EVENT} from \"./events/eventTypes\";\nimport {isEventVisible} from \"./events/eventUtils\";\n\nfunction UnitCard() {\n  const {state} = useContext(ReducerDispatch);\n  const selected = selectSelectedItem(state);\n  if (selected === undefined) {\n    return null;\n  }\n  const {id, playerId, x, y, hp, ap, type, behaviorName, resources} = selected;\n  const maxHp = 5;\n  const relativeHp = hp / maxHp * 100;\n  const defaultEvent = {type: DEFAULT_EVENT, itemId: selected.id};\n  return (\n    <Card>\n      <CardContent>\n        <Typography>id:{id}</Typography>\n        <Typography>player:{playerId}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>hp:{hp}</Typography>\n        <Typography>ap:{ap}</Typography>\n        <Typography>type:{type}</Typography>\n        <Typography>behavior:{behaviorName}</Typography>\n        <Typography>resource: {resources} </Typography>\n        <LinearProgress variant=\"determinate\" value={relativeHp}/>\n        <TrainEventButton event={defaultEvent}/>\n        <FinishTrainEventButton/>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction SelectEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectSelectedItem;\n  const agent = getAgent(state);\n  if (agent === undefined || agent.activeEvent === event) {\n    return null;\n  }\n  const handleSelectEvent = () => dispatch(setActiveEvent(getAgent)(event));\n  return (<Button color='default' onClick={handleSelectEvent}>Select event {event.type}</Button>);\n}\n\nfunction TrainEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const agent = getAgent(state);\n  if (!agent || agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch(setActiveEvent(getAgent)(event));\n    dispatch(trainEventBehavior(getAgent)(event));\n  };\n  return (<Button color='default' onClick={handleTrainEvent}>Train {event.type} Behavior</Button>);\n}\n\nfunction FinishTrainEventButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const agent = getAgent(state);\n  if (!agent || !agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => dispatch(finishTrainEventBehavior(getAgent));\n  return (\n    <Button color='default' onClick={handleTrainEvent}>Finish train event Behavior</Button>);\n}\n\nfunction EventCard({event}) {\n  const {state} = useContext(ReducerDispatch);\n  const {x, y, type} = (event.itemId ? selectItemById(event.itemId)(state) || {} : {});\n  return (\n    <Card>\n      <CardContent>\n        <Typography>type:{event.type}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>itemType:{type}</Typography>\n        <SelectEventButton event={event}/>\n        <TrainEventButton event={event}/>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction EventsInfo() {\n  const {state} = useContext(ReducerDispatch);\n  const {events} = state;\n  const selectedUnit = selectSelectedItem(state);\n  const visibleEvents = events.filter(isEventVisible(selectedUnit.id));\n  const newEvents = selectedUnit.activeEvent ? [selectedUnit.activeEvent, ...visibleEvents] : visibleEvents;\n  return newEvents.map((event, index) => <EventCard key={\"event\" + index} event={event}/>);\n}\n\nexport default function InfoPane() {\n  return <div>\n    <UnitCard/>\n    <EventsInfo/>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ReducerDispatch} from \"./App\";\nimport {restart} from \"./reducer\";\n\nexport default function WinDialog() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n\n\n  const handleRestart = () => dispatch(restart());\n  return (\n    <div>\n      <Dialog open={!!state.winner} aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{`The winner is ${state.winner}!`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">Play another round?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Yes</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport PlayingField from './PlayingField';\nimport Orders from './Orders';\nimport InfoPane from './InfoPane';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport WinDialog from \"./WinDialog\";\nimport reducer from \"./reducer\";\nimport {generateState} from \"./stateGenerator\";\n\nexport const ReducerDispatch = React.createContext(null);\n\nconst initialState = generateState();\n\nexport default function App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Grid container justify=\"center\" direction=\"row\" spacing={24}>\n        <ReducerDispatch.Provider value={{state, dispatch}}>\n          <WinDialog/>\n          <Grid item xs>\n            <InfoPane/>\n          </Grid>\n          <Grid item xs>\n            <PlayingField size=\"10\"/>\n          </Grid>\n          <Grid item xs={4}>\n            <Orders/>\n          </Grid>\n        </ReducerDispatch.Provider>\n      </Grid>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}