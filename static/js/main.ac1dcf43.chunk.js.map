{"version":3,"sources":["itemTypes.js","events/eventTypes.js","stateGenerator.js","itemsUtil.js","movement.js","functional.js","events/eventUtils.js","reducer.js","PlayingField.js","Orders.js","InfoPane.js","WinDialog.js","App.js","serviceWorker.js","index.js"],"names":["GRASS","TREE","FARM","CROP","PLANTED","WAREHOUSE","PATH","DEFAULT_EVENT","RESOURCE_PICKUP","PLAYERS","generateState","console","log","items","generateItems","turn","activePlayerId","selectedId","id","winner","undefined","events","type","itemId","behaviors","training","generateId","size","arguments","length","units","hp","playerId","ap","behaviorName","conditionalActions","activeEvent","resources","genPos","generatePosition","concat","defaultValues","i","push","generateDefaultItems","points","generateRandomMatrix","map","item","Object","objectSpread","shift","array","Array","from","keys","matrix","x","y","flat","shuffleArray","j","Math","floor","random","_ref","getItemById","find","getItemsByPlayer","filter","isPlayer","matchPlayer","getItemByXYAndType","selectedItem","findItemByType","getItemsByXY","getEnemyItems","state","player","flatMap","otherPlayer","inRange","attacker","target","range","abs","updateItem","updatedItem","updateItemByIdFn","updateItemById","updateItemFn","predicate","el","toward","mover","xd","yd","sign","move","direction","_direction","calculateDistance","agent","pipe","_len2","fns","_key2","reduce","v","f","isEventVisible","agentId","event","local","ATTACK","AUTO_ACTION","BUILD_FARM","BUILD_WAREHOUSE","END_TURN","FINISH_TRAIN_EVENT","HARVEST_CROP","MOVE","MAKE_PATH","PLANT_CROP","RESTART","SET_ACTIVE_EVENT","SET_SELECTED","SET_UNIT_BEHAVIOR","TRAIN_EVENT","UNLOAD_RESOURCE","LOAD_RESOURCE","SLEEP","selectItemById","selectSelectedItem","selectEventBehavior","eventType","selectActivePlayerId","nextPlayer","index","findIndex","delegateToReducer","action","reducer","consumeAp","condition","payload","getAgent","behaviorTraining","conditionalAction","slice","postAction","createBuilding","builder","createBuildingOn","buildingType","targetId","clearedItems","building","builderId","createdTurn","toConsumableArray","plantedShouldGrow","getNextAction","endTurn","attackCondition","getTarget","attack","setUnitBehaviorAction","autoAction","buildWarehouse","some","farmerHasFarm","farmCondition","buildFarm","plantCropCondition","plantCrop","harvestCropCondition","harvestCrop","moveTowardTarget","moveCondition","makePathTarget","makePath","unloadResourceCondition","getByType","unloadResource","loadResourceCondition","loadResource","setActiveEvent","trainEventBehavior","finishTrainEventBehavior","restart","setSelectedItem","sleepOneTurn","createEvent","publishEvents","isHome","updateItemsByActivePlayer","fn","updates","apply","replenishAp","cropsGrownEvents","cropEvents","createLocalEvent","growCrops","updateItems","filterOldEvents","e","addEventsToUnits","hasBehaviorForEvent","setNextTurn","setNextPlayer","nextAction","updatedTarget","s","visited","addedResourceState","resource","updatedAgent","name","_agent5$behaviorTrain","behavior","updatedBehavior","defineProperty","updatedBehaviorState","unitActions","typeIcons","_typeIcons","getIcon","elem","createMatrix","n","createAtPosition","PlayingFieldCell","dispatch","useContext","ReducerDispatch","react_default","a","createElement","TableCell_default","IconButton_default","onClick","Icon_default","PlayingField","className","Table_default","padding","TableBody_default","row","TableRow_default","key","playerItemsWithAp","OrderButton","children","_useContext","shouldDisplayOrder","Button_default","TurnButton","_useContext2","forEach","playerItem","_action$payload","unitHasAp","AttackButton","_ref2","targetClosestType","sort","firstEl","secondEl","distance","targetHome","MoveToGrassButton","MoveButton","targetName","getActiveEventTarget","MoveToEventButton","MoveToHomeButton","MoveToWarehouseButton","_ref3","BuildWarehouseButton","BuildFarmButton","PlantCropButton","HarvestCropButton","UnloadResourceButton","LoadResourceButton","Orders","Card_default","CardContent_default","enemy","UnitCard","selected","relativeHp","defaultEvent","Typography_default","LinearProgress_default","variant","value","TrainEventButton","FinishTrainEventButton","SelectEventButton","color","_useContext3","_useContext4","EventCard","_ref4","EventsInfo","selectedUnit","visibleEvents","InfoPane","WinDialog","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","React","createContext","initialState","Boolean","window","location","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","slicedToArray","CssBaseline_default","Grid_default","container","justify","spacing","Provider","xs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac1dcf43.chunk.js","sourcesContent":["export const PLAYER2 = 'o';\nexport const HUMAN = 'x';\nexport const MOUNTED = 'mounted';\nexport const GRASS = 'grass';\nexport const TREE = 'tree';\nexport const WATER = 'water';\nexport const ROCK = 'rock';\nexport const DEAD = 'dead';\nexport const FARM = 'farm';\nexport const CROP = 'crop';\nexport const PLANTED = 'planted';\nexport const WAREHOUSE = 'warehouse';\nexport const PATH = 'path';","export const DEFAULT_EVENT = 'DEFAULT_EVENT';\nexport const RESOURCE_PICKUP = 'RESOURCE_PICKUP';\nexport const CROP_GROWN = 'CROP_GROWN';","import {HUMAN, GRASS, PLAYER2, ROCK, TREE, WATER} from \"./itemTypes\";\nimport {DEFAULT_EVENT} from \"./events/eventTypes\";\n\nexport const PLAYERS = ['human', 'ai'];\n\nexport const generateState = () => {\n  console.log(\"generate state\");\n\n  const items = generateItems();\n  return {\n    turn: 0,\n    activePlayerId: PLAYERS[0],\n    items,\n    selectedId: items[0].id,\n    winner: undefined,\n    events: [{type: 'ENEMY_SPOTTED', itemId: items[1].id}, {type: 'GAME_STARTED'}],\n    behaviors: {},\n    training: false,\n  };\n};\n\nlet itemId = 0;\n\nexport const generateId = () => {\n  itemId++;\n  return itemId;\n};\n\nconst generateDefaultItems = (size) => {\n  const defaultValues = [];\n  for (let i = 0; i < size; i++) {\n    defaultValues.push({id: generateId(), type: GRASS});\n  }\n  return defaultValues;\n};\n\nconst generateItems = (size = 10) => {\n  const units = [\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: PLAYER2,\n      playerId: 'ai',\n      ap: 1,\n      behaviorName: 'brigand',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'farmer',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n    {\n      id: generateId(),\n      hp: 5,\n      type: HUMAN,\n      playerId: 'human',\n      ap: 1,\n      behaviorName: 'hauler',\n      conditionalActions: [],\n      events: [],\n      activeEvent: {type: DEFAULT_EVENT},\n      resources: [],\n    },\n  ];\n\n  const items = [\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: TREE},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: ROCK},\n    {id: generateId(), type: WATER},\n    {id: generateId(), type: WATER},\n    {id: generateId(), type: WATER},\n  ];\n\n  const genPos = generatePosition(size);\n  return genPos(units).concat(genPos(items.concat(generateDefaultItems(size * size - items.length))));\n};\n\nconst generatePosition = (size) => (items) => {\n  const points = generateRandomMatrix(size);\n  return items.map((item) => ({...item, ...points.shift()}));\n};\n\nconst generateRandomMatrix = (size) => {\n  const array = Array.from(Array(size).keys());\n  const matrix = array.map((x) => {\n    return array.map((y) => {\n      return {x, y};\n    })\n  }).flat();\n  shuffleArray(matrix);\n  return matrix;\n};\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};","import {PLAYERS} from \"./stateGenerator\";\n\nexport const isPlayer = (playerId, item) => item.playerId === playerId;\nexport const matchPlayer = (playerId) => (item) => isPlayer(playerId, item);\nexport const getItemById = (id, items) => items.find((item) => item.id === id);\nexport const getItemsByPlayer = (playerId, items) => items.filter(matchPlayer(playerId));\nexport const getItemsByXY = items => ({x, y}) => items.filter((item) => item.x === x && item.y === y);\nexport const getItemByXYAndType = items => selectedItem => type => findItemByType(getItemsByXY(items)(selectedItem))(type);\nexport const findItemByType = items => type => items.find(item => item.type === type);\nexport const removeItemById = (id, items) => items.filter((item) => item.id !== id);\nexport const getEnemyItems = (state) => {\n  const otherPlayers = PLAYERS.filter((player) => state.activePlayerId !== player);\n  return otherPlayers.flatMap((otherPlayer) => getItemsByPlayer(otherPlayer, state.items));\n};\nexport const inRange = (attacker, target, range = 1) => {\n  return Math.abs(target.x - attacker.x) + Math.abs(target.y - attacker.y) <= range;\n};\n\nexport const updateItem = updatedItem => state => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const updateItemById = (updatedItem, state) => {\n  const items = state.items.map(updateItemByIdFn(updatedItem));\n  return ({...state, items});\n};\n\nexport const replaceItems = items => replacements => {\n  return items.map(obj => replacements.find(o => o.id === obj.id) || obj);\n};\n\nexport const updateItems = predicate => updatedItem => state => {\n  const items = state.items.map(updateItemFn(predicate)(updatedItem));\n  return {...state, items};\n};\n\nexport const updateItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? {...el, ...updatedItem} : el);\n};\n\nexport const replaceItemFn = predicate => updatedItem => {\n  return el => (predicate(el) ? updatedItem : el);\n};\n\nexport const updateItemByIdFn = (updatedItem) => {\n  return updateItemFn(el => updatedItem.id === el.id)(updatedItem);\n};\n\nexport const matchId = (id) => {\n  return (item) => item.id === id;\n};","export const toward = target => mover => {\n  const xd = target.x - mover.x;\n  const yd = target.y - mover.y;\n  return Math.abs(xd) > Math.abs(yd) ? {x: Math.sign(xd), y: 0} : {x: 0, y: Math.sign(yd)};\n};\n\nexport const move = (mover, direction) => {\n  const {x, y} = direction(mover);\n  return {...mover, x: (mover.x + x), y: (mover.y + y)}\n};\n\nexport const calculateDistance = agent => target => Math.abs(agent.x - target.x) + Math.abs(agent.y - target.y);\n\nexport const compareDistance = agent => (firstEl, secondEl) => {\n  const distance = calculateDistance(agent);\n  return distance(firstEl) - distance(secondEl);\n};","export const compose = (...fns) => (x) => fns.reduceRight((v, f) => f(v), x);\nexport const pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\n","import {selectEventBehavior} from \"../reducer\";\n\nexport const hasBehaviorForEvent = item => event => state => {\n  const behavior = selectEventBehavior(item.behaviorName)(event.type)(state);\n  return !!behavior.length;\n};\n\nexport const isEventVisible = agentId => event => !event.local || agentId === event.agentId;\n","import {generateId, generateState, PLAYERS} from \"./stateGenerator\";\nimport {\n  getItemById,\n  getItemByXYAndType,\n  getItemsByPlayer,\n  inRange,\n  removeItemById,\n  updateItem,\n  updateItemById,\n  updateItems\n} from \"./itemsUtil\";\nimport {calculateDistance, move, toward} from \"./movement\";\nimport {pipe} from \"./functional\";\nimport {CROP, FARM, GRASS, PATH, PLANTED, WAREHOUSE} from \"./itemTypes\";\nimport {CROP_GROWN, DEFAULT_EVENT, RESOURCE_PICKUP} from \"./events/eventTypes\";\nimport {hasBehaviorForEvent, isEventVisible} from \"./events/eventUtils\";\n\nexport const ATTACK = 'brigands/reducer/ATTACK';\nexport const AUTO_ACTION = 'brigands/reducer/AUTO_ACTION';\nexport const BUILD_FARM = 'brigands/reducer/BUILD_FARM';\nexport const BUILD_WAREHOUSE = 'brigands/reducer/BUILD_WAREHOUSE';\nexport const END_TURN = 'brigands/reducer/END_TURN';\nexport const FINISH_TRAIN_EVENT = 'brigands/reducer/FINISH_TRAIN_EVENT';\nexport const HARVEST_CROP = 'brigands/reducer/HARVEST_CROP';\nexport const MOVE = 'brigands/reducer/MOVE';\nexport const MAKE_PATH = 'brigands/reducer/MAKE_PATH';\nexport const PLANT_CROP = 'brigands/reducer/PLANT_CROP';\nexport const RESTART = 'brigands/reducer/RESTART';\nexport const SET_ACTIVE_EVENT = 'brigands/reducer/SET_ACTIVE_EVENT';\nexport const SET_SELECTED = 'brigands/reducer/SET_SELECTED';\nexport const SET_UNIT_BEHAVIOR = 'brigands/reducer/SET_UNIT_BEHAVIOR';\nexport const TRAIN_EVENT = 'brigands/reducer/TRAIN_EVENT';\nexport const UNLOAD_RESOURCE = 'brigands/reducer/UNLOAD_RESOURCE';\nexport const LOAD_RESOURCE = 'brigands/reducer/LOAD_RESOURCE';\nexport const SLEEP = 'brigands/reducer/SLEEP';\n\nexport const selectItemById = id => state => getItemById(id, state.items);\n\nexport const selectSelectedItem = state => getItemById(state.selectedId, state.items);\n\nexport const selectEventBehavior = behaviorName => eventType => state => {\n  const behavior = state.behaviors[behaviorName] || {};\n  const eventBehavior = behavior[eventType] || {};\n  return eventBehavior.conditionalActions || [];\n};\n\nexport const selectEvents = state => state.events;\n\nexport const selectActivePlayerId = state => state.activePlayerId;\n\nconst nextPlayer = (activePlayerId) => {\n  const index = PLAYERS.findIndex((id) => id === activePlayerId);\n  return PLAYERS[(index + 1) % PLAYERS.length];\n};\n\nconst nextTurn = (turn, activePlayerId) => PLAYERS.slice(-1)[0] === activePlayerId ? turn + 1 : turn;\n\nconst getWinner = (state) => {\n  return isLoser('ai', state.items) ? 'human' : isLoser('human', state.items) ? 'ai' : undefined;\n};\n\nconst isLoser = (playerId, items) => {\n  return getItemsByPlayer(playerId, items).every((item) => item.hp <= 0);\n};\n\nconst delegateToReducer = action => state => reducer(state, action);\n\nconst consumeAp = (action, state) => {\n  const {condition} = action.payload;\n  // TODO require getAgent\n  const agent = action.payload.agentId !== undefined ? selectItemById(action.payload.agentId)(state) : action.payload.getAgent(state);\n  const selectedItem = {\n    ...agent,\n    ap: 0,\n    action,\n    condition,\n  };\n  // TODO rewrite without if\n  if (!!selectedItem.training) {\n    selectedItem.behaviorTraining.conditionalActions.push(action);\n  } else if (selectedItem.conditionalActions) {\n    const index = selectedItem.conditionalActions.findIndex(conditionalAction => conditionalAction.type === action.type);\n    if (index > 0) {\n      selectedItem.conditionalActions = selectedItem.conditionalActions.slice(index);\n    }\n  }\n  return updateItem(selectedItem)(state);\n};\n\nconst postAction = action => state => consumeAp(action, state);\n\nconst createBuilding = (getAgent, type, state) => {\n  const builder = getAgent(state);\n  const target = getItemByXYAndType(state.items)(builder)(GRASS);\n  return createBuildingOn(getAgent)(type)(target.id)(state);\n};\n\nconst createBuildingOn = getAgent => buildingType => targetId => state => {\n  const builder = getAgent(state);\n  const clearedItems = removeItemById(targetId, state.items);\n  const building = {\n    id: generateId(),\n    builderId: builder.id,\n    x: builder.x,\n    y: builder.y,\n    type: buildingType,\n    createdTurn: state.turn,\n    resources: [],\n  };\n  return {...state, items: [...clearedItems, building]}\n};\n\nconst plantedShouldGrow = turn => item => item.type === PLANTED && item.createdTurn + 5 <= turn;\n\n\nconst getNextAction = getAgent => state => conditionalActions => conditionalActions.find(conditionalAction => conditionalAction.payload.condition(getAgent)(state));\n\nexport const endTurn = () => ({type: END_TURN,});\n\n//TODO different range depending on type\nconst attackCondition = getTarget => getAgent => state => calculateDistance(getAgent(state))(getTarget(getAgent)(state)) <= 1;\n\nexport const attack = getAgent => getTarget => {\n  return {\n    type: ATTACK,\n    payload: {\n      getAgent,\n      getTarget,\n      condition: attackCondition(getTarget),\n    }\n  }\n};\n\nexport const setUnitBehaviorAction = getAgent => ({\n  type: SET_UNIT_BEHAVIOR,\n  payload: {\n    getAgent,\n  }\n});\n\nexport const autoAction = getAgent => ({\n  type: AUTO_ACTION,\n  payload: {\n    getAgent,\n  }\n});\n\nconst buildingTypeExists = type => getAgent => state => {\n  return !state.items.some((item) => item.type === type) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n};\n\nexport const buildWarehouse = getAgent => {\n  return {\n    type: BUILD_WAREHOUSE,\n    payload: {\n      getAgent,\n      condition: buildingTypeExists(WAREHOUSE),\n    }\n  }\n};\n\nconst farmerHasFarm = getAgent => state => {\n  return state.items.some((item) => item.type === FARM && item.builderId === getAgent(state).id);\n};\n\nconst farmCondition = getAgent => state => !farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nexport const buildFarm = getAgent => {\n  return {\n    type: BUILD_FARM,\n    payload: {\n      getAgent,\n      condition: farmCondition,\n    }\n  }\n};\n\nconst plantCropCondition = getAgent => state => farmerHasFarm(getAgent)(state) && getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nexport const plantCrop = getAgent => {\n  return {\n    type: PLANT_CROP,\n    payload: {\n      getAgent,\n      condition: plantCropCondition,\n    }\n  }\n};\n\nconst harvestCropCondition = getAgent => state => getItemByXYAndType(state.items)(getAgent(state))(CROP);\n\nexport const harvestCrop = getAgent => {\n  return {\n    type: HARVEST_CROP,\n    payload: {\n      getAgent,\n      condition: harvestCropCondition,\n    }\n  }\n};\n\nconst moveCondition = getTarget => getAgent => state => {\n  const agent = getAgent(state);\n  const target = getTarget(getAgent)(state);\n  return agent && target && !(agent.x === target.x && agent.y === target.y);\n};\n\nexport const moveTowardTarget = getAgent => getTarget => {\n  const condition = moveCondition(getTarget);\n  return {\n    type: MOVE,\n    payload: {\n      getAgent,\n      getTarget,\n      condition,\n    }\n  }\n};\n\nconst makePathTarget = getAgent => state => getItemByXYAndType(state.items)(getAgent(state))(GRASS);\n\nconst makePathCondition = getTarget => getAgent => state => !!getTarget(getAgent)(state);\n\nexport const makePath = getAgent => ({\n  type: MAKE_PATH,\n  payload: {\n    getAgent,\n    getTarget: makePathTarget,\n    condition: makePathCondition(makePathTarget),\n  }\n});\n\nconst unloadResourceCondition = getAgent => state => {\n  const agent = getAgent(state);\n  const getByType = getItemByXYAndType(state.items)(agent);\n  return agent.resources.length > 0 && (getByType(FARM) || getByType(WAREHOUSE));\n};\n\nexport const unloadResource = getAgent => {\n  return {\n    type: UNLOAD_RESOURCE,\n    payload: {\n      getAgent,\n      condition: unloadResourceCondition,\n    }\n  }\n};\n\nconst loadResourceCondition = getAgent => state => {\n  const agent = getAgent(state);\n  const getByType = getItemByXYAndType(state.items)(agent);\n  const target = getByType(FARM) || getByType(WAREHOUSE) || {};\n  return !!target.resources && target.resources.length > 0;\n};\n\nexport const loadResource = getAgent => {\n  return {\n    type: LOAD_RESOURCE,\n    payload: {\n      getAgent,\n      condition: loadResourceCondition,\n    }\n  }\n};\n\nexport const setActiveEvent = getAgent => event => ({\n  type: SET_ACTIVE_EVENT,\n  payload: {\n    getAgent,\n    event,\n  }\n});\n\nexport const trainEventBehavior = getAgent => event => ({\n  type: TRAIN_EVENT,\n  payload: {\n    getAgent,\n    event,\n  }\n});\n\nexport const finishTrainEventBehavior = getAgent => ({\n  type: FINISH_TRAIN_EVENT,\n  payload: {\n    getAgent,\n  }\n});\n\nexport const restart = () => ({type: RESTART, payload: undefined});\n\nexport const setSelectedItem = id => ({type: SET_SELECTED, payload: id});\n\nexport const sleepOneTurn = getAgent => turn => {\n  //TODO refactor all conditions to accept getAgent\n  //TODO refactor conditionalAction to just be actions\n  const condition = getAgent => state => state.turn <= turn;\n  return {\n    type: SLEEP,\n    payload: {\n      getAgent,\n      condition\n    }\n  };\n};\n\nconst createEvent = type => itemId => turn => ({\n  id: generateId(),\n  type,\n  itemId,\n  turn,\n  local: false,\n});\n\nconst createLocalEvent = type => itemId => turn => agentId => ({\n  ...createEvent(type)(itemId)(turn),\n  agentId,\n  local: true,\n});\n\nconst publishEvents = events => state => {\n  return {...state, events: [...state.events, ...events]}\n};\n//TODO hack, WAREHOUSE is only building that any unit can build\nconst isHome = target => agent => target.builderId === agent.id && target.type !== WAREHOUSE;\n\nconst updateItemsByActivePlayer = fn => state => {\n  const updates = getItemsByPlayer(selectActivePlayerId(state), state.items).map(item => updateItem(fn(item)));\n  return pipe(...updates)(state);\n};\n\nconst replenishAp = state => {\n  const updateFn = item => ({...item, ap: item.ap < 1 ? item.ap + 1 : item.ap});\n  return updateItemsByActivePlayer(updateFn)(state);\n};\n\nconst cropsGrownEvents = state => {\n  const grownCrops = state.items.filter(plantedShouldGrow(state.turn));\n  const cropEvents = grownCrops.map((item) => (createLocalEvent(CROP_GROWN)(item.id)(state.turn)(item.builderId)));\n  return {...state, events: [...state.events, ...cropEvents]}\n};\n\nconst growCrops = state => updateItems(plantedShouldGrow(state.turn))({type: CROP,})(state);\n\nconst filterOldEvents = state => ({\n  ...state,\n  events: state.events.filter(e => e.turn === state.turn)\n});\n\nconst addEventsToUnits = state => {\n  const updateFn = item => (\n    {\n      ...item,\n      events: [...item.events, ...state.events.filter(event => isEventVisible(item.id)(event) && (hasBehaviorForEvent(item)(event)(state) || item.training))]\n    });\n  return updateItemsByActivePlayer(updateFn)(state);\n};\n\nconst setNextTurn = state => ({...state, turn: nextTurn(state.turn, selectActivePlayerId(state))});\n\nconst setNextPlayer = state => ({\n  ...state,\n  activePlayerId: nextPlayer(selectActivePlayerId(state))\n});\n\nexport default function reducer(state, action) {\n  console.log('Action');\n  console.log(action);\n  const {payload} = action;\n  switch (action.type) {\n    case END_TURN: {\n      return pipe(replenishAp, cropsGrownEvents, growCrops, filterOldEvents, addEventsToUnits, setNextTurn, setNextPlayer)(state);\n    }\n    case AUTO_ACTION: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const nextAction = getNextAction(getAgent)(state)(agent.conditionalActions);\n      return nextAction ? delegateToReducer(nextAction)(state) : pipe(delegateToReducer(setUnitBehaviorAction(getAgent)), delegateToReducer(action))(state);\n    }\n    case RESTART: {\n      const behaviors = state.behaviors;\n      return {...generateState(), behaviors};\n    }\n    case SET_SELECTED: {\n      return {...state, selectedId: payload};\n    }\n    case ATTACK: {\n      const {getAgent, getTarget} = payload;\n      const attacker = getAgent(state);\n      const target = getTarget(getAgent)(state);\n\n      if (!inRange(attacker, target)) {\n        console.log('target not in range!');\n        return state;\n      }\n      const updatedTarget = {...target, hp: target.hp - 1};\n      return pipe(updateItem(updatedTarget), postAction(action))(state)\n    }\n    case MOVE: {\n      const {getAgent, getTarget} = payload;\n      const moveAgent = (s) => updateItem(move(getAgent(s), toward(getTarget(getAgent)(s))))(s);\n      return pipe(moveAgent, delegateToReducer(makePath(getAgent)), postAction(action))(state);\n    }\n    case MAKE_PATH: {\n      const {getAgent, getTarget, condition} = payload;\n      if (condition(getAgent)(state)) {\n        const target = getTarget(getAgent)(state);\n        //TODO ensure that visited always exists instead of null check\n        const visited = target.visited ? [...target.visited, state.turn] : [state.turn];\n        const type = visited.length > 3 ? PATH : target.type;\n        return updateItem({...target, visited, type})(state);\n      }\n      return state;\n    }\n    case BUILD_FARM: {\n      return createBuilding(payload.getAgent, FARM, consumeAp(action, state));\n    }\n    case BUILD_WAREHOUSE: {\n      return createBuilding(payload.getAgent, WAREHOUSE, consumeAp(action, state));\n    }\n    case PLANT_CROP: {\n      return createBuilding(payload.getAgent, PLANTED, consumeAp(action, state));\n    }\n    case HARVEST_CROP: {\n      const agent = payload.getAgent(state);\n      const target = getItemByXYAndType(state.items)(agent)(CROP);\n      const addedResourceState = updateItemById({\n        ...agent,\n        resources: [...agent.resources, CROP]\n      }, state);\n      return createBuildingOn(payload.getAgent)(GRASS)(target.id)(consumeAp(action, addedResourceState));\n    }\n    case LOAD_RESOURCE: {\n      const agent = payload.getAgent(state);\n      const getByType = getItemByXYAndType(state.items)(agent);\n      const target = getByType(FARM) || getByType(WAREHOUSE);\n      const resource = target.resources[0];\n      const updatedAgent = {...agent, resources: [...agent.resources, resource]};\n      const updatedTarget = {...target, resources: target.resources.slice(1)};\n\n      return pipe(updateItem(updatedAgent), updateItem(updatedTarget), postAction(action))(state);\n    }\n    case UNLOAD_RESOURCE: {\n      const agent = payload.getAgent(state);\n      const getByType = getItemByXYAndType(state.items)(agent);\n      const target = getByType(FARM) || getByType(WAREHOUSE);\n      const resource = agent.resources[0];\n      const updatedTarget = {...target, resources: [...target.resources, resource]};\n      const updatedAgent = {...agent, resources: agent.resources.slice(1)};\n      if (isHome(target)(agent)) {\n        const event = {...createEvent(RESOURCE_PICKUP)(target.id)(state.turn), resource};\n        return pipe(updateItem(updatedAgent), updateItem(updatedTarget), publishEvents([event]), postAction(action))(state);\n      }\n      return pipe(updateItem(updatedAgent), updateItem(updatedTarget), postAction(action))(state);\n    }\n    case TRAIN_EVENT: {\n      const {getAgent, event} = payload;\n      const agent = getAgent(state);\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {\n          name: agent.behaviorName,\n          eventType: event.type,\n          event,\n          conditionalActions: []\n        },\n        training: true,\n      }, state);\n    }\n    case FINISH_TRAIN_EVENT: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const {name, eventType, conditionalActions} = agent.behaviorTraining;\n      const behavior = state.behaviors[name] || {};\n      const updatedBehavior = {\n        ...behavior,\n        name,\n        [eventType]: {\n          eventType,\n          conditionalActions,\n        },\n      };\n      const updatedBehaviorState = {\n        ...state,\n        behaviors: {...state.behaviors, [name]: updatedBehavior}\n      };\n      return updateItemById({\n        ...agent,\n        behaviorTraining: {},\n        conditionalActions,\n        training: false,\n      }, updatedBehaviorState);\n\n    }\n    case SET_ACTIVE_EVENT : {\n      const {event, getAgent} = payload;\n      const agent = getAgent(state);\n      return updateItemById({...agent, activeEvent: event}, state);\n    }\n    case SET_UNIT_BEHAVIOR: {\n      //TODO call SET_ACTIVE_EVENT or refactor\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      const activeEvent = agent.events.length > 0 ? agent.events[0] : {type: DEFAULT_EVENT};\n      const conditionalActions = selectEventBehavior(agent.behaviorName)(activeEvent.type)(state);\n      const unitActions = conditionalActions.map(conditionalAction => {\n          return {\n            ...conditionalAction,\n            payload: {...conditionalAction.payload, getAgent}\n          }\n        }\n      );\n\n      //TODO quickfix to stop endless recursion if there is no valid action for DEFAULT_EVENT\n      console.log(unitActions);\n      if (activeEvent.type === DEFAULT_EVENT && !getNextAction(getAgent)(state)(unitActions)) {\n        return reducer(state, sleepOneTurn(getAgent)(state.turn));\n      }\n      console.log('Updated actions for event: ' + activeEvent.type);\n      return updateItemById({\n        ...agent,\n        activeEvent,\n        events: agent.events.slice(1),\n        conditionalActions: [...unitActions]\n      }, state);\n    }\n    case SLEEP: {\n      const {getAgent} = payload;\n      const agent = getAgent(state);\n      return updateItem({\n        ...agent,\n        activeEvent: {type: 'SLEEPING'},\n        conditionalActions: [action]\n      })(state)\n    }\n    default:\n      return state;\n  }\n};\n","import React, {useContext} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport {ReducerDispatch} from \"./App\";\nimport {setSelectedItem} from \"./reducer\";\nimport {\n  CROP,\n  DEAD,\n  FARM,\n  GRASS,\n  HUMAN,\n  MOUNTED,\n  PATH,\n  PLANTED,\n  PLAYER2,\n  ROCK,\n  TREE,\n  WAREHOUSE,\n  WATER\n} from \"./itemTypes\";\n\nconst typeIcons = {\n  [PLAYER2]: 'android',\n  [HUMAN]: 'directions_walk',\n  [MOUNTED]: 'direction_bike',\n  [GRASS]: 'crop_free',\n  [TREE]: 'nature',\n  [WATER]: 'waves',\n  [ROCK]: 'landscape',\n  [DEAD]: 'airline_seat_flat',\n  [FARM]: 'home',\n  [CROP]: 'local_florist',\n  [PLANTED]: 'minimize',\n  [WAREHOUSE]: 'layers',\n  [PATH]: 'grain',\n\n};\n\nconst getIcon = (elem) => elem.hp < 1 ? typeIcons[DEAD] : typeIcons[elem.type] || typeIcons[GRASS];\n\nconst createMatrix = (n = 10, items) => {\n  let matrix = [];\n  for (let y = 0; y < n; y++) {\n    matrix[y] = [];\n    for (let x = 0; x < n; x++) {\n      matrix[y][x] = createAtPosition(items, x, y);\n    }\n  }\n  return matrix;\n};\n\nconst createAtPosition = (items = [], x, y) => {\n  return items.find((item) => item.x === x && item.y === y) || {x: x, y: y, type: '.'}\n};\n\nfunction PlayingFieldCell({elem}) {\n  const {dispatch} = useContext(ReducerDispatch);\n  const handleSetSelected = (id) => () => {\n    dispatch(setSelectedItem(id));\n  };\n  return (\n    <TableCell>\n      <IconButton\n        onClick={handleSetSelected(elem.id)}><Icon>{getIcon(elem)}</Icon></IconButton>\n    </TableCell>);\n}\n\nexport default function PlayingField() {\n  const {items} = useContext(ReducerDispatch).state;\n  const matrix = createMatrix(10, items);\n  return <div className=\"PlayingField\">\n    <Table padding=\"none\">\n      <TableBody>\n        {\n          (matrix.map(row =>\n            <TableRow key={row[0].y}>{\n              row.map(elem => <PlayingFieldCell key={'x' + elem.x + 'y' + elem.y} elem={elem}/>)}\n            </TableRow>))\n        }\n      </TableBody>\n    </Table>\n  </div>;\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport {getEnemyItems, getItemsByPlayer} from \"./itemsUtil\";\nimport {ReducerDispatch} from \"./App\";\nimport {\n  attack,\n  autoAction,\n  buildFarm,\n  buildWarehouse,\n  endTurn,\n  harvestCrop,\n  loadResource,\n  moveTowardTarget,\n  plantCrop,\n  selectItemById,\n  selectSelectedItem,\n  unloadResource\n} from \"./reducer\";\nimport {compareDistance} from \"./movement\";\nimport {FARM, GRASS, WAREHOUSE} from \"./itemTypes\";\n\nconst unitHasAp = getAgent => state => {\n  const item = getAgent(state);\n  return item.ap > 0 && item.playerId === state.activePlayerId;\n};\n\nconst playerItemsWithAp = (playerId) => (items) => {\n  return getItemsByPlayer(playerId, items)\n    .filter(item => item.ap > 0);\n};\n\nfunction OrderButton({action, children}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  if (!shouldDisplayOrder(action)(state)) {\n    return null;\n  }\n  const handleAction = () => dispatch(action);\n  return (<Button onClick={handleAction}>{children}</Button>);\n}\n\nfunction TurnButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const {items, activePlayerId} = state;\n  const handleEndTurn = (playerId) => () => {\n    const playerItems = playerItemsWithAp(playerId)(items);\n    playerItems.forEach(playerItem => {\n      dispatch(autoAction(selectItemById(playerItem.id)));\n    });\n    dispatch(endTurn());\n  };\n  return (\n    <Button onClick={handleEndTurn(activePlayerId)}>Turn({activePlayerId}): {state.turn}</Button>\n  );\n}\n\nconst shouldDisplayOrder = action => state => {\n  const {getAgent, condition} = action.payload;\n  return !!getAgent && unitHasAp(getAgent)(state) && condition(getAgent)(state);\n};\n\nfunction AttackButton({targetId}) {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const getTarget = () => selectItemById(targetId);\n  const action = attack(getAgent)(getTarget);\n  return (<OrderButton action={action}>Attack Enemy</OrderButton>);\n}\n\nconst targetClosestType = type => getAgent => state => state.items.filter(item => item.type === type).sort(compareDistance(getAgent(state)))[0];\n\n//TODO separate item type and if it is a home. hardcoding 'farm' as that is the only home type\nconst targetHome = getAgent => state => state.items.filter(item => item.type === FARM && item.builderId === getAgent(state).id)[0];\n\nfunction MoveToGrassButton() {\n  const getTarget = targetClosestType(GRASS);\n  return (<MoveButton getTarget={getTarget} targetName={'Grass'}/>);\n}\n\nconst getActiveEventTarget = getAgent => state => {\n  const {activeEvent} = getAgent(state);\n  return selectItemById(activeEvent.itemId)(state);\n};\n\nfunction MoveToEventButton() {\n  return (<MoveButton getTarget={getActiveEventTarget} targetName={'Event'}/>);\n}\n\nfunction MoveToHomeButton() {\n  return (<MoveButton getTarget={targetHome} targetName={'Home'}/>);\n}\n\nfunction MoveToWarehouseButton() {\n  return (<MoveButton getTarget={targetClosestType(WAREHOUSE)} targetName={'Warehouse'}/>);\n}\n\nfunction MoveButton({getTarget, targetName,}) {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = moveTowardTarget(getAgent)(getTarget);\n  return (<OrderButton action={action}>Move To {targetName}</OrderButton>);\n}\n\nfunction BuildWarehouseButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = buildWarehouse(getAgent);\n  return (<OrderButton action={action}>Build warehouse</OrderButton>);\n}\n\nfunction BuildFarmButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = buildFarm(getAgent);\n  return (<OrderButton action={action}>Build farm</OrderButton>);\n}\n\nfunction PlantCropButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = plantCrop(getAgent);\n  return (<OrderButton action={action}>PlantCrop</OrderButton>);\n}\n\nfunction HarvestCropButton() {\n  const {state} = useContext(ReducerDispatch);\n  const agent = selectSelectedItem(state);\n  const getAgent = selectItemById(agent.id);\n  const action = harvestCrop(getAgent);\n  return (<OrderButton action={action}>HarvestCrop</OrderButton>);\n}\n\nfunction UnloadResourceButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = unloadResource(getAgent);\n  return (<OrderButton action={action}>Unload Resource</OrderButton>);\n}\n\nfunction LoadResourceButton() {\n  const {state} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const action = loadResource(getAgent);\n  return (<OrderButton action={action}>Load Resource</OrderButton>);\n}\n\nexport default function Orders() {\n  const {state} = useContext(ReducerDispatch);\n  return <div>\n    <Card>\n      <CardContent>\n        <TurnButton/>\n        {\n          getEnemyItems(state).map((enemy) => <AttackButton key={enemy.id} targetId={enemy.id}/>)\n        }\n        <MoveToGrassButton/>\n        <MoveToEventButton/>\n        <MoveToHomeButton/>\n        <MoveToWarehouseButton/>\n        <BuildWarehouseButton/>\n        <BuildFarmButton/>\n        <PlantCropButton/>\n        <HarvestCropButton/>\n        <UnloadResourceButton/>\n        <LoadResourceButton/>\n      </CardContent>\n    </Card>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {ReducerDispatch} from \"./App\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  finishTrainEventBehavior,\n  selectItemById,\n  selectSelectedItem,\n  setActiveEvent,\n  trainEventBehavior\n} from \"./reducer\";\nimport {DEFAULT_EVENT} from \"./events/eventTypes\";\nimport {isEventVisible} from \"./events/eventUtils\";\n\nfunction UnitCard() {\n  const {state} = useContext(ReducerDispatch);\n  const selected = selectSelectedItem(state);\n  if (selected === undefined) {\n    return null;\n  }\n  const {id, playerId, x, y, hp, ap, type, behaviorName, resources} = selected;\n  const maxHp = 5;\n  const relativeHp = hp / maxHp * 100;\n  const defaultEvent = {type: DEFAULT_EVENT, itemId: selected.id};\n  return (\n    <Card>\n      <CardContent>\n        <Typography>id:{id}</Typography>\n        <Typography>player:{playerId}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>hp:{hp}</Typography>\n        <Typography>ap:{ap}</Typography>\n        <Typography>type:{type}</Typography>\n        <Typography>behavior:{behaviorName}</Typography>\n        <Typography>resource: {resources} </Typography>\n        <LinearProgress variant=\"determinate\" value={relativeHp}/>\n        <TrainEventButton event={defaultEvent}/>\n        <FinishTrainEventButton/>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction SelectEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectSelectedItem;\n  const agent = getAgent(state);\n  if (agent === undefined || agent.activeEvent === event) {\n    return null;\n  }\n  const handleSelectEvent = () => dispatch(setActiveEvent(getAgent)(event));\n  return (<Button color='default' onClick={handleSelectEvent}>Select event {event.type}</Button>);\n}\n\nfunction TrainEventButton({event}) {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const agent = getAgent(state);\n  if (!agent || agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => {\n    dispatch(setActiveEvent(getAgent)(event));\n    dispatch(trainEventBehavior(getAgent)(event));\n  };\n  return (<Button color='default' onClick={handleTrainEvent}>Train {event.type} Behavior</Button>);\n}\n\nfunction FinishTrainEventButton() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n  const getAgent = selectItemById(state.selectedId);\n  const agent = getAgent(state);\n  if (!agent || !agent.training) {\n    return null;\n  }\n  const handleTrainEvent = () => dispatch(finishTrainEventBehavior(getAgent));\n  return (\n    <Button color='default' onClick={handleTrainEvent}>Finish train event Behavior</Button>);\n}\n\nfunction EventCard({event}) {\n  const {state} = useContext(ReducerDispatch);\n  const {x, y, type} = (event.itemId ? selectItemById(event.itemId)(state) || {} : {});\n  return (\n    <Card>\n      <CardContent>\n        <Typography>type:{event.type}</Typography>\n        <Typography>x:{x}</Typography>\n        <Typography>y:{y}</Typography>\n        <Typography>itemType:{type}</Typography>\n        <SelectEventButton event={event}/>\n        <TrainEventButton event={event}/>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction EventsInfo() {\n  const {state} = useContext(ReducerDispatch);\n  const {events} = state;\n  const selectedUnit = selectSelectedItem(state);\n  const visibleEvents = events.filter(isEventVisible(selectedUnit.id));\n  const newEvents = selectedUnit.activeEvent ? [selectedUnit.activeEvent, ...visibleEvents] : visibleEvents;\n  return newEvents.map((event, index) => <EventCard key={\"event\" + index} event={event}/>);\n}\n\nexport default function InfoPane() {\n  return <div>\n    <UnitCard/>\n    <EventsInfo/>\n  </div>\n}\n","import React, {useContext} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {ReducerDispatch} from \"./App\";\nimport {restart} from \"./reducer\";\n\nexport default function WinDialog() {\n  const {state, dispatch} = useContext(ReducerDispatch);\n\n\n  const handleRestart = () => dispatch(restart());\n  return (\n    <div>\n      <Dialog open={!!state.winner} aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{`The winner is ${state.winner}!`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">Play another round?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">Yes</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport PlayingField from './PlayingField';\nimport Orders from './Orders';\nimport InfoPane from './InfoPane';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport WinDialog from \"./WinDialog\";\nimport reducer from \"./reducer\";\nimport {generateState} from \"./stateGenerator\";\n\nexport const ReducerDispatch = React.createContext(null);\n\nconst initialState = generateState();\n\nexport default function App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Grid container justify=\"center\" direction=\"row\" spacing={24}>\n        <ReducerDispatch.Provider value={{state, dispatch}}>\n          <WinDialog/>\n          <Grid item xs>\n            <InfoPane/>\n          </Grid>\n          <Grid item xs>\n            <PlayingField size=\"10\"/>\n          </Grid>\n          <Grid item xs={4}>\n            <Orders/>\n          </Grid>\n        </ReducerDispatch.Provider>\n      </Grid>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}